{"version":3,"file":"static/js/4441.5c9b514a.chunk.js","mappings":"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","sources":["components/card/Card.js","components/spinner/Spinner.js","views/admin/emailHistory/View.js"],"sourcesContent":["import { Box, useStyleConfig } from \"@chakra-ui/react\";\r\nfunction Card(props) {\r\n  const { variant, children, ...rest } = props;\r\n  const styles = useStyleConfig(\"Card\", { variant });\r\n\r\n  return (\r\n    <Box __css={styles} height={'100%'} {...rest}>\r\n      {children}\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default Card;\r\n","import './style.css';\r\nconst Spinner = () => <div className=\"loader\"></div>;\r\n\r\nexport default Spinner;","import { Box, Button, Flex, Grid, GridItem, Heading, Text, useDisclosure } from \"@chakra-ui/react\";\r\nimport Card from \"components/card/Card\";\r\nimport { HSeparator } from \"components/separator/Separator\";\r\nimport Spinner from \"components/spinner/Spinner\";\r\nimport moment from \"moment\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { IoIosArrowBack } from \"react-icons/io\";\r\nimport { Link, useParams } from \"react-router-dom\";\r\nimport { getApi } from \"services/api\";\r\n\r\nconst View = () => {\r\n\r\n    const param = useParams()\r\n\r\n    const [data, setData] = useState()\r\n    const { isOpen, onOpen, onClose } = useDisclosure()\r\n    const [edit, setEdit] = useState(false);\r\n    const [deleteModel, setDelete] = useState(false);\r\n    const user = JSON.parse(localStorage.getItem(\"user\"))\r\n    const [isLoding, setIsLoding] = useState(false)\r\n\r\n    const size = \"lg\";\r\n\r\n    const fetchData = async () => {\r\n        setIsLoding(true)\r\n        let response = await getApi('api/email/view/', param.id)\r\n        setData(response?.data);\r\n        setIsLoding(false)\r\n    }\r\n    useEffect(() => {\r\n        fetchData()\r\n    }, [])\r\n\r\n    return (\r\n        <>\r\n            {isLoding ?\r\n                <Flex justifyContent={'center'} alignItems={'center'} width=\"100%\" >\r\n                    <Spinner />\r\n                </Flex> : <>\r\n\r\n                    <Grid templateColumns=\"repeat(6, 1fr)\" mb={3} gap={1}>\r\n                        <GridItem colStart={6} >\r\n                            <Flex justifyContent={'right'} >\r\n                                <Link to={\"/email\"}>\r\n                                    <Button leftIcon={<IoIosArrowBack />} variant=\"brand\">\r\n                                        Back\r\n                                    </Button>\r\n                                </Link>\r\n                            </Flex>\r\n                        </GridItem>\r\n                    </Grid>\r\n\r\n\r\n                    <Grid templateColumns=\"repeat(4, 1fr)\" gap={3}>\r\n\r\n\r\n                        <GridItem colSpan={{ base: 4 }}>\r\n                            <Card >\r\n                                <Grid templateColumns={{ base: \"1fr\" }} gap={4}>\r\n                                    <GridItem colSpan={2}>\r\n                                        <Box>\r\n                                            <Heading size=\"md\" mb={3}>\r\n                                                Email View page\r\n                                            </Heading>\r\n                                            <HSeparator />\r\n                                        </Box>\r\n                                    </GridItem>\r\n                                    <Grid templateColumns={'repeat(2, 1fr)'} gap={4}>\r\n                                        <GridItem colSpan={{ base: 2, md: 1 }}>\r\n                                            <Text fontSize=\"sm\" fontWeight=\"bold\" color={'blackAlpha.900'}> Sender </Text>\r\n                                            <Text>{data?.senderEmail ? data?.senderEmail : ' - '}</Text>\r\n                                        </GridItem>\r\n                                        <GridItem colSpan={{ base: 2, md: 1 }}>\r\n                                            <Text fontSize=\"sm\" fontWeight=\"bold\" color={'blackAlpha.900'}> Recipient </Text>\r\n                                            <Text>{data?.recipient ? data?.recipient : ' - '}</Text>\r\n                                        </GridItem>\r\n                                        <GridItem colSpan={{ base: 2, md: 1 }}>\r\n                                            <Text fontSize=\"sm\" fontWeight=\"bold\" color={'blackAlpha.900'}> Create From </Text>\r\n                                            <Link to={data?.createBy ? user?.role !== 'admin' ? `/contactView/${data?.createBy}` : `/admin/contactView/${data?.createBy}` : user?.role !== 'admin' ? `/leadView/${data?.createByLead}` : `/admin/leadView/${data?.createByLead}`}>\r\n                                                <Text color='green.400' sx={{ '&:hover': { color: 'blue.500', textDecoration: 'underline' } }}>{data?.createByName ? data?.createByName : ' - '}</Text>\r\n                                            </Link>\r\n                                        </GridItem>\r\n                                        <GridItem colSpan={{ base: 2, md: 1 }}>\r\n                                            <Text fontSize=\"sm\" fontWeight=\"bold\" color={'blackAlpha.900'}> Realeted To </Text>\r\n                                            <Text>{data?.createBy ? \"contact\" : data?.createByLead && \"lead\"}</Text>\r\n                                        </GridItem>\r\n\r\n                                        <GridItem colSpan={{ base: 2, md: 1 }}>\r\n                                            <Text fontSize=\"sm\" fontWeight=\"bold\" color={'blackAlpha.900'}> Start Date </Text>\r\n                                            <Text> {data?.startDate ? moment(data?.startDate).format('lll ') : ' - '} </Text>\r\n                                        </GridItem>\r\n                                        <GridItem colSpan={{ base: 2, md: 1 }}>\r\n                                            <Text fontSize=\"sm\" fontWeight=\"bold\" color={'blackAlpha.900'}>End Date </Text>\r\n                                            <Text> {data?.endDate ? moment(data?.endDate).format('lll ') : ' - '} </Text>\r\n                                        </GridItem>\r\n                                        <GridItem colSpan={{ base: 2, md: 1 }}>\r\n                                            <Text fontSize=\"sm\" fontWeight=\"bold\" color={'blackAlpha.900'}> Time stamp </Text>\r\n                                            <Text> {data?.timestamp ? moment(data?.timestamp).format('lll ') : ' - '} [{data?.timestamp ? moment(data?.timestamp).toNow() : ' - '}]</Text>\r\n                                        </GridItem>\r\n                                        <GridItem colSpan={{ base: 2 }}>\r\n                                            <Text fontSize=\"sm\" fontWeight=\"bold\" color={'blackAlpha.900'}> Subject </Text>\r\n                                            <Text>{data?.subject ? data?.subject : ' - '}</Text>\r\n                                        </GridItem>\r\n                                        <GridItem colSpan={{ base: 2 }}>\r\n                                            <Text fontSize=\"sm\" fontWeight=\"bold\" color={'blackAlpha.900'}> Message </Text>\r\n                                            <Text>{data?.message ? data?.message : ' - '}</Text>\r\n                                        </GridItem>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </Card>\r\n                        </GridItem>\r\n\r\n                    </Grid>\r\n\r\n                </>}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default View;\r\n"],"names":["props","variant","children","rest","styles","useStyleConfig","_jsx","Box","__css","height","Spinner","className","View","param","useParams","data","setData","useState","isOpen","onOpen","onClose","useDisclosure","edit","setEdit","deleteModel","setDelete","user","JSON","parse","localStorage","getItem","isLoding","setIsLoding","useEffect","async","response","getApi","id","fetchData","_Fragment","Flex","justifyContent","alignItems","width","_jsxs","Grid","templateColumns","mb","gap","GridItem","colStart","Link","to","Button","leftIcon","IoIosArrowBack","colSpan","base","Card","Heading","size","HSeparator","md","Text","fontSize","fontWeight","color","senderEmail","recipient","createBy","role","concat","createByLead","sx","textDecoration","createByName","startDate","moment","format","endDate","timestamp","toNow","subject","message"],"sourceRoot":""}