{"version":3,"file":"static/js/8369.29e173d2.chunk.js","mappings":"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","sources":["views/admin/task/components/taskView.js","../node_modules/@chakra-ui/media-query/dist/chakra-ui-media-query.esm.js"],"sourcesContent":["import { Button, Grid, GridItem, Flex, IconButton, Text, Menu, MenuButton, MenuDivider, MenuItem, MenuList, useDisclosure } from '@chakra-ui/react'\r\nimport { AddIcon, ChevronDownIcon, DeleteIcon, EditIcon } from \"@chakra-ui/icons\";\r\nimport React from 'react'\r\nimport moment from 'moment'\r\nimport { Link, useParams } from 'react-router-dom'\r\nimport { BiLink } from 'react-icons/bi'\r\nimport { useEffect } from 'react'\r\nimport { useState } from 'react'\r\nimport { getApi } from 'services/api'\r\nimport Card from 'components/card/Card'\r\nimport { IoIosArrowBack } from \"react-icons/io\";\r\nimport AddTask from './addTask'\r\nimport DeleteTask from './deleteTask'\r\nimport EditTask from './editTask'\r\n\r\nconst TaskView = (props) => {\r\n    const params = useParams()\r\n    const { id } = params\r\n    const user = JSON.parse(localStorage.getItem(\"user\"))\r\n\r\n    const [data, setData] = useState()\r\n    const [isLoding, setIsLoding] = useState(false)\r\n    const { isOpen, onOpen, onClose } = useDisclosure()\r\n    const [edit, setEdit] = useState(false);\r\n    const [deleteModel, setDelete] = useState(false);\r\n\r\n    const fetchViewData = async () => {\r\n        if (id) {\r\n            setIsLoding(true)\r\n            let result = await getApi('api/task/view/', id?.event ? id?.event?._def?.extendedProps?._id : id);\r\n            setData(result?.data);\r\n            setIsLoding(false)\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        fetchViewData()\r\n    }, [id, edit])\r\n\r\n\r\n    const handleClick = () => {\r\n        onOpen()\r\n    }\r\n    return (\r\n        <div>\r\n            <Grid templateColumns=\"repeat(6, 1fr)\" mb={3} gap={1}>\r\n                <GridItem colStart={6} >\r\n                    <Flex justifyContent={\"right\"}>\r\n                        <Menu>\r\n                            <MenuButton variant=\"outline\" colorScheme='blackAlpha' va mr={2.5} as={Button} rightIcon={<ChevronDownIcon />}>\r\n                                Actions\r\n                            </MenuButton>\r\n                            <MenuDivider />\r\n                            <MenuList>\r\n                                <MenuItem onClick={() => handleClick()} icon={<AddIcon />}>Add</MenuItem>\r\n                                <MenuItem onClick={() => setEdit(true)} icon={<EditIcon />}>Edit</MenuItem>\r\n                                {data?.role !== 'admin' && JSON.parse(localStorage.getItem('user'))?.role === 'admin' && <>\r\n                                    <MenuDivider />\r\n                                    <MenuItem onClick={() => setDelete(true)} icon={<DeleteIcon />}>Delete</MenuItem>\r\n                                </>}\r\n                            </MenuList>\r\n                        </Menu>\r\n                        <Link to=\"/task\">\r\n                            <Button leftIcon={<IoIosArrowBack />} variant=\"brand\">\r\n                                Back\r\n                            </Button>\r\n                        </Link>\r\n                    </Flex>\r\n                </GridItem>\r\n            </Grid>\r\n            <Card>\r\n                <Grid templateColumns=\"repeat(12, 1fr)\" gap={3} >\r\n\r\n                    <GridItem colSpan={{ base: 12, md: 6 }} >\r\n                        <Text fontSize=\"sm\" fontWeight=\"bold\" color={'blackAlpha.900'}> Task Title </Text>\r\n                        <Text>{data?.title ? data?.title : ' - '}</Text>\r\n                    </GridItem>\r\n                    <GridItem colSpan={{ base: 12, md: 6 }} >\r\n                        <Text fontSize=\"sm\" fontWeight=\"bold\" color={'blackAlpha.900'}> Task Related To </Text>\r\n                        <Text>{data?.category ? data?.category : ' - '}</Text>\r\n                    </GridItem>\r\n                    <GridItem colSpan={{ base: 12, md: 6 }} >\r\n                        <Text fontSize=\"sm\" fontWeight=\"bold\" color={'blackAlpha.900'}> Task start </Text>\r\n                        <Text>{data?.start ? moment(data?.start).format('L LT') : ' - '}</Text>\r\n                    </GridItem>\r\n                    <GridItem colSpan={{ base: 12, md: 6 }} >\r\n                        <Text fontSize=\"sm\" fontWeight=\"bold\" color={'blackAlpha.900'}> Task end  </Text>\r\n                        <Text>{data?.end ? moment(data?.end).format('L LT') : moment(data?.start).format('L')}</Text>\r\n                    </GridItem>\r\n                    <GridItem colSpan={{ base: 12, md: 6 }} >\r\n                        <Text fontSize=\"sm\" fontWeight=\"bold\" color={'blackAlpha.900'}> Task Link </Text>\r\n                        {data?.url ?\r\n                            <a target='_blank' href={data?.url}>\r\n                                <IconButton borderRadius=\"10px\" size=\"md\" icon={<BiLink />} />\r\n                            </a> : '-'\r\n                        }\r\n                    </GridItem>\r\n                    <GridItem colSpan={{ base: 12, md: 6 }} >\r\n                        <Text fontSize=\"sm\" fontWeight=\"bold\" color={'blackAlpha.900'}> Task reminder </Text>\r\n                        <Text>{data?.reminder ? data?.reminder : ' - '}</Text>\r\n                    </GridItem>\r\n                    <GridItem colSpan={{ base: 12, md: 6 }} >\r\n                        <Text fontSize=\"sm\" fontWeight=\"bold\" color={'blackAlpha.900'}> assignment To  </Text>\r\n                        <Link to={data?.assignmentTo ? user?.role !== 'admin' ? `/contactView/${data?.assignmentTo}` : `/admin/contactView/${data?.assignmentTo}` : user?.role !== 'admin' ? `/leadView/${data?.assignmentToLead}` : `/admin/leadView/${data?.assignmentToLead}`}>\r\n                            <Text color='green.400' sx={{ '&:hover': { color: 'blue.500', textDecoration: 'underline' } }}>{data?.assignmentToName ? data?.assignmentToName : ' - '}</Text>\r\n                        </Link>\r\n                    </GridItem>\r\n                    <GridItem colSpan={{ base: 12, md: 6 }} >\r\n                        <Text fontSize=\"sm\" fontWeight=\"bold\" color={'blackAlpha.900'}> Task createBy </Text>\r\n                        <Text>{data?.createByName ? data?.createByName : ' - '}</Text>\r\n                    </GridItem>\r\n                    <GridItem colSpan={{ base: 12 }} >\r\n                        <Text fontSize=\"sm\" fontWeight=\"bold\" color={'blackAlpha.900'}> Task Description</Text>\r\n                        <Text>{data?.description ? data?.description : ' - '}</Text>\r\n                    </GridItem>\r\n                    <GridItem colSpan={{ base: 12 }} >\r\n                        <Text fontSize=\"sm\" fontWeight=\"bold\" color={'blackAlpha.900'}> Task notes </Text>\r\n                        <Text>{data?.notes ? data?.notes : ' - '}</Text>\r\n                    </GridItem>\r\n                </Grid>\r\n            </Card>\r\n            <Card mt={3}>\r\n                <Grid templateColumns=\"repeat(6, 1fr)\" gap={1}>\r\n                    <GridItem colStart={6} >\r\n                        <Flex justifyContent={\"right\"}>\r\n                            <Button onClick={() => setEdit(true)} leftIcon={<EditIcon />} mr={2.5} variant=\"outline\" colorScheme=\"green\">Edit</Button>\r\n                            {data?.role !== 'admin' && JSON.parse(localStorage.getItem('user'))?.role === 'admin' && <Button style={{ background: 'red.800' }} onClick={() => setDelete(true)} leftIcon={<DeleteIcon />} colorScheme=\"red\" >Delete</Button>}\r\n                        </Flex>\r\n                    </GridItem>\r\n                </Grid>\r\n            </Card>\r\n            {/* Addtask modal */}\r\n            <AddTask isOpen={isOpen} onClose={onClose} />\r\n            {/* Edittask modal */}\r\n            <EditTask isOpen={edit} onClose={setEdit} viewClose={onClose} id={id?.event ? id?.event?._def?.extendedProps?._id : id} />\r\n            {/* Deletetask modal */}\r\n            <DeleteTask isOpen={deleteModel} onClose={setDelete} viewClose={onClose} url='api/task/delete/' method='one' id={id?.event ? id?.event?._def?.extendedProps?._id : id} redirectPage={\"/task\"} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TaskView\r\n","import { useTheme } from '@chakra-ui/system';\nimport { isBrowser, __DEV__, memoizedGet, breakpoints, isArray, fromEntries, arrayToObjectNotation } from '@chakra-ui/utils';\nimport * as React from 'react';\nimport React__default from 'react';\nimport { useEnvironment } from '@chakra-ui/react-env';\n\nvar useSafeLayoutEffect = isBrowser ? React.useLayoutEffect : React.useEffect;\n/**\n * React hook that tracks state of a CSS media query\n *\n * @param query the media query to match\n */\n\nfunction useMediaQuery(query) {\n  var env = useEnvironment();\n  var queries = Array.isArray(query) ? query : [query];\n  var isSupported = isBrowser && \"matchMedia\" in env.window;\n\n  var _React$useState = React.useState(queries.map(function (query) {\n    return isSupported ? !!env.window.matchMedia(query).matches : false;\n  })),\n      matches = _React$useState[0],\n      setMatches = _React$useState[1]; // Specifying matches in the dependency list will cause the event listeners\n  // to unload and then load each time the dependency changes. This causes\n  // Media Query Events to be missed. The event listeners should only be unloaded\n  // when the component unloads.\n\n\n  useSafeLayoutEffect(function () {\n    if (!isSupported) return undefined;\n    var mediaQueryList = queries.map(function (query) {\n      return env.window.matchMedia(query);\n    });\n    var listenerList = mediaQueryList.map(function (_, index) {\n      var listener = function listener(mqlEvent) {\n        var queryIndex = mediaQueryList.findIndex(function (mediaQuery) {\n          return mediaQuery.media === mqlEvent.media;\n        }); // As the event listener is on the media query list, any time the\n        // listener is called, we know there is a change. There's no need\n        // to compare the previous matches with current. Using\n        // setMatches(matches => {...}) provides access to the current matches\n        // state.  Trying to access matches outside the setMatches function\n        // would provide data from the the time of instantiation (stale).\n\n        setMatches(function (matches) {\n          var currentMatches = matches.map(function (x) {\n            return x;\n          });\n          currentMatches[queryIndex] = mqlEvent.matches;\n          return currentMatches;\n        });\n      }; // Listening to the 'change' event on the Media Query List Object\n      // is more performant as the callback is only invoked when a specified\n      // media query is matched. Using addEventListener on the window object\n      // to listen for the resize event will call the callback on every\n      // viewport resize.\n\n\n      if (typeof mediaQueryList[index].addEventListener === \"function\") {\n        mediaQueryList[index].addEventListener(\"change\", listener);\n      } else {\n        mediaQueryList[index].addListener(listener);\n      }\n\n      return listener;\n    });\n    return function () {\n      mediaQueryList.forEach(function (_, index) {\n        if (typeof mediaQueryList[index].removeEventListener === \"function\") {\n          mediaQueryList[index].removeEventListener(\"change\", listenerList[index]);\n        } else {\n          mediaQueryList[index].removeListener(listenerList[index]);\n        }\n      });\n    };\n  }, []);\n  return matches;\n}\n\n/**\n * Visibility\n *\n * React component to control the visibility of its\n * children based on the current breakpoint\n */\nvar Visibility = function Visibility(props) {\n  var breakpoint = props.breakpoint,\n      hide = props.hide,\n      children = props.children;\n\n  var _useMediaQuery = useMediaQuery(breakpoint),\n      show = _useMediaQuery[0];\n\n  var isVisible = hide ? !show : show;\n  var rendered = isVisible ? children : null;\n  return rendered;\n};\n\nvar Hide = function Hide(props) {\n  var children = props.children;\n  var query = useQuery(props);\n  return /*#__PURE__*/React.createElement(Visibility, {\n    breakpoint: query,\n    hide: true\n  }, children);\n};\n\nif (__DEV__) {\n  Hide.displayName = \"Hide\";\n}\n\nvar Show = function Show(props) {\n  var children = props.children;\n  var query = useQuery(props);\n  return /*#__PURE__*/React.createElement(Visibility, {\n    breakpoint: query\n  }, children);\n};\n\nif (__DEV__) {\n  Show.displayName = \"Show\";\n}\n\nvar getBreakpoint = function getBreakpoint(theme, value) {\n  return memoizedGet(theme, \"breakpoints.\" + value, value);\n};\n\nfunction useQuery(props) {\n  var _props$breakpoint = props.breakpoint,\n      breakpoint = _props$breakpoint === void 0 ? \"\" : _props$breakpoint,\n      below = props.below,\n      above = props.above;\n  var theme = useTheme();\n  var bpBelow = getBreakpoint(theme, below);\n  var bpAbove = getBreakpoint(theme, above);\n  var query = breakpoint;\n\n  if (bpBelow) {\n    query = \"(max-width: \" + bpBelow + \")\";\n  } else if (bpAbove) {\n    query = \"(min-width: \" + bpAbove + \")\";\n  }\n\n  return query;\n}\n\n/**\n * React hook used to get the user's animation preference.\n */\n\nfunction usePrefersReducedMotion() {\n  var _useMediaQuery = useMediaQuery(\"(prefers-reduced-motion: reduce)\"),\n      prefersReducedMotion = _useMediaQuery[0];\n\n  return prefersReducedMotion;\n}\n/**\n * React hook for getting the user's color mode preference.\n */\n\nfunction useColorModePreference() {\n  var _useMediaQuery2 = useMediaQuery([\"(prefers-color-scheme: light)\", \"(prefers-color-scheme: dark)\"]),\n      isLight = _useMediaQuery2[0],\n      isDark = _useMediaQuery2[1];\n\n  if (isLight) return \"light\";\n  if (isDark) return \"dark\";\n  return undefined;\n}\n\n/**\n * React hook used to get the current responsive media breakpoint.\n *\n * @param [defaultBreakpoint=\"base\"] default breakpoint name\n * (in non-window environments like SSR)\n *\n * For SSR, you can use a package like [is-mobile](https://github.com/kaimallea/isMobile)\n * to get the default breakpoint value from the user-agent\n */\n\nfunction useBreakpoint(defaultBreakpoint // default value ensures SSR+CSR consistency\n) {\n  if (defaultBreakpoint === void 0) {\n    defaultBreakpoint = \"base\";\n  }\n\n  var _useTheme = useTheme(),\n      __breakpoints = _useTheme.__breakpoints;\n\n  var env = useEnvironment();\n  var queries = React__default.useMemo(function () {\n    var _breakpoints$details;\n\n    return (_breakpoints$details = __breakpoints == null ? void 0 : __breakpoints.details.map(function (_ref) {\n      var minMaxQuery = _ref.minMaxQuery,\n          breakpoint = _ref.breakpoint;\n      return {\n        breakpoint: breakpoint,\n        query: minMaxQuery.replace(\"@media screen and \", \"\")\n      };\n    })) != null ? _breakpoints$details : [];\n  }, [__breakpoints]);\n\n  var _React$useState = React__default.useState(function () {\n    if (defaultBreakpoint) {\n      // use default breakpoint to ensure render consistency in SSR + CSR environments\n      // => first render on the client has to match the render on the server\n      var fallbackBreakpointDetail = queries.find(function (_ref2) {\n        var breakpoint = _ref2.breakpoint;\n        return breakpoint === defaultBreakpoint;\n      });\n\n      if (fallbackBreakpointDetail) {\n        return fallbackBreakpointDetail.breakpoint;\n      }\n    }\n\n    if (env.window.matchMedia) {\n      // set correct breakpoint on first render if no default breakpoint was provided\n      var matchingBreakpointDetail = queries.find(function (_ref3) {\n        var query = _ref3.query;\n        return env.window.matchMedia(query).matches;\n      });\n\n      if (matchingBreakpointDetail) {\n        return matchingBreakpointDetail.breakpoint;\n      }\n    }\n\n    return undefined;\n  }),\n      currentBreakpoint = _React$useState[0],\n      setCurrentBreakpoint = _React$useState[1];\n\n  React__default.useEffect(function () {\n    var allUnregisterFns = queries.map(function (_ref4) {\n      var breakpoint = _ref4.breakpoint,\n          query = _ref4.query;\n      var mediaQueryList = env.window.matchMedia(query);\n\n      if (mediaQueryList.matches) {\n        setCurrentBreakpoint(breakpoint);\n      }\n\n      var handleChange = function handleChange(ev) {\n        if (ev.matches) {\n          setCurrentBreakpoint(breakpoint);\n        }\n      }; // add media query listener\n\n\n      if (typeof mediaQueryList.addEventListener === \"function\") {\n        mediaQueryList.addEventListener(\"change\", handleChange);\n      } else {\n        mediaQueryList.addListener(handleChange);\n      } // return unregister fn\n\n\n      return function () {\n        if (typeof mediaQueryList.removeEventListener === \"function\") {\n          mediaQueryList.removeEventListener(\"change\", handleChange);\n        } else {\n          mediaQueryList.removeListener(handleChange);\n        }\n      };\n    });\n    return function () {\n      allUnregisterFns.forEach(function (unregister) {\n        return unregister();\n      });\n    };\n  }, [queries, __breakpoints, env.window]);\n  return currentBreakpoint;\n}\n\nfunction getClosestValue(values, breakpoint, breakpoints$1) {\n  if (breakpoints$1 === void 0) {\n    breakpoints$1 = breakpoints;\n  }\n\n  var index = Object.keys(values).indexOf(breakpoint);\n\n  if (index !== -1) {\n    return values[breakpoint];\n  }\n\n  var stopIndex = breakpoints$1.indexOf(breakpoint);\n\n  while (stopIndex >= 0) {\n    var key = breakpoints$1[stopIndex];\n\n    if (values[key] != null) {\n      index = stopIndex;\n      break;\n    }\n\n    stopIndex -= 1;\n  }\n\n  if (index !== -1) {\n    var _key = breakpoints$1[index];\n    return values[_key];\n  }\n\n  return undefined;\n}\n\n/**\n * React hook for getting the value for the current breakpoint from the\n * provided responsive values object.\n *\n * @param values\n * @param [defaultBreakpoint] default breakpoint name\n * (in non-window environments like SSR)\n *\n * For SSR, you can use a package like [is-mobile](https://github.com/kaimallea/isMobile)\n * to get the default breakpoint value from the user-agent\n *\n * @example\n * const width = useBreakpointValue({ base: '150px', md: '250px' })\n */\n\nfunction useBreakpointValue(values, defaultBreakpoint) {\n  var _theme$__breakpoints;\n\n  var breakpoint = useBreakpoint(defaultBreakpoint);\n  var theme = useTheme();\n  if (!breakpoint) return undefined;\n  /**\n   * Get the sorted breakpoint keys from the provided breakpoints\n   */\n\n  var breakpoints = Array.from(((_theme$__breakpoints = theme.__breakpoints) == null ? void 0 : _theme$__breakpoints.keys) || []);\n  var obj = isArray(values) ? fromEntries(Object.entries(arrayToObjectNotation(values, breakpoints)).map(function (_ref) {\n    var key = _ref[0],\n        value = _ref[1];\n    return [key, value];\n  })) : values;\n  return getClosestValue(obj, breakpoint, breakpoints);\n}\n\nexport { Hide, Show, useBreakpoint, useBreakpointValue, useColorModePreference, useMediaQuery, usePrefersReducedMotion, useQuery };\n"],"names":["props","_JSON$parse","_JSON$parse2","_id$event2","_id$event2$_def","_id$event2$_def$exten","_id$event3","_id$event3$_def","_id$event3$_def$exten","params","useParams","id","user","JSON","parse","localStorage","getItem","data","setData","useState","isLoding","setIsLoding","isOpen","onOpen","onClose","useDisclosure","edit","setEdit","deleteModel","setDelete","useEffect","async","_id$event","_id$event$_def","_id$event$_def$extend","result","getApi","event","_def","extendedProps","_id","fetchViewData","_jsxs","children","_jsx","Grid","templateColumns","mb","gap","GridItem","colStart","Flex","justifyContent","Menu","MenuButton","variant","colorScheme","va","mr","as","Button","rightIcon","ChevronDownIcon","MenuDivider","MenuList","MenuItem","onClick","icon","AddIcon","EditIcon","role","_Fragment","DeleteIcon","Link","to","leftIcon","IoIosArrowBack","Card","colSpan","base","md","Text","fontSize","fontWeight","color","title","category","start","moment","format","end","url","target","href","IconButton","borderRadius","size","BiLink","reminder","assignmentTo","concat","assignmentToLead","sx","textDecoration","assignmentToName","createByName","description","notes","mt","style","background","AddTask","EditTask","viewClose","DeleteTask","method","redirectPage","isBrowser","React","__DEV__","useBreakpointValue","values","defaultBreakpoint","_theme$__breakpoints","breakpoint","__breakpoints","useTheme","env","useEnvironment","queries","React__default","_breakpoints$details","details","map","_ref","minMaxQuery","query","replace","_React$useState","fallbackBreakpointDetail","find","_ref2","window","matchMedia","matchingBreakpointDetail","_ref3","matches","currentBreakpoint","setCurrentBreakpoint","allUnregisterFns","_ref4","mediaQueryList","handleChange","ev","addEventListener","addListener","removeEventListener","removeListener","forEach","unregister","useBreakpoint","theme","breakpoints","Array","from","keys","breakpoints$1","index","Object","indexOf","stopIndex","getClosestValue","isArray","fromEntries","entries","arrayToObjectNotation"],"sourceRoot":""}