{"version":3,"file":"static/js/628.5990370d.chunk.js","mappings":"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","sources":["components/card/Card.js","components/spinner/Spinner.js","views/admin/phoneCall/View.js"],"sourcesContent":["import { Box, useStyleConfig } from \"@chakra-ui/react\";\r\nfunction Card(props) {\r\n  const { variant, children, ...rest } = props;\r\n  const styles = useStyleConfig(\"Card\", { variant });\r\n\r\n  return (\r\n    <Box __css={styles} height={'100%'} {...rest}>\r\n      {children}\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default Card;\r\n","import './style.css';\r\nconst Spinner = () => <div className=\"loader\"></div>;\r\n\r\nexport default Spinner;","import { Box, Button, Flex, Grid, GridItem, Heading, Text, useDisclosure } from \"@chakra-ui/react\";\r\nimport Card from \"components/card/Card\";\r\nimport { HSeparator } from \"components/separator/Separator\";\r\nimport Spinner from \"components/spinner/Spinner\";\r\nimport moment from \"moment\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { IoIosArrowBack } from \"react-icons/io\";\r\nimport { Link, useParams } from \"react-router-dom\";\r\nimport { getApi } from \"services/api\";\r\n\r\nconst View = () => {\r\n\r\n    const param = useParams()\r\n\r\n    const [data, setData] = useState()\r\n    const user = JSON.parse(localStorage.getItem(\"user\"))\r\n    const [isLoding, setIsLoding] = useState(false)\r\n\r\n    const fetchData = async () => {\r\n        setIsLoding(true)\r\n        let response = await getApi('api/phoneCall/view/', param.id)\r\n        setData(response?.data);\r\n        setIsLoding(false)\r\n    }\r\n    useEffect(() => {\r\n        fetchData()\r\n    }, [])\r\n\r\n    return (\r\n        <>\r\n\r\n            {isLoding ?\r\n                <Flex justifyContent={'center'} alignItems={'center'} width=\"100%\" >\r\n                    <Spinner />\r\n                </Flex> : <>\r\n                    <Grid templateColumns=\"repeat(4, 1fr)\" gap={3}>\r\n                        <GridItem colSpan={{ base: 4 }}>\r\n                            <Card >\r\n                                <Grid templateColumns={{ base: \"1fr\" }} gap={4}>\r\n                                    <GridItem colSpan={2}>\r\n                                        <Box>\r\n                                            <Heading size=\"md\" mb={3}>\r\n                                                Call View page\r\n                                            </Heading>\r\n                                            <HSeparator />\r\n                                        </Box>\r\n                                    </GridItem>\r\n                                    <Grid templateColumns={'repeat(2, 1fr)'} gap={4}>\r\n                                        <GridItem colSpan={{ base: 2, md: 1 }}>\r\n                                            <Text fontSize=\"sm\" fontWeight=\"bold\" color={'blackAlpha.900'}> Sender </Text>\r\n                                            <Text>{data?.senderName ? data?.senderName : ' - '}</Text>\r\n                                        </GridItem>\r\n                                        <GridItem colSpan={{ base: 2, md: 1 }}>\r\n                                            <Text fontSize=\"sm\" fontWeight=\"bold\" color={'blackAlpha.900'}> Recipient </Text>\r\n                                            <Text>{data?.recipient ? data?.recipient : ' - '}</Text>\r\n                                        </GridItem>\r\n                                        <GridItem colSpan={{ base: 2, md: 1 }}>\r\n                                            <Text fontSize=\"sm\" fontWeight=\"bold\" color={'blackAlpha.900'}> Create to </Text>\r\n                                            <Link to={data?.createBy ? user?.role !== 'admin' ? `/contactView/${data?.createBy}` : `/admin/contactView/${data?.createBy}` : user?.role !== 'admin' ? `/leadView/${data?.createByLead}` : `/admin/leadView/${data?.createByLead}`}>\r\n                                                <Text color='green.400' sx={{ '&:hover': { color: 'blue.500', textDecoration: 'underline' } }}>{data?.createByName ? data?.createByName : ' - '}</Text>\r\n                                            </Link>\r\n                                        </GridItem>\r\n                                        <GridItem colSpan={{ base: 2, md: 1 }}>\r\n                                            <Text fontSize=\"sm\" fontWeight=\"bold\" color={'blackAlpha.900'}> Realeted To </Text>\r\n                                            <Text>{data?.createBy ? \"contact\" : data?.createByLead && \"lead\"}</Text>\r\n                                        </GridItem>\r\n\r\n                                        <GridItem colSpan={{ base: 2, md: 1 }}>\r\n                                            <Text fontSize=\"sm\" fontWeight=\"bold\" color={'blackAlpha.900'}> Start Date </Text>\r\n                                            <Text> {data?.startDate ? moment(data?.startDate).format('lll ') : ' - '} </Text>\r\n                                        </GridItem>\r\n                                        <GridItem colSpan={{ base: 2, md: 1 }}>\r\n                                            <Text fontSize=\"sm\" fontWeight=\"bold\" color={'blackAlpha.900'}>End Date </Text>\r\n                                            <Text> {data?.endDate ? moment(data?.endDate).format('lll ') : ' - '} </Text>\r\n                                        </GridItem>\r\n                                        <GridItem colSpan={{ base: 2, md: 1 }}>\r\n                                            <Text fontSize=\"sm\" fontWeight=\"bold\" color={'blackAlpha.900'}> Timestamp </Text>\r\n                                            <Text> {data?.timestamp ? moment(data?.timestamp).format('DD-MM-YYYY  h:mma ') : ' - '} [{data?.timestamp ? moment(data?.timestamp).toNow() : ' - '}]</Text>\r\n                                        </GridItem>\r\n                                        <GridItem colSpan={{ base: 2, md: 1 }}>\r\n                                            <Text fontSize=\"sm\" fontWeight=\"bold\" color={'blackAlpha.900'}> Call Duration </Text>\r\n                                            <Text>{data?.callDuration ? data?.callDuration : ' - '}</Text>\r\n                                        </GridItem>\r\n                                        <GridItem colSpan={{ base: 2 }}>\r\n                                            <Text fontSize=\"sm\" fontWeight=\"bold\" color={'blackAlpha.900'}> Call Notes </Text>\r\n                                            <pre style={{ whiteSpace: 'pre-wrap' }}>{data?.callNotes ? data?.callNotes : ' - '}</pre>\r\n                                        </GridItem>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </Card>\r\n                        </GridItem>\r\n\r\n                    </Grid>\r\n                </>}\r\n\r\n            {/* <Card mt={3}>\r\n                <Grid templateColumns=\"repeat(6, 1fr)\" gap={1}>\r\n                    <GridItem colStart={6} >\r\n                        <Flex justifyContent={\"right\"}>\r\n                            <Button onClick={() => setEdit(true)} leftIcon={<EditIcon />} variant=\"outline\" colorScheme=\"green\">Edit</Button>\r\n                            <Button style={{ background: 'red.800' }} ml={2.5} onClick={() => setDelete(true)} leftIcon={<DeleteIcon />} colorScheme=\"red\" >Delete</Button>\r\n                        </Flex>\r\n                    </GridItem>\r\n                </Grid>\r\n            </Card> */}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default View;\r\n"],"names":["props","variant","children","rest","styles","useStyleConfig","_jsx","Box","__css","height","Spinner","className","View","param","useParams","data","setData","useState","user","JSON","parse","localStorage","getItem","isLoding","setIsLoding","useEffect","async","response","getApi","id","fetchData","_Fragment","Flex","justifyContent","alignItems","width","Grid","templateColumns","gap","GridItem","colSpan","base","Card","_jsxs","Heading","size","mb","HSeparator","md","Text","fontSize","fontWeight","color","senderName","recipient","Link","to","createBy","role","concat","createByLead","sx","textDecoration","createByName","startDate","moment","format","endDate","timestamp","toNow","callDuration","style","whiteSpace","callNotes"],"sourceRoot":""}