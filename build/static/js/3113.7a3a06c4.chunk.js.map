{"version":3,"file":"static/js/3113.7a3a06c4.chunk.js","mappings":"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","sources":["components/card/Card.js","components/countUpComponent/countUpComponent.js","../node_modules/@chakra-ui/stat/dist/chakra-ui-stat.esm.js","components/card/MiniStatistics.js","components/icons/IconBox.js","views/admin/reports/components/chart.js","views/admin/default/index.jsx","views/admin/reports/components/reportChart.js","../node_modules/@chakra-ui/select/dist/chakra-ui-select.esm.js"],"sourcesContent":["import { Box, useStyleConfig } from \"@chakra-ui/react\";\r\nfunction Card(props) {\r\n  const { variant, children, ...rest } = props;\r\n  const styles = useStyleConfig(\"Card\", { variant });\r\n\r\n  return (\r\n    <Box __css={styles} height={'100%'} {...rest}>\r\n      {children}\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default Card;\r\n","import React, { useState, useEffect } from 'react';\r\n\r\nfunction CountUpComponent({ targetNumber }) {\r\n    const [count, setCount] = useState(0);\r\n\r\n    useEffect(() => {\r\n        const interval = setInterval(() => {\r\n            if (count < targetNumber) {\r\n                setCount(prevCount => prevCount + 1);\r\n            }\r\n        }, targetNumber > 500 ? 0 : 20); // Change the interval duration as needed (in milliseconds)\r\n\r\n        return () => {\r\n            clearInterval(interval);\r\n        };\r\n    }, [count, targetNumber]);\r\n\r\n    return <span>{typeof targetNumber === \"number\" ? count : targetNumber}</span>\r\n}\r\n\r\nexport default CountUpComponent;\r\n","import { Icon } from '@chakra-ui/icon';\nimport { forwardRef, useStyles, chakra, useMultiStyleConfig, omitThemingProps, StylesProvider } from '@chakra-ui/system';\nimport { cx, __DEV__ } from '@chakra-ui/utils';\nimport { VisuallyHidden } from '@chakra-ui/visually-hidden';\nimport * as React from 'react';\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nvar _excluded = [\"type\", \"aria-label\"],\n    _excluded2 = [\"className\", \"children\"];\nvar StatLabel = /*#__PURE__*/forwardRef(function (props, ref) {\n  var styles = useStyles();\n  return /*#__PURE__*/React.createElement(chakra.dt, _extends({\n    ref: ref\n  }, props, {\n    className: cx(\"chakra-stat__label\", props.className),\n    __css: styles.label\n  }));\n});\n\nif (__DEV__) {\n  StatLabel.displayName = \"StatLabel\";\n}\n\nvar StatHelpText = /*#__PURE__*/forwardRef(function (props, ref) {\n  var styles = useStyles();\n  return /*#__PURE__*/React.createElement(chakra.dd, _extends({\n    ref: ref\n  }, props, {\n    className: cx(\"chakra-stat__help-text\", props.className),\n    __css: styles.helpText\n  }));\n});\n\nif (__DEV__) {\n  StatHelpText.displayName = \"StatHelpText\";\n}\n\nvar StatNumber = /*#__PURE__*/forwardRef(function (props, ref) {\n  var styles = useStyles();\n  return /*#__PURE__*/React.createElement(chakra.dd, _extends({\n    ref: ref\n  }, props, {\n    className: cx(\"chakra-stat__number\", props.className),\n    __css: _extends({}, styles.number, {\n      fontFeatureSettings: \"pnum\",\n      fontVariantNumeric: \"proportional-nums\"\n    })\n  }));\n});\n\nif (__DEV__) {\n  StatNumber.displayName = \"StatNumber\";\n}\n\nvar StatDownArrow = function StatDownArrow(props) {\n  return /*#__PURE__*/React.createElement(Icon, _extends({\n    color: \"red.400\"\n  }, props), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"currentColor\",\n    d: \"M21,5H3C2.621,5,2.275,5.214,2.105,5.553C1.937,5.892,1.973,6.297,2.2,6.6l9,12 c0.188,0.252,0.485,0.4,0.8,0.4s0.611-0.148,0.8-0.4l9-12c0.228-0.303,0.264-0.708,0.095-1.047C21.725,5.214,21.379,5,21,5z\"\n  }));\n};\n\nif (__DEV__) {\n  StatDownArrow.displayName = \"StatDownArrow\";\n}\n\nvar StatUpArrow = function StatUpArrow(props) {\n  return /*#__PURE__*/React.createElement(Icon, _extends({\n    color: \"green.400\"\n  }, props), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"currentColor\",\n    d: \"M12.8,5.4c-0.377-0.504-1.223-0.504-1.6,0l-9,12c-0.228,0.303-0.264,0.708-0.095,1.047 C2.275,18.786,2.621,19,3,19h18c0.379,0,0.725-0.214,0.895-0.553c0.169-0.339,0.133-0.744-0.095-1.047L12.8,5.4z\"\n  }));\n};\n\nif (__DEV__) {\n  StatUpArrow.displayName = \"StatUpArrow\";\n}\n\nvar StatArrow = function StatArrow(props) {\n  var type = props.type,\n      ariaLabel = props[\"aria-label\"],\n      rest = _objectWithoutPropertiesLoose(props, _excluded);\n\n  var styles = useStyles();\n  var IconComponent = type === \"increase\" ? StatUpArrow : StatDownArrow;\n  var defaultAriaLabel = type === \"increase\" ? \"increased by\" : \"decreased by\";\n  var label = ariaLabel || defaultAriaLabel;\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(VisuallyHidden, null, label), /*#__PURE__*/React.createElement(IconComponent, _extends({\n    \"aria-hidden\": true\n  }, rest, {\n    __css: styles.icon\n  })));\n};\n\nif (__DEV__) {\n  StatArrow.displayName = \"StatArrow\";\n}\n\nvar Stat = /*#__PURE__*/forwardRef(function (props, ref) {\n  var styles = useMultiStyleConfig(\"Stat\", props);\n\n  var statStyles = _extends({\n    position: \"relative\",\n    flex: \"1 1 0%\"\n  }, styles.container);\n\n  var _omitThemingProps = omitThemingProps(props),\n      className = _omitThemingProps.className,\n      children = _omitThemingProps.children,\n      rest = _objectWithoutPropertiesLoose(_omitThemingProps, _excluded2);\n\n  return /*#__PURE__*/React.createElement(StylesProvider, {\n    value: styles\n  }, /*#__PURE__*/React.createElement(chakra.div, _extends({\n    ref: ref\n  }, rest, {\n    className: cx(\"chakra-stat\", className),\n    __css: statStyles\n  }), /*#__PURE__*/React.createElement(\"dl\", null, children)));\n});\n\nif (__DEV__) {\n  Stat.displayName = \"Stat\";\n}\n\nvar StatGroup = /*#__PURE__*/forwardRef(function (props, ref) {\n  return /*#__PURE__*/React.createElement(chakra.div, _extends({}, props, {\n    ref: ref,\n    role: \"group\",\n    className: cx(\"chakra-stat__group\", props.className),\n    __css: {\n      display: \"flex\",\n      flexWrap: \"wrap\",\n      justifyContent: \"space-around\",\n      alignItems: \"flex-start\"\n    }\n  }));\n});\n\nif (__DEV__) {\n  StatGroup.displayName = \"StatGroup\";\n}\n\nexport { Stat, StatArrow, StatDownArrow, StatGroup, StatHelpText, StatLabel, StatNumber, StatUpArrow };\n","// Chakra imports\r\n// Chakra imports\r\nimport {\r\n  Flex,\r\n  Stat,\r\n  StatLabel,\r\n  StatNumber,\r\n  useColorModeValue,\r\n  Text,\r\n} from \"@chakra-ui/react\";\r\n// Custom components\r\nimport Card from \"components/card/Card.js\";\r\nimport CountUpComponent from \"components/countUpComponent/countUpComponent\";\r\n// Custom icons\r\nimport React from \"react\";\r\n\r\nexport default function Default(props) {\r\n  const { startContent, endContent, name, growth, value } = props;\r\n  const textColor = useColorModeValue(\"secondaryGray.900\", \"white\");\r\n  const textColorSecondary = \"secondaryGray.600\";\r\n\r\n  return (\r\n    <Card cursor={'pointer'} py='15px' onClick={props.onClick} >\r\n      <Flex\r\n        my='auto'\r\n        h='100%'\r\n        align={{ base: \"center\", xl: \"start\" }}\r\n        justify={{ base: \"center\", xl: \"center\" }}>\r\n        {startContent}\r\n\r\n        <Stat my='auto' ms={startContent ? \"18px\" : \"0px\"}>\r\n          <StatLabel\r\n            lineHeight='100%'\r\n            color={textColorSecondary}\r\n            fontSize={{\r\n              base: \"sm\",\r\n            }}>\r\n            {name}\r\n          </StatLabel>\r\n          <StatNumber\r\n            color={textColor}\r\n            fontSize={{\r\n              base: \"2xl\",\r\n            }}>\r\n            <CountUpComponent targetNumber={value} />\r\n            {/* {value} */}\r\n          </StatNumber>\r\n          {growth ? (\r\n            <Flex align='center'>\r\n              <Text color='green.500' fontSize='xs' fontWeight='700' me='5px'>\r\n                {growth}\r\n              </Text>\r\n              <Text color='secondaryGray.600' fontSize='xs' fontWeight='400'>\r\n                since last month\r\n              </Text>\r\n            </Flex>\r\n          ) : null}\r\n        </Stat>\r\n        <Flex ms='auto' w='max-content'>\r\n          {endContent}\r\n        </Flex>\r\n      </Flex>\r\n    </Card>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Flex } from \"@chakra-ui/react\";\r\n\r\nexport default function IconBox(props) {\r\n  const { icon, ...rest } = props;\r\n\r\n  return (\r\n    <Flex\r\n      alignItems={\"center\"}\r\n      justifyContent={\"center\"}\r\n      borderRadius={\"50%\"}\r\n      {...rest}>\r\n      {icon}\r\n    </Flex>\r\n  );\r\n}\r\n","import { Box, Grid, Radio, RadioGroup, Select, Stack } from '@chakra-ui/react';\r\nimport Card from \"components/card/Card\";\r\nimport moment from 'moment';\r\nimport { useEffect, useState } from 'react';\r\nimport ReactApexChart from \"react-apexcharts\";\r\nimport ReactDatePicker from \"react-datepicker\";\r\nimport 'react-datepicker/dist/react-datepicker.css';\r\nimport { postApi } from \"services/api\";\r\n\r\n\r\nconst ReportChart = (props) => {\r\n    const { dashboard } = props;\r\n    const [Chartseries, setChartSeries] = useState([44, 55, 13, 33]);\r\n\r\n    const options = {\r\n        chart: {\r\n            width: 380,\r\n            type: \"donut\",\r\n        },\r\n        dataLabels: {\r\n            enabled: false,\r\n        },\r\n        responsive: [\r\n            {\r\n                breakpoint: 480,\r\n                options: {\r\n                    chart: {\r\n                        width: 200,\r\n                    },\r\n                    legend: {\r\n                        show: false,\r\n                    },\r\n                },\r\n            },\r\n        ],\r\n        legend: {\r\n            position: \"bottom\",\r\n        },\r\n    };\r\n    return (\r\n        <Card>\r\n            <Grid py={5}>\r\n                <div >\r\n                    <ReactApexChart\r\n                        options={options}\r\n                        series={Chartseries}\r\n                        type=\"donut\"\r\n                        width={450}\r\n                    />\r\n                </div>\r\n            </Grid>\r\n        </Card >\r\n    )\r\n}\r\n\r\nexport default ReportChart\r\n","// Chakra imports\r\nimport {\r\n  Flex,\r\n  Heading,\r\n  Icon,\r\n  IconButton,\r\n  SimpleGrid,\r\n  useColorModeValue,\r\n  Grid,\r\n  GridItem,\r\n} from \"@chakra-ui/react\";\r\n// Assets\r\n// Custom components\r\nimport { ViewIcon } from \"@chakra-ui/icons\";\r\nimport Card from \"components/card/Card\";\r\nimport MiniStatistics from \"components/card/MiniStatistics\";\r\nimport IconBox from \"components/icons/IconBox\";\r\nimport { HSeparator } from \"components/separator/Separator\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { LuBuilding2 } from \"react-icons/lu\";\r\nimport { MdAddTask, MdContacts, MdLeaderboard } from \"react-icons/md\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { getApi } from \"services/api\";\r\nimport ReportChart from \"../reports/components/reportChart\";\r\nimport Chart from \"../reports/components/chart\";\r\n\r\nexport default function UserReports() {\r\n  // Chakra Color Mode\r\n  const brandColor = useColorModeValue(\"brand.500\", \"white\");\r\n  const boxBg = useColorModeValue(\"secondaryGray.300\", \"whiteAlpha.100\");\r\n  const user = JSON.parse(localStorage.getItem(\"user\"));\r\n\r\n  const [task, setTask] = useState([]);\r\n  const [contactData, setContactData] = useState([]);\r\n  const [leadData, setLeadData] = useState([]);\r\n  const [propertyData, setPropertyData] = useState([]);\r\n  const navigate = useNavigate();\r\n\r\n  const fetchData = async () => {\r\n    let taskData = await getApi(\r\n      user.role === \"admin\" ? \"api/task/\" : `api/task/?createBy=${user._id}`\r\n    );\r\n    let contact = await getApi(\r\n      user.role === \"admin\"\r\n        ? \"api/contact/\"\r\n        : `api/contact/?createBy=${user._id}`\r\n    );\r\n    let lead = await getApi(\r\n      user.role === \"admin\" ? \"api/lead/\" : `api/lead/?createBy=${user._id}`\r\n    );\r\n    let property = await getApi(\r\n      user.role === \"admin\"\r\n        ? \"api/property/\"\r\n        : `api/property/?createBy=${user._id}`\r\n    );\r\n\r\n    setPropertyData(property?.data);\r\n    setLeadData(lead?.data);\r\n    setContactData(contact?.data);\r\n    setTask(taskData?.data);\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <SimpleGrid columns={{ base: 1, md: 2, lg: 4 }} gap=\"20px\" mb=\"20px\">\r\n        {/* , \"2xl\": 6 */}\r\n        <MiniStatistics\r\n          onClick={() => navigate(\"/task\")}\r\n          startContent={\r\n            <IconBox\r\n              w=\"56px\"\r\n              h=\"56px\"\r\n              bg=\"linear-gradient(90deg, #4481EB 0%, #04BEFE 100%)\"\r\n              icon={<Icon w=\"28px\" h=\"28px\" as={MdAddTask} color=\"white\" />}\r\n            />\r\n          }\r\n          name=\"Tasks\"\r\n          value={task?.length || 0}\r\n        />\r\n        <MiniStatistics\r\n          onClick={() => navigate(\"/contacts\")}\r\n          startContent={\r\n            <IconBox\r\n              w=\"56px\"\r\n              h=\"56px\"\r\n              bg={boxBg}\r\n              icon={\r\n                <Icon w=\"32px\" h=\"32px\" as={MdContacts} color={brandColor} />\r\n              }\r\n            />\r\n          }\r\n          name=\"Contacts\"\r\n          value={contactData?.length || 0}\r\n        />\r\n        <MiniStatistics\r\n          onClick={() => navigate(\"/lead\")}\r\n          startContent={\r\n            <IconBox\r\n              w=\"56px\"\r\n              h=\"56px\"\r\n              bg={boxBg}\r\n              icon={\r\n                <Icon w=\"32px\" h=\"32px\" as={MdLeaderboard} color={brandColor} />\r\n              }\r\n            />\r\n          }\r\n          name=\"Leads\"\r\n          value={leadData?.length || 0}\r\n        />\r\n        <MiniStatistics\r\n          onClick={() => navigate(\"/properties\")}\r\n          startContent={\r\n            <IconBox\r\n              w=\"56px\"\r\n              h=\"56px\"\r\n              bg={boxBg}\r\n              icon={\r\n                <Icon w=\"32px\" h=\"32px\" as={LuBuilding2} color={brandColor} />\r\n              }\r\n            />\r\n          }\r\n          name=\"property\"\r\n          value={propertyData?.length || 0}\r\n        />\r\n      </SimpleGrid>\r\n\r\n      <Grid templateColumns=\"repeat(12, 1fr)\" gap={3}>\r\n        <GridItem rowSpan={2} colSpan={{ base: 12, md: 8 }}>\r\n          <Card>\r\n            <Flex mb={3} alignItems={\"center\"} justifyContent={\"space-between\"}>\r\n              <Heading size=\"md\">Report</Heading>\r\n              <IconButton\r\n                color={\"green.500\"}\r\n                onClick={() => navigate(\"/reporting-analytics\")}\r\n                aria-label=\"Call Fred\"\r\n                borderRadius=\"10px\"\r\n                size=\"md\"\r\n                icon={<ViewIcon />}\r\n              />\r\n            </Flex>\r\n            <HSeparator />\r\n            <ReportChart dashboard={\"dashboard\"} />\r\n          </Card>\r\n        </GridItem>\r\n        <GridItem rowSpan={2} colSpan={{ base: 12, md: 4 }}>\r\n          <Card>\r\n            <Flex mb={3} alignItems={\"center\"} justifyContent={\"space-between\"}>\r\n              <Heading size=\"md\">Report</Heading>\r\n              <IconButton\r\n                color={\"green.500\"}\r\n                onClick={() => navigate(\"/reporting-analytics\")}\r\n                aria-label=\"Call Fred\"\r\n                borderRadius=\"10px\"\r\n                size=\"md\"\r\n                icon={<ViewIcon />}\r\n              />\r\n            </Flex>\r\n            <HSeparator />\r\n            <Chart dashboard={\"dashboard\"} />\r\n          </Card>\r\n        </GridItem>\r\n      </Grid>\r\n    </>\r\n  );\r\n}\r\n","import { Box, Grid, Radio, RadioGroup, Select, Stack } from '@chakra-ui/react';\r\nimport Card from \"components/card/Card\";\r\nimport moment from 'moment';\r\nimport { useEffect, useState } from 'react';\r\nimport ReactApexChart from \"react-apexcharts\";\r\nimport ReactDatePicker from \"react-datepicker\";\r\nimport 'react-datepicker/dist/react-datepicker.css';\r\nimport { postApi } from \"services/api\";\r\n\r\n\r\nconst ReportChart = (props) => {\r\n    const { dashboard } = props;\r\n    const [reportChart, setReportChart] = useState({})\r\n    const [startDate, setStartDate] = useState(new Date(new Date() - 14 * 24 * 60 * 60 * 1000));\r\n    const [endDate, setEndDate] = useState(new Date());\r\n    const [select, setSelect] = useState('all');\r\n    const [selection, setSelection] = useState('day');\r\n\r\n    const user = JSON.parse(localStorage.getItem(\"user\"))\r\n\r\n\r\n    const featchChart = async () => {\r\n        const data = {\r\n            startDate: moment(startDate).format('YYYY-MM-DD'),\r\n            endDate: moment(endDate).format('YYYY-MM-DD'),\r\n            filter: selection\r\n        }\r\n        let result = await postApi(user.role === 'admin' ? 'api/reporting/index' : `api/reporting/index?sender=${user._id}`, data);\r\n        if (result && result.status === 200) {\r\n            setReportChart(result?.data)\r\n        }\r\n    }\r\n\r\n    const options = {\r\n        chart: {\r\n            id: 'line-chart',\r\n        },\r\n        xaxis: {\r\n            type: 'datetime',\r\n        },\r\n        yaxis: {\r\n            title: {\r\n                text: 'Count',\r\n            },\r\n        },\r\n        dataLabels: {\r\n            enabled: true,\r\n        }\r\n    };\r\n\r\n\r\n    const series = Object.keys(reportChart).map((key) => {\r\n        const dataSet = reportChart[key][0];\r\n\r\n        let seriesData = [];\r\n\r\n        if (dataSet?.Emails) {\r\n            seriesData = seriesData.concat(\r\n                dataSet.Emails.map((item) => ({ x: item.date, y: item.Emailcount }))\r\n            );\r\n        }\r\n        if (dataSet?.Calls) {\r\n            seriesData = seriesData.concat(\r\n                dataSet.Calls.map((item) => ({ x: item.date, y: item.Callcount }))\r\n            );\r\n        }\r\n        if (dataSet?.TextMsges) {\r\n            seriesData = seriesData.concat(\r\n                dataSet.TextMsges.map((item) => ({ x: item.date, y: item.TextSentCount }))\r\n            );\r\n        }\r\n\r\n        return {\r\n            name: key,\r\n            data: seriesData,\r\n        };\r\n\r\n    });\r\n\r\n\r\n    useEffect(() => {\r\n        featchChart()\r\n    }, [startDate, endDate, selection])\r\n\r\n\r\n    const selectedSeries = select === 'all' ? series : series.filter(series => series.name === select);\r\n    return (\r\n        <Card>\r\n            {!dashboard &&\r\n                <Box display='flex' alignItems='center' flexWrap={'wrap'} justifyContent='space-between' mb={4}>\r\n                    <Select value={select} onChange={(e) => setSelect(e.target.value)} width={{ base: '100%', md: '15%' }} mb={{ base: 3, md: 'auto' }}>\r\n                        <option value='EmailDetails'>Email</option>\r\n                        <option value='outboundcall'>Call</option>\r\n                        {/* <option value='TextSent'>TextSent</option> */}\r\n                        <option value='all'>all</option>\r\n                    </Select>\r\n                    <Box width={{ base: '100%', md: 'auto' }} flexWrap={'wrap'} justifyContent={'left'} mb={{ base: 3, md: 'auto' }} display='flex'>\r\n                        <ReactDatePicker selected={startDate} onChange={(date) => setStartDate(date)} />\r\n                        <ReactDatePicker selected={endDate} onChange={(date) => setEndDate(date)} />\r\n                    </Box>\r\n                    <Box width={{ base: '100%', md: 'auto' }} display={'flex'} justifyContent={'right'} mb={{ base: 3, md: 'auto' }}>\r\n                        <RadioGroup onChange={(e) => setSelection(e)} value={selection}>\r\n                            <Stack direction='row'>\r\n                                <Radio value='day' >Daily</Radio>\r\n                                <Radio value='week'>Weekly</Radio>\r\n                                {/* <Radio value='Monthly' onClick={() => updateData('Monthly')}>Monthly</Radio> */}\r\n                            </Stack>\r\n                        </RadioGroup>\r\n                    </Box>\r\n                </Box>\r\n            }\r\n            <div id=\"chart\">\r\n                <div id=\"chart-timeline\">\r\n                    {selectedSeries && (\r\n                        <ReactApexChart\r\n                            options={options}\r\n                            series={selectedSeries}\r\n                            // type='bar'\r\n                            // type='line'\r\n                            type='area'\r\n                            height={350}\r\n                        />\r\n                    )}\r\n                </div>\r\n            </div>\r\n\r\n\r\n\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default ReportChart\r\n","import { useFormControl } from '@chakra-ui/form-control';\nimport { forwardRef, chakra, useMultiStyleConfig, omitThemingProps, layoutPropNames } from '@chakra-ui/system';\nimport { cx, __DEV__, split, mergeWith, dataAttr } from '@chakra-ui/utils';\nimport * as React from 'react';\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nvar _excluded = [\"children\", \"placeholder\", \"className\"],\n    _excluded2 = [\"rootProps\", \"placeholder\", \"icon\", \"color\", \"height\", \"h\", \"minH\", \"minHeight\", \"iconColor\", \"iconSize\", \"isFullWidth\"],\n    _excluded3 = [\"children\"];\nvar SelectField = /*#__PURE__*/forwardRef(function (props, ref) {\n  var children = props.children,\n      placeholder = props.placeholder,\n      className = props.className,\n      rest = _objectWithoutPropertiesLoose(props, _excluded);\n\n  return /*#__PURE__*/React.createElement(chakra.select, _extends({}, rest, {\n    ref: ref,\n    className: cx(\"chakra-select\", className)\n  }), placeholder && /*#__PURE__*/React.createElement(\"option\", {\n    value: \"\"\n  }, placeholder), children);\n});\n\nif (__DEV__) {\n  SelectField.displayName = \"SelectField\";\n}\n\n/**\n * React component used to select one item from a list of options.\n */\nvar Select = /*#__PURE__*/forwardRef(function (props, ref) {\n  var styles = useMultiStyleConfig(\"Select\", props);\n\n  var _omitThemingProps = omitThemingProps(props),\n      rootProps = _omitThemingProps.rootProps,\n      placeholder = _omitThemingProps.placeholder,\n      icon = _omitThemingProps.icon,\n      color = _omitThemingProps.color,\n      height = _omitThemingProps.height,\n      h = _omitThemingProps.h,\n      minH = _omitThemingProps.minH,\n      minHeight = _omitThemingProps.minHeight,\n      iconColor = _omitThemingProps.iconColor,\n      iconSize = _omitThemingProps.iconSize;\n      _omitThemingProps.isFullWidth;\n      var rest = _objectWithoutPropertiesLoose(_omitThemingProps, _excluded2);\n\n  var _split = split(rest, layoutPropNames),\n      layoutProps = _split[0],\n      otherProps = _split[1];\n\n  var ownProps = useFormControl(otherProps);\n  var rootStyles = {\n    width: \"100%\",\n    height: \"fit-content\",\n    position: \"relative\",\n    color: color\n  };\n  var fieldStyles = mergeWith({\n    paddingEnd: \"2rem\"\n  }, styles.field, {\n    _focus: {\n      zIndex: \"unset\"\n    }\n  });\n  return /*#__PURE__*/React.createElement(chakra.div, _extends({\n    className: \"chakra-select__wrapper\",\n    __css: rootStyles\n  }, layoutProps, rootProps), /*#__PURE__*/React.createElement(SelectField, _extends({\n    ref: ref,\n    height: h != null ? h : height,\n    minH: minH != null ? minH : minHeight,\n    placeholder: placeholder\n  }, ownProps, {\n    __css: fieldStyles\n  }), props.children), /*#__PURE__*/React.createElement(SelectIcon, _extends({\n    \"data-disabled\": dataAttr(ownProps.disabled)\n  }, (iconColor || color) && {\n    color: iconColor || color\n  }, {\n    __css: styles.icon\n  }, iconSize && {\n    fontSize: iconSize\n  }), icon));\n});\n\nif (__DEV__) {\n  Select.displayName = \"Select\";\n}\n\nvar DefaultIcon = function DefaultIcon(props) {\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    viewBox: \"0 0 24 24\"\n  }, props), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"currentColor\",\n    d: \"M16.59 8.59L12 13.17 7.41 8.59 6 10l6 6 6-6z\"\n  }));\n};\nvar IconWrapper = chakra(\"div\", {\n  baseStyle: {\n    position: \"absolute\",\n    display: \"inline-flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    pointerEvents: \"none\",\n    top: \"50%\",\n    transform: \"translateY(-50%)\"\n  }\n});\n\nvar SelectIcon = function SelectIcon(props) {\n  var _props$children = props.children,\n      children = _props$children === void 0 ? /*#__PURE__*/React.createElement(DefaultIcon, null) : _props$children,\n      rest = _objectWithoutPropertiesLoose(props, _excluded3);\n\n  var clone = /*#__PURE__*/React.cloneElement(children, {\n    role: \"presentation\",\n    className: \"chakra-select__icon\",\n    focusable: false,\n    \"aria-hidden\": true,\n    // force icon to adhere to `IconWrapper` styles\n    style: {\n      width: \"1em\",\n      height: \"1em\",\n      color: \"currentColor\"\n    }\n  });\n  return /*#__PURE__*/React.createElement(IconWrapper, _extends({}, rest, {\n    className: \"chakra-select__icon-wrapper\"\n  }), /*#__PURE__*/React.isValidElement(children) ? clone : null);\n};\n\nif (__DEV__) {\n  SelectIcon.displayName = \"SelectIcon\";\n}\n\nexport { DefaultIcon, Select, SelectField };\n"],"names":["props","variant","children","rest","styles","useStyleConfig","_jsx","Box","__css","height","_ref","targetNumber","count","setCount","useState","useEffect","interval","setInterval","prevCount","clearInterval","_objectWithoutPropertiesLoose","source","excluded","key","i","target","sourceKeys","Object","keys","length","indexOf","_extends","assign","arguments","prototype","hasOwnProperty","call","apply","this","_excluded2","StatLabel","forwardRef","ref","useStyles","React","chakra","dt","className","cx","label","__DEV__","displayName","StatHelpText","dd","helpText","StatNumber","number","fontFeatureSettings","fontVariantNumeric","StatDownArrow","Icon","color","fill","d","StatUpArrow","Stat","useMultiStyleConfig","statStyles","position","flex","container","_omitThemingProps","omitThemingProps","StylesProvider","value","div","StatGroup","role","display","flexWrap","justifyContent","alignItems","Default","startContent","endContent","name","growth","textColor","useColorModeValue","Card","cursor","py","onClick","_jsxs","Flex","my","h","align","base","xl","justify","ms","lineHeight","fontSize","CountUpComponent","Text","fontWeight","me","w","IconBox","icon","borderRadius","dashboard","Chartseries","setChartSeries","Grid","ReactApexChart","options","chart","width","type","dataLabels","enabled","responsive","breakpoint","legend","show","series","UserReports","brandColor","boxBg","user","JSON","parse","localStorage","getItem","task","setTask","contactData","setContactData","leadData","setLeadData","propertyData","setPropertyData","navigate","useNavigate","async","taskData","getApi","concat","_id","contact","lead","property","data","fetchData","_Fragment","SimpleGrid","columns","md","lg","gap","mb","MiniStatistics","bg","as","MdAddTask","MdContacts","MdLeaderboard","LuBuilding2","templateColumns","GridItem","rowSpan","colSpan","Heading","size","IconButton","ViewIcon","HSeparator","ReportChart","Chart","reportChart","setReportChart","startDate","setStartDate","Date","endDate","setEndDate","select","setSelect","selection","setSelection","map","dataSet","seriesData","Emails","item","x","date","y","Emailcount","Calls","Callcount","TextMsges","TextSentCount","moment","format","filter","result","postApi","status","featchChart","selectedSeries","Select","onChange","e","ReactDatePicker","selected","RadioGroup","Stack","direction","Radio","id","xaxis","yaxis","title","text","_excluded","_excluded3","SelectField","placeholder","rootProps","minH","minHeight","iconColor","iconSize","isFullWidth","_split","split","layoutPropNames","layoutProps","otherProps","ownProps","useFormControl","rootStyles","fieldStyles","mergeWith","paddingEnd","field","_focus","zIndex","SelectIcon","dataAttr","disabled","DefaultIcon","viewBox","IconWrapper","baseStyle","pointerEvents","top","transform","_props$children","clone","focusable","style"],"sourceRoot":""}