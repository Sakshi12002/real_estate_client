{"version":3,"file":"static/js/1678.8e1a7fa4.chunk.js","mappings":"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","sources":["components/card/Card.js","views/admin/payments/paymentForm.js","views/admin/payments/index.js"],"sourcesContent":["import { Box, useStyleConfig } from \"@chakra-ui/react\";\r\nfunction Card(props) {\r\n  const { variant, children, ...rest } = props;\r\n  const styles = useStyleConfig(\"Card\", { variant });\r\n\r\n  return (\r\n    <Box __css={styles} height={'100%'} {...rest}>\r\n      {children}\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default Card;\r\n","import { Button, FormLabel, GridItem, Input, Text } from \"@chakra-ui/react\"\r\nimport { useFormik } from \"formik\"\r\nimport * as yup from 'yup'\r\n\r\n\r\nexport default function PaymentForm() {\r\n\r\n    const initialValues = {\r\n        name: \"\",\r\n        amount: '',\r\n        email: '',\r\n    }\r\n    const validation = yup.object({\r\n        name: yup.string().min(2).required('First Name is required'),\r\n        amount: yup.number().max(999999.99, 'total amount due must be no more than â‚¹999,999.99.').required('Amount is required'),\r\n        email: yup.string().email().required('Email is required'),\r\n    })\r\n\r\n    const formik = useFormik({\r\n        initialValues: initialValues,\r\n        validationSchema: validation,\r\n        onSubmit: (values, { resetForm }) => {\r\n            addPayment();\r\n            resetForm();\r\n        },\r\n    });\r\n    const { errors, touched, values, handleBlur, handleChange, handleSubmit } = formik\r\n\r\n    const addPayment = () => {\r\n        fetch(\r\n            `${process.env.REACT_APP_BASE_URL}api/payment/add`,\r\n            {\r\n                method: \"POST\",\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                },\r\n                mode: \"cors\",\r\n                body: JSON.stringify({\r\n                    items: [\r\n                        { quantity: 1, price: values.amount, name: values.name, description: 'send to Prolink' },\r\n                    ],\r\n                    customer_email: values.email,\r\n                }),\r\n            }\r\n        )\r\n            .then((res) => {\r\n                if (res.ok) return res.json();\r\n                localStorage.setItem('res', res)\r\n                return res.json().then((json) => Promise.reject(json));\r\n            })\r\n            .then(({ url }) => {\r\n                window.open(url);\r\n            })\r\n            .catch((e) => {\r\n                console.log(e.error);\r\n            });\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <GridItem display='flex' justifyContent=\"center\" padding=\"10px 0 50px 0\">\r\n                <img src={require('../../../assets/img/masterCard.png')} width=\"100px\" />\r\n                <img src={require('../../../assets/img/american-express.png')} width=\"100px\" />\r\n                <img src={require('../../../assets/img/visa.png')} width=\"100px\" />\r\n            </GridItem>\r\n            <GridItem sx={{ m: 1, width: '100%' }} >\r\n                <FormLabel display='flex' ms='4px' fontSize='sm' fontWeight='500' mb='8px'>\r\n                    Name\r\n                </FormLabel>\r\n                <Input\r\n                    type=\"text\"\r\n                    fontSize='sm'\r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                    value={values.name}\r\n                    name=\"name\"\r\n                    placeholder=\"Enter name\"\r\n                    fontWeight='500'\r\n                    borderColor={errors?.name && touched?.name ? \"red.300\" : null}\r\n                />\r\n                <Text mb='10px' color={'red'}> {errors.name && touched.name && errors.name}</Text>\r\n            </GridItem>\r\n            <GridItem sx={{ m: 1, width: '100%' }} >\r\n                <FormLabel display='flex' ms='4px' fontSize='sm' fontWeight='500' mb='8px'>\r\n                    Email\r\n                </FormLabel>\r\n                <Input\r\n                    type=\"text\"\r\n                    fontSize='sm'\r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                    value={values.email}\r\n                    name=\"email\"\r\n                    placeholder=\"Enter Email\"\r\n                    fontWeight='500'\r\n                    borderColor={errors?.email && touched?.email ? \"red.300\" : null}\r\n                />\r\n                <Text mb='10px' color={'red'}> {errors.email && touched.email && errors.email}</Text>\r\n            </GridItem>\r\n            <GridItem sx={{ m: 1, width: '100%' }} >\r\n                <FormLabel display='flex' ms='4px' fontSize='sm' fontWeight='500' mb='8px'>\r\n                    Amount\r\n                </FormLabel>\r\n                <Input\r\n                    type=\"number\"\r\n                    fontSize='sm'\r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                    value={values.amount}\r\n                    placeholder=\"Enter Amount\"\r\n                    name=\"amount\"\r\n                    fontWeight='500'\r\n                    borderColor={errors?.amount && touched?.amount ? \"red.300\" : null}\r\n                />\r\n                <Text mb='10px' color={'red'}> {errors.amount && touched.amount && errors.amount}</Text>\r\n            </GridItem>\r\n            <Button onClick={handleSubmit} variant=\"brand\">Pay</Button>\r\n        </>\r\n    )\r\n}\r\n","\r\nimport { Elements } from '@stripe/react-stripe-js';\r\nimport { loadStripe } from '@stripe/stripe-js';\r\nimport PaymentForm from \"./paymentForm\";\r\nimport Card from \"components/card/Card\";\r\nimport { Flex, Grid, GridItem } from \"@chakra-ui/react\";\r\n\r\nconst PUBLIC_KEY = \"pk_test_51Nx0ulSFr3y25H3gtYaIaVQDwcMVg1USXhA8DCu2sApXlLDf6vhCRLqqBNj2gKoeO2O5SiF5SZ1zCukR1IMztGFK00WeIq8rz3\"\r\n\r\nconst stirpeTestPromise = loadStripe(PUBLIC_KEY)\r\n\r\nconst StripeContainer = () => {\r\n    return (\r\n\r\n        <Grid templateColumns=\"repeat(12, 1fr)\" gap={3}>\r\n\r\n            <GridItem colSpan={{ base: 12, md: 6 }}>\r\n                <Card>\r\n                    <Elements stripe={stirpeTestPromise}>\r\n                        <PaymentForm />\r\n                    </Elements>\r\n                </Card>\r\n            </GridItem>\r\n            <GridItem colSpan={{ base: 12, md: 6 }}>\r\n                <Card>\r\n                    <Flex justifyContent={'center'} alignItems={'center'} height={'100%'} width={'100%'}>\r\n                        <img src={require('../../../assets/img/pay.avif')} />\r\n                    </Flex>\r\n                </Card>\r\n            </GridItem>\r\n            {/* <GridItem>\r\n                <Button leftIcon={<FaHistory />} variant=\"brand\">History</Button>\r\n            </GridItem> */}\r\n        </Grid>\r\n\r\n    );\r\n};\r\n\r\nexport default StripeContainer;"],"names":["props","variant","children","rest","styles","useStyleConfig","_jsx","Box","__css","height","PaymentForm","validation","yup","name","min","required","amount","max","email","formik","useFormik","initialValues","validationSchema","onSubmit","values","_ref","resetForm","addPayment","errors","touched","handleBlur","handleChange","handleSubmit","fetch","concat","process","REACT_APP_BASE_URL","method","headers","mode","body","JSON","stringify","items","quantity","price","description","customer_email","then","res","ok","json","localStorage","setItem","Promise","reject","_ref2","url","window","open","catch","e","console","log","error","_jsxs","_Fragment","GridItem","display","justifyContent","padding","src","require","width","sx","m","FormLabel","ms","fontSize","fontWeight","mb","Input","type","onChange","onBlur","value","placeholder","borderColor","Text","color","Button","onClick","stirpeTestPromise","loadStripe","StripeContainer","Grid","templateColumns","gap","colSpan","base","md","Card","Elements","stripe","Flex","alignItems"],"sourceRoot":""}