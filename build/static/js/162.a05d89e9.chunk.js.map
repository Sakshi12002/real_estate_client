{"version":3,"file":"static/js/162.a05d89e9.chunk.js","mappings":"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","sources":["components/card/Card.js","components/countUpComponent/countUpComponent.js","views/admin/textMsg/components/CheckTable.js","views/admin/textMsg/index.js"],"sourcesContent":["import { Box, useStyleConfig } from \"@chakra-ui/react\";\r\nfunction Card(props) {\r\n  const { variant, children, ...rest } = props;\r\n  const styles = useStyleConfig(\"Card\", { variant });\r\n\r\n  return (\r\n    <Box __css={styles} height={'100%'} {...rest}>\r\n      {children}\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default Card;\r\n","import React, { useState, useEffect } from 'react';\r\n\r\nfunction CountUpComponent({ targetNumber }) {\r\n    const [count, setCount] = useState(0);\r\n\r\n    useEffect(() => {\r\n        const interval = setInterval(() => {\r\n            if (count < targetNumber) {\r\n                setCount(prevCount => prevCount + 1);\r\n            }\r\n        }, targetNumber > 500 ? 0 : 20); // Change the interval duration as needed (in milliseconds)\r\n\r\n        return () => {\r\n            clearInterval(interval);\r\n        };\r\n    }, [count, targetNumber]);\r\n\r\n    return <span>{typeof targetNumber === \"number\" ? count : targetNumber}</span>\r\n}\r\n\r\nexport default CountUpComponent;\r\n","import {\r\n  Flex,\r\n  Table, Tbody,\r\n  Td,\r\n  Text,\r\n  Th,\r\n  Thead,\r\n  Tr,\r\n  useColorModeValue\r\n} from \"@chakra-ui/react\";\r\nimport { useEffect, useMemo, useState } from \"react\";\r\nimport {\r\n  useGlobalFilter,\r\n  usePagination,\r\n  useSortBy,\r\n  useTable,\r\n} from \"react-table\";\r\n\r\n// Custom components\r\nimport Card from \"components/card/Card\";\r\nimport { FaSort, FaSortDown, FaSortUp } from \"react-icons/fa\";\r\nimport { GrFormNext, GrFormPrevious } from \"react-icons/gr\";\r\nimport { Link } from \"react-router-dom\";\r\nimport CountUpComponent from \"components/countUpComponent/countUpComponent\";\r\nimport moment from \"moment\";\r\nimport { getApi } from \"services/api\";\r\n\r\nexport default function CheckTable(props) {\r\n  const { columnsData } = props;\r\n\r\n  const textColor = useColorModeValue(\"secondaryGray.900\", \"white\");\r\n  const borderColor = useColorModeValue(\"gray.200\", \"whiteAlpha.100\");\r\n  const columns = useMemo(() => columnsData, [columnsData]);\r\n\r\n  const [data, setData] = useState([])\r\n  const user = JSON.parse(localStorage.getItem(\"user\"))\r\n\r\n  const fetchData = async () => {\r\n    let result = await getApi(user.role === 'admin' ? 'api/text-msg' : `api/text-msg?sender=${user._id}`);\r\n    setData(result?.data);\r\n  }\r\n\r\n  const tableInstance = useTable(\r\n    {\r\n      columns, data,\r\n    },\r\n    useGlobalFilter,\r\n    useSortBy,\r\n    usePagination\r\n  );\r\n\r\n  const {\r\n    getTableProps,\r\n    getTableBodyProps,\r\n    headerGroups,\r\n    page,\r\n    prepareRow,\r\n    initialState,\r\n    nextPage,\r\n    previousPage,\r\n    canNextPage,\r\n    canPreviousPage,\r\n    pageOptions,\r\n    state,\r\n  } = tableInstance;\r\n  initialState.pageSize = 10\r\n  const { pageIndex } = state;\r\n\r\n  useEffect(() => {\r\n    fetchData()\r\n  }, [props.isOpen])\r\n\r\n  return (\r\n    <Card\r\n      direction=\"column\"\r\n      w=\"100%\"\r\n      px=\"0px\"\r\n      overflowX={{ sm: \"scroll\", lg: \"scroll\" }}\r\n    >\r\n      <Flex px=\"25px\" justify=\"space-between\" mb=\"20px\" align=\"center\">\r\n        <Text\r\n          color={textColor}\r\n          fontSize=\"22px\"\r\n          fontWeight=\"700\"\r\n          lineHeight=\"100%\"\r\n        >\r\n          Text Msg  (<CountUpComponent targetNumber={data?.length} />)\r\n        </Text>\r\n      </Flex>\r\n\r\n      <Table {...getTableProps()} variant=\"simple\" color=\"gray.500\" mb=\"24px\">\r\n        <Thead>\r\n          {headerGroups?.map((headerGroup, index) => (\r\n            <Tr {...headerGroup.getHeaderGroupProps()} key={index}>\r\n              {headerGroup.headers?.map((column, index) => (\r\n                <Th\r\n                  {...column.getHeaderProps(column.isSortable !== false && column.getSortByToggleProps())}\r\n                  pe=\"10px\"\r\n                  key={index}\r\n                  borderColor={borderColor}\r\n                >\r\n                  <Flex\r\n                    justify=\"space-between\"\r\n                    align=\"center\"\r\n                    fontSize={{ sm: \"10px\", lg: \"12px\" }}\r\n                    color=\"gray.400\"\r\n                  >\r\n                    {column.render(\"Header\")}\r\n                    {column.isSortable !== false && (\r\n                      <span>\r\n                        {column.isSorted ? (column.isSortedDesc ? <FaSortDown /> : <FaSortUp />) : <FaSort />}\r\n                      </span>\r\n                    )}\r\n                  </Flex>\r\n                </Th>\r\n              ))}\r\n            </Tr>\r\n          ))}\r\n        </Thead>\r\n        <Tbody {...getTableBodyProps()}>\r\n          {data?.length === 0 && (\r\n            <Tr>\r\n              <Td colSpan={columns.length}>\r\n                <Text textAlign={'center'} width=\"100%\" color={textColor} fontSize=\"sm\" fontWeight=\"700\">\r\n                  -- No Data Found --\r\n                </Text>\r\n              </Td>\r\n            </Tr>\r\n          )}\r\n          {page?.map((row, i) => {\r\n            prepareRow(row);\r\n            return (\r\n              <Tr {...row?.getRowProps()} key={i}>\r\n                {row?.cells?.map((cell, index) => {\r\n                  let data = \"\";\r\n                  if (cell?.column.Header === \"#\") {\r\n                    data = (\r\n                      <Flex align=\"center\">\r\n                        <Text color={textColor} fontSize=\"sm\" fontWeight=\"700\">\r\n                          {cell?.row?.index + 1}\r\n                        </Text>\r\n                      </Flex>\r\n                    );\r\n                  } else if (cell?.column.Header === \"sender\") {\r\n                    data = (\r\n                      <Link to={user?.role !== 'admin' ? `/text-msg/${cell?.row?.values._id}` : `/admin/text-msg/${cell?.row?.values._id}`}>\r\n                        <Text\r\n                          me=\"10px\"\r\n                          sx={{ '&:hover': { color: 'blue.500', textDecoration: 'underline' } }}\r\n                          color='green.400'\r\n                          fontSize=\"sm\"\r\n                          fontWeight=\"700\"\r\n                        >\r\n                          {cell?.value ? cell?.value : ' - '}\r\n                        </Text>\r\n                      </Link>\r\n                    );\r\n                  } else if (cell?.column.Header === \"to\") {\r\n                    data = (\r\n                      <Text\r\n                        me=\"10px\"\r\n                        color={textColor}\r\n                        fontSize=\"sm\"\r\n                        fontWeight=\"700\"\r\n                      >\r\n                        {cell?.value}\r\n                      </Text>\r\n                    );\r\n                  } else if (cell?.column.Header === \"create From\") {\r\n                    data = (\r\n                      <Link to={user?.role !== 'admin' ? `/contactView/${cell?.row?.original?.createFor}` : `/admin/contactView/${cell?.row?.original?.createFor}`}>\r\n                        <Text\r\n                          me=\"10px\"\r\n                          sx={{ '&:hover': { color: 'blue.500', textDecoration: 'underline' } }}\r\n                          color='green.400'\r\n                          fontSize=\"sm\"\r\n                          fontWeight=\"700\"\r\n                        >\r\n                          {cell?.value ? cell?.value : ' - '}\r\n                        </Text>\r\n                      </Link>\r\n\r\n                    );\r\n                  } else if (cell?.column.Header === \"timestamp\") {\r\n                    data = (\r\n                      <Text color={textColor} fontSize=\"sm\" fontWeight=\"700\">\r\n                        {moment(cell?.value).toNow()}\r\n                      </Text>\r\n                    );\r\n                  } else if (cell?.column.Header === \"Created\") {\r\n                    data = (\r\n                      <Text color={textColor} fontSize=\"sm\" fontWeight=\"700\">\r\n                        {moment(cell?.row?.values.timestamp).format('(DD/MM) h:mma')}\r\n                      </Text>\r\n                    );\r\n                  }\r\n                  return (\r\n                    <Td\r\n                      {...cell?.getCellProps()}\r\n                      key={index}\r\n                      fontSize={{ sm: \"14px\" }}\r\n                      minW={{ sm: \"150px\", md: \"200px\", lg: \"auto\" }}\r\n                      borderColor=\"transparent\"\r\n                    >\r\n                      {data}\r\n                    </Td>\r\n                  );\r\n                })}\r\n              </Tr>\r\n            );\r\n          })}\r\n        </Tbody>\r\n      </Table>\r\n      <div style={{ display: 'flex', justifyContent: 'left', alignItems: 'center', margin: \"1rem\" }}>\r\n\r\n\r\n        <button onClick={() => previousPage()} disabled={!canPreviousPage}>\r\n          <GrFormPrevious />\r\n        </button>\r\n        <span style={{ margin: \"0 0.5rem\" }}>\r\n          Page {pageIndex + 1} of {pageOptions.length}\r\n        </span>\r\n        <button onClick={() => nextPage()} disabled={!canNextPage}>\r\n          <GrFormNext />\r\n        </button>\r\n      </div>\r\n\r\n    </Card >\r\n  );\r\n}\r\n","import { Grid, GridItem, useDisclosure } from '@chakra-ui/react';\r\nimport CheckTable from './components/CheckTable';\r\n// import Add from \"./Add\";\r\n\r\n\r\nconst Index = () => {\r\n    const columns = [\r\n        {\r\n            Header: \"#\",\r\n            accessor: \"_id\",\r\n            isSortable: false,\r\n            width: 10\r\n        },\r\n        { Header: 'sender', accessor: 'senderName' },\r\n        { Header: \"to\", accessor: \"to\", },\r\n        { Header: \"create From\", accessor: \"createByName\", },\r\n        { Header: \"timestamp\", accessor: \"timestamp\", },\r\n        { Header: \"Created\" },\r\n\r\n    ];\r\n    const { isOpen, onOpen, onClose } = useDisclosure()\r\n\r\n\r\n    return (\r\n        <div>\r\n            <Grid templateColumns=\"repeat(6, 1fr)\" mb={3} gap={1}>\r\n                <GridItem colStart={6} textAlign={\"right\"}>\r\n                </GridItem>\r\n            </Grid>\r\n            <CheckTable isOpen={isOpen} columnsData={columns} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Index\r\n"],"names":["props","variant","children","rest","styles","useStyleConfig","_jsx","Box","__css","height","_ref","targetNumber","count","setCount","useState","useEffect","interval","setInterval","prevCount","clearInterval","CheckTable","columnsData","textColor","useColorModeValue","borderColor","columns","useMemo","data","setData","user","JSON","parse","localStorage","getItem","tableInstance","useTable","useGlobalFilter","useSortBy","usePagination","getTableProps","getTableBodyProps","headerGroups","page","prepareRow","initialState","nextPage","previousPage","canNextPage","canPreviousPage","pageOptions","state","pageSize","pageIndex","async","result","getApi","role","concat","_id","fetchData","isOpen","_jsxs","Card","direction","w","px","overflowX","sm","lg","Flex","justify","mb","align","Text","color","fontSize","fontWeight","lineHeight","CountUpComponent","length","Table","Thead","map","headerGroup","index","_headerGroup$headers","_createElement","Tr","getHeaderGroupProps","key","headers","column","Th","getHeaderProps","isSortable","getSortByToggleProps","pe","render","isSorted","isSortedDesc","FaSortDown","FaSortUp","FaSort","Tbody","Td","colSpan","textAlign","width","row","i","_row$cells","getRowProps","cells","cell","_cell$row","Header","_cell$row2","_cell$row3","Link","to","values","me","sx","textDecoration","value","_cell$row4","_cell$row4$original","_cell$row5","_cell$row5$original","original","createFor","moment","toNow","_cell$row6","timestamp","format","getCellProps","minW","md","style","display","justifyContent","alignItems","margin","onClick","disabled","GrFormPrevious","GrFormNext","Index","onOpen","onClose","useDisclosure","Grid","templateColumns","gap","GridItem","colStart","accessor"],"sourceRoot":""}