{"version":3,"file":"static/js/6129.4415580b.chunk.js","mappings":"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","sources":["../node_modules/@chakra-ui/table/dist/chakra-ui-table.esm.js","../node_modules/react-table/src/publicUtils.js","../node_modules/react-table/src/utils.js","../node_modules/react-table/src/makeDefaultPluginHooks.js","../node_modules/react-table/src/hooks/useColumnVisibility.js","../node_modules/react-table/src/hooks/useTable.js","../node_modules/react-table/src/plugin-hooks/useExpanded.js","../node_modules/react-table/src/filterTypes.js","../node_modules/react-table/src/plugin-hooks/useFilters.js","../node_modules/react-table/src/plugin-hooks/useGlobalFilter.js","../node_modules/react-table/src/aggregations.js","../node_modules/react-table/src/plugin-hooks/useGroupBy.js","../node_modules/react-table/src/sortTypes.js","../node_modules/react-table/src/plugin-hooks/useSortBy.js","../node_modules/react-table/src/plugin-hooks/usePagination.js","../node_modules/react-table/src/plugin-hooks/_UNSTABLE_usePivotColumns.js","../node_modules/react-table/src/plugin-hooks/useRowSelect.js","../node_modules/react-table/src/plugin-hooks/useRowState.js","../node_modules/react-table/src/plugin-hooks/useColumnOrder.js","../node_modules/react-table/src/plugin-hooks/useResizeColumns.js","../node_modules/react-table/src/plugin-hooks/useAbsoluteLayout.js","../node_modules/react-table/src/plugin-hooks/useBlockLayout.js","../node_modules/react-table/src/plugin-hooks/useFlexLayout.js","../node_modules/react-table/src/plugin-hooks/useGridLayout.js","../node_modules/react-table/index.js","../node_modules/@babel/runtime/helpers/regeneratorRuntime.js","../node_modules/@babel/runtime/helpers/typeof.js","../node_modules/@babel/runtime/regenerator/index.js"],"sourcesContent":["import { forwardRef, chakra, useMultiStyleConfig, omitThemingProps, StylesProvider, useStyles } from '@chakra-ui/system';\nimport { cx, __DEV__ } from '@chakra-ui/utils';\nimport * as React from 'react';\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nvar _excluded = [\"overflow\", \"overflowX\", \"className\"],\n    _excluded2 = [\"className\"],\n    _excluded3 = [\"placement\"],\n    _excluded4 = [\"isNumeric\"],\n    _excluded5 = [\"isNumeric\"];\nvar TableContainer = /*#__PURE__*/forwardRef(function (props, ref) {\n  var _ref;\n\n  var overflow = props.overflow,\n      overflowX = props.overflowX,\n      className = props.className,\n      rest = _objectWithoutPropertiesLoose(props, _excluded);\n\n  return /*#__PURE__*/React.createElement(chakra.div, _extends({\n    ref: ref,\n    className: cx(\"chakra-table__container\", className)\n  }, rest, {\n    __css: {\n      display: \"block\",\n      whiteSpace: \"nowrap\",\n      WebkitOverflowScrolling: \"touch\",\n      overflowX: (_ref = overflow != null ? overflow : overflowX) != null ? _ref : \"auto\",\n      overflowY: \"hidden\",\n      maxWidth: \"100%\"\n    }\n  }));\n});\nvar Table = /*#__PURE__*/forwardRef(function (props, ref) {\n  var styles = useMultiStyleConfig(\"Table\", props);\n\n  var _omitThemingProps = omitThemingProps(props),\n      className = _omitThemingProps.className,\n      tableProps = _objectWithoutPropertiesLoose(_omitThemingProps, _excluded2);\n\n  return /*#__PURE__*/React.createElement(StylesProvider, {\n    value: styles\n  }, /*#__PURE__*/React.createElement(chakra.table, _extends({\n    role: \"table\",\n    ref: ref,\n    __css: styles.table,\n    className: cx(\"chakra-table\", className)\n  }, tableProps)));\n});\n\nif (__DEV__) {\n  Table.displayName = \"Table\";\n}\n\nvar TableCaption = /*#__PURE__*/forwardRef(function (props, ref) {\n  var _props$placement = props.placement,\n      placement = _props$placement === void 0 ? \"bottom\" : _props$placement,\n      rest = _objectWithoutPropertiesLoose(props, _excluded3);\n\n  var styles = useStyles();\n  return /*#__PURE__*/React.createElement(chakra.caption, _extends({}, rest, {\n    ref: ref,\n    __css: _extends({}, styles.caption, {\n      captionSide: placement\n    })\n  }));\n});\n\nif (__DEV__) {\n  TableCaption.displayName = \"TableCaption\";\n}\n\nvar Thead = /*#__PURE__*/forwardRef(function (props, ref) {\n  var styles = useStyles();\n  return /*#__PURE__*/React.createElement(chakra.thead, _extends({}, props, {\n    ref: ref,\n    __css: styles.thead\n  }));\n});\nvar Tbody = /*#__PURE__*/forwardRef(function (props, ref) {\n  var styles = useStyles();\n  return /*#__PURE__*/React.createElement(chakra.tbody, _extends({}, props, {\n    ref: ref,\n    __css: styles.tbody\n  }));\n});\nvar Tfoot = /*#__PURE__*/forwardRef(function (props, ref) {\n  var styles = useStyles();\n  return /*#__PURE__*/React.createElement(chakra.tfoot, _extends({}, props, {\n    ref: ref,\n    __css: styles.tfoot\n  }));\n});\nvar Th = /*#__PURE__*/forwardRef(function (_ref2, ref) {\n  var isNumeric = _ref2.isNumeric,\n      rest = _objectWithoutPropertiesLoose(_ref2, _excluded4);\n\n  var styles = useStyles();\n  return /*#__PURE__*/React.createElement(chakra.th, _extends({}, rest, {\n    ref: ref,\n    __css: styles.th,\n    \"data-is-numeric\": isNumeric\n  }));\n});\nvar Tr = /*#__PURE__*/forwardRef(function (props, ref) {\n  var styles = useStyles();\n  return /*#__PURE__*/React.createElement(chakra.tr, _extends({\n    role: \"row\"\n  }, props, {\n    ref: ref,\n    __css: styles.tr\n  }));\n});\nvar Td = /*#__PURE__*/forwardRef(function (_ref3, ref) {\n  var isNumeric = _ref3.isNumeric,\n      rest = _objectWithoutPropertiesLoose(_ref3, _excluded5);\n\n  var styles = useStyles();\n  return /*#__PURE__*/React.createElement(chakra.td, _extends({\n    role: \"gridcell\"\n  }, rest, {\n    ref: ref,\n    __css: styles.td,\n    \"data-is-numeric\": isNumeric\n  }));\n});\n\nexport { Table, TableCaption, TableContainer, Tbody, Td, Tfoot, Th, Thead, Tr };\n","import React from 'react'\n\nlet renderErr = 'Renderer Error ☝️'\n\nexport const actions = {\n  init: 'init',\n}\n\nexport const defaultRenderer = ({ value = '' }) => value;\nexport const emptyRenderer = () => <>&nbsp;</>;\n\nexport const defaultColumn = {\n  Cell: defaultRenderer,\n  width: 150,\n  minWidth: 0,\n  maxWidth: Number.MAX_SAFE_INTEGER,\n}\n\nfunction mergeProps(...propList) {\n  return propList.reduce((props, next) => {\n    const { style, className, ...rest } = next\n\n    props = {\n      ...props,\n      ...rest,\n    }\n\n    if (style) {\n      props.style = props.style\n        ? { ...(props.style || {}), ...(style || {}) }\n        : style\n    }\n\n    if (className) {\n      props.className = props.className\n        ? props.className + ' ' + className\n        : className\n    }\n\n    if (props.className === '') {\n      delete props.className\n    }\n\n    return props\n  }, {})\n}\n\nfunction handlePropGetter(prevProps, userProps, meta) {\n  // Handle a lambda, pass it the previous props\n  if (typeof userProps === 'function') {\n    return handlePropGetter({}, userProps(prevProps, meta))\n  }\n\n  // Handle an array, merge each item as separate props\n  if (Array.isArray(userProps)) {\n    return mergeProps(prevProps, ...userProps)\n  }\n\n  // Handle an object by default, merge the two objects\n  return mergeProps(prevProps, userProps)\n}\n\nexport const makePropGetter = (hooks, meta = {}) => {\n  return (userProps = {}) =>\n    [...hooks, userProps].reduce(\n      (prev, next) =>\n        handlePropGetter(prev, next, {\n          ...meta,\n          userProps,\n        }),\n      {}\n    )\n}\n\nexport const reduceHooks = (hooks, initial, meta = {}, allowUndefined) =>\n  hooks.reduce((prev, next) => {\n    const nextValue = next(prev, meta)\n    if (process.env.NODE_ENV !== 'production') {\n      if (!allowUndefined && typeof nextValue === 'undefined') {\n        console.info(next)\n        throw new Error(\n          'React Table: A reducer hook ☝️ just returned undefined! This is not allowed.'\n        )\n      }\n    }\n    return nextValue\n  }, initial)\n\nexport const loopHooks = (hooks, context, meta = {}) =>\n  hooks.forEach(hook => {\n    const nextValue = hook(context, meta)\n    if (process.env.NODE_ENV !== 'production') {\n      if (typeof nextValue !== 'undefined') {\n        console.info(hook, nextValue)\n        throw new Error(\n          'React Table: A loop-type hook ☝️ just returned a value! This is not allowed.'\n        )\n      }\n    }\n  })\n\nexport function ensurePluginOrder(plugins, befores, pluginName, afters) {\n  if (process.env.NODE_ENV !== 'production' && afters) {\n    throw new Error(\n      `Defining plugins in the \"after\" section of ensurePluginOrder is no longer supported (see plugin ${pluginName})`\n    )\n  }\n  const pluginIndex = plugins.findIndex(\n    plugin => plugin.pluginName === pluginName\n  )\n\n  if (pluginIndex === -1) {\n    if (process.env.NODE_ENV !== 'production') {\n      throw new Error(`The plugin \"${pluginName}\" was not found in the plugin list!\nThis usually means you need to need to name your plugin hook by setting the 'pluginName' property of the hook function, eg:\n\n  ${pluginName}.pluginName = '${pluginName}'\n`)\n    }\n  }\n\n  befores.forEach(before => {\n    const beforeIndex = plugins.findIndex(\n      plugin => plugin.pluginName === before\n    )\n    if (beforeIndex > -1 && beforeIndex > pluginIndex) {\n      if (process.env.NODE_ENV !== 'production') {\n        throw new Error(\n          `React Table: The ${pluginName} plugin hook must be placed after the ${before} plugin hook!`\n        )\n      }\n    }\n  })\n}\n\nexport function functionalUpdate(updater, old) {\n  return typeof updater === 'function' ? updater(old) : updater\n}\n\nexport function useGetLatest(obj) {\n  const ref = React.useRef()\n  ref.current = obj\n\n  return React.useCallback(() => ref.current, [])\n}\n\n// SSR has issues with useLayoutEffect still, so use useEffect during SSR\nexport const safeUseLayoutEffect =\n  typeof document !== 'undefined' ? React.useLayoutEffect : React.useEffect\n\nexport function useMountedLayoutEffect(fn, deps) {\n  const mountedRef = React.useRef(false)\n\n  safeUseLayoutEffect(() => {\n    if (mountedRef.current) {\n      fn()\n    }\n    mountedRef.current = true\n    // eslint-disable-next-line\n  }, deps)\n}\n\nexport function useAsyncDebounce(defaultFn, defaultWait = 0) {\n  const debounceRef = React.useRef({})\n\n  const getDefaultFn = useGetLatest(defaultFn)\n  const getDefaultWait = useGetLatest(defaultWait)\n\n  return React.useCallback(\n    async (...args) => {\n      if (!debounceRef.current.promise) {\n        debounceRef.current.promise = new Promise((resolve, reject) => {\n          debounceRef.current.resolve = resolve\n          debounceRef.current.reject = reject\n        })\n      }\n\n      if (debounceRef.current.timeout) {\n        clearTimeout(debounceRef.current.timeout)\n      }\n\n      debounceRef.current.timeout = setTimeout(async () => {\n        delete debounceRef.current.timeout\n        try {\n          debounceRef.current.resolve(await getDefaultFn()(...args))\n        } catch (err) {\n          debounceRef.current.reject(err)\n        } finally {\n          delete debounceRef.current.promise\n        }\n      }, getDefaultWait())\n\n      return debounceRef.current.promise\n    },\n    [getDefaultFn, getDefaultWait]\n  )\n}\n\nexport function makeRenderer(instance, column, meta = {}) {\n  return (type, userProps = {}) => {\n    const Comp = typeof type === 'string' ? column[type] : type\n\n    if (typeof Comp === 'undefined') {\n      console.info(column)\n      throw new Error(renderErr)\n    }\n\n    return flexRender(Comp, { ...instance, column, ...meta, ...userProps })\n  }\n}\n\nexport function flexRender(Comp, props) {\n  return isReactComponent(Comp) ? <Comp {...props} /> : Comp\n}\n\nfunction isReactComponent(component) {\n  return (\n    isClassComponent(component) ||\n    typeof component === 'function' ||\n    isExoticComponent(component)\n  )\n}\n\nfunction isClassComponent(component) {\n  return (\n    typeof component === 'function' &&\n    (() => {\n      const proto = Object.getPrototypeOf(component)\n      return proto.prototype && proto.prototype.isReactComponent\n    })()\n  )\n}\n\nfunction isExoticComponent(component) {\n  return (\n    typeof component === 'object' &&\n    typeof component.$$typeof === 'symbol' &&\n    ['react.memo', 'react.forward_ref'].includes(component.$$typeof.description)\n  )\n}\n","import { defaultColumn, emptyRenderer } from './publicUtils'\n\n// Find the depth of the columns\nexport function findMaxDepth(columns, depth = 0) {\n  return columns.reduce((prev, curr) => {\n    if (curr.columns) {\n      return Math.max(prev, findMaxDepth(curr.columns, depth + 1))\n    }\n    return depth\n  }, 0)\n}\n\n// Build the visible columns, headers and flat column list\nexport function linkColumnStructure(columns, parent, depth = 0) {\n  return columns.map(column => {\n    column = {\n      ...column,\n      parent,\n      depth,\n    }\n\n    assignColumnAccessor(column)\n\n    if (column.columns) {\n      column.columns = linkColumnStructure(column.columns, column, depth + 1)\n    }\n    return column\n  })\n}\n\nexport function flattenColumns(columns) {\n  return flattenBy(columns, 'columns')\n}\n\nexport function assignColumnAccessor(column) {\n  // First check for string accessor\n  let { id, accessor, Header } = column\n\n  if (typeof accessor === 'string') {\n    id = id || accessor\n    const accessorPath = accessor.split('.')\n    accessor = row => getBy(row, accessorPath)\n  }\n\n  if (!id && typeof Header === 'string' && Header) {\n    id = Header\n  }\n\n  if (!id && column.columns) {\n    console.error(column)\n    throw new Error('A column ID (or unique \"Header\" value) is required!')\n  }\n\n  if (!id) {\n    console.error(column)\n    throw new Error('A column ID (or string accessor) is required!')\n  }\n\n  Object.assign(column, {\n    id,\n    accessor,\n  })\n\n  return column\n}\n\nexport function decorateColumn(column, userDefaultColumn) {\n  if (!userDefaultColumn) {\n    throw new Error()\n  }\n  Object.assign(column, {\n    // Make sure there is a fallback header, just in case\n    Header: emptyRenderer,\n    Footer: emptyRenderer,\n    ...defaultColumn,\n    ...userDefaultColumn,\n    ...column,\n  })\n\n  Object.assign(column, {\n    originalWidth: column.width,\n  })\n\n  return column\n}\n\n// Build the header groups from the bottom up\nexport function makeHeaderGroups(\n  allColumns,\n  defaultColumn,\n  additionalHeaderProperties = () => ({})\n) {\n  const headerGroups = []\n\n  let scanColumns = allColumns\n\n  let uid = 0\n  const getUID = () => uid++\n\n  while (scanColumns.length) {\n    // The header group we are creating\n    const headerGroup = {\n      headers: [],\n    }\n\n    // The parent columns we're going to scan next\n    const parentColumns = []\n\n    const hasParents = scanColumns.some(d => d.parent)\n\n    // Scan each column for parents\n    scanColumns.forEach(column => {\n      // What is the latest (last) parent column?\n      let latestParentColumn = [...parentColumns].reverse()[0]\n\n      let newParent\n\n      if (hasParents) {\n        // If the column has a parent, add it if necessary\n        if (column.parent) {\n          newParent = {\n            ...column.parent,\n            originalId: column.parent.id,\n            id: `${column.parent.id}_${getUID()}`,\n            headers: [column],\n            ...additionalHeaderProperties(column),\n          }\n        } else {\n          // If other columns have parents, we'll need to add a place holder if necessary\n          const originalId = `${column.id}_placeholder`\n          newParent = decorateColumn(\n            {\n              originalId,\n              id: `${column.id}_placeholder_${getUID()}`,\n              placeholderOf: column,\n              headers: [column],\n              ...additionalHeaderProperties(column),\n            },\n            defaultColumn\n          )\n        }\n\n        // If the resulting parent columns are the same, just add\n        // the column and increment the header span\n        if (\n          latestParentColumn &&\n          latestParentColumn.originalId === newParent.originalId\n        ) {\n          latestParentColumn.headers.push(column)\n        } else {\n          parentColumns.push(newParent)\n        }\n      }\n\n      headerGroup.headers.push(column)\n    })\n\n    headerGroups.push(headerGroup)\n\n    // Start scanning the parent columns\n    scanColumns = parentColumns\n  }\n\n  return headerGroups.reverse()\n}\n\nconst pathObjCache = new Map()\n\nexport function getBy(obj, path, def) {\n  if (!path) {\n    return obj\n  }\n  const cacheKey = typeof path === 'function' ? path : JSON.stringify(path)\n\n  const pathObj =\n    pathObjCache.get(cacheKey) ||\n    (() => {\n      const pathObj = makePathArray(path)\n      pathObjCache.set(cacheKey, pathObj)\n      return pathObj\n    })()\n\n  let val\n\n  try {\n    val = pathObj.reduce((cursor, pathPart) => cursor[pathPart], obj)\n  } catch (e) {\n    // continue regardless of error\n  }\n  return typeof val !== 'undefined' ? val : def\n}\n\nexport function getFirstDefined(...args) {\n  for (let i = 0; i < args.length; i += 1) {\n    if (typeof args[i] !== 'undefined') {\n      return args[i]\n    }\n  }\n}\n\nexport function getElementDimensions(element) {\n  const rect = element.getBoundingClientRect()\n  const style = window.getComputedStyle(element)\n  const margins = {\n    left: parseInt(style.marginLeft),\n    right: parseInt(style.marginRight),\n  }\n  const padding = {\n    left: parseInt(style.paddingLeft),\n    right: parseInt(style.paddingRight),\n  }\n  return {\n    left: Math.ceil(rect.left),\n    width: Math.ceil(rect.width),\n    outerWidth: Math.ceil(\n      rect.width + margins.left + margins.right + padding.left + padding.right\n    ),\n    marginLeft: margins.left,\n    marginRight: margins.right,\n    paddingLeft: padding.left,\n    paddingRight: padding.right,\n    scrollWidth: element.scrollWidth,\n  }\n}\n\nexport function isFunction(a) {\n  if (typeof a === 'function') {\n    return a\n  }\n}\n\nexport function flattenBy(arr, key) {\n  const flat = []\n\n  const recurse = arr => {\n    arr.forEach(d => {\n      if (!d[key]) {\n        flat.push(d)\n      } else {\n        recurse(d[key])\n      }\n    })\n  }\n\n  recurse(arr)\n\n  return flat\n}\n\nexport function expandRows(\n  rows,\n  { manualExpandedKey, expanded, expandSubRows = true }\n) {\n  const expandedRows = []\n\n  const handleRow = (row, addToExpandedRows = true) => {\n    row.isExpanded =\n      (row.original && row.original[manualExpandedKey]) || expanded[row.id]\n\n    row.canExpand = row.subRows && !!row.subRows.length\n\n    if (addToExpandedRows) {\n      expandedRows.push(row)\n    }\n\n    if (row.subRows && row.subRows.length && row.isExpanded) {\n      row.subRows.forEach(row => handleRow(row, expandSubRows))\n    }\n  }\n\n  rows.forEach(row => handleRow(row))\n\n  return expandedRows\n}\n\nexport function getFilterMethod(filter, userFilterTypes, filterTypes) {\n  return (\n    isFunction(filter) ||\n    userFilterTypes[filter] ||\n    filterTypes[filter] ||\n    filterTypes.text\n  )\n}\n\nexport function shouldAutoRemoveFilter(autoRemove, value, column) {\n  return autoRemove ? autoRemove(value, column) : typeof value === 'undefined'\n}\n\nexport function unpreparedAccessWarning() {\n  throw new Error(\n    'React-Table: You have not called prepareRow(row) one or more rows you are attempting to render.'\n  )\n}\n\nlet passiveSupported = null\nexport function passiveEventSupported() {\n  // memoize support to avoid adding multiple test events\n  if (typeof passiveSupported === 'boolean') return passiveSupported\n\n  let supported = false\n  try {\n    const options = {\n      get passive() {\n        supported = true\n        return false\n      },\n    }\n\n    window.addEventListener('test', null, options)\n    window.removeEventListener('test', null, options)\n  } catch (err) {\n    supported = false\n  }\n  passiveSupported = supported\n  return passiveSupported\n}\n\n//\n\nconst reOpenBracket = /\\[/g\nconst reCloseBracket = /\\]/g\n\nfunction makePathArray(obj) {\n  return (\n    flattenDeep(obj)\n      // remove all periods in parts\n      .map(d => String(d).replace('.', '_'))\n      // join parts using period\n      .join('.')\n      // replace brackets with periods\n      .replace(reOpenBracket, '.')\n      .replace(reCloseBracket, '')\n      // split it back out on periods\n      .split('.')\n  )\n}\n\nfunction flattenDeep(arr, newArr = []) {\n  if (!Array.isArray(arr)) {\n    newArr.push(arr)\n  } else {\n    for (let i = 0; i < arr.length; i += 1) {\n      flattenDeep(arr[i], newArr)\n    }\n  }\n  return newArr\n}\n","const defaultGetTableProps = props => ({\n  role: 'table',\n  ...props,\n})\n\nconst defaultGetTableBodyProps = props => ({\n  role: 'rowgroup',\n  ...props,\n})\n\nconst defaultGetHeaderProps = (props, { column }) => ({\n  key: `header_${column.id}`,\n  colSpan: column.totalVisibleHeaderCount,\n  role: 'columnheader',\n  ...props,\n})\n\nconst defaultGetFooterProps = (props, { column }) => ({\n  key: `footer_${column.id}`,\n  colSpan: column.totalVisibleHeaderCount,\n  ...props,\n})\n\nconst defaultGetHeaderGroupProps = (props, { index }) => ({\n  key: `headerGroup_${index}`,\n  role: 'row',\n  ...props,\n})\n\nconst defaultGetFooterGroupProps = (props, { index }) => ({\n  key: `footerGroup_${index}`,\n  ...props,\n})\n\nconst defaultGetRowProps = (props, { row }) => ({\n  key: `row_${row.id}`,\n  role: 'row',\n  ...props,\n})\n\nconst defaultGetCellProps = (props, { cell }) => ({\n  key: `cell_${cell.row.id}_${cell.column.id}`,\n  role: 'cell',\n  ...props,\n})\n\nexport default function makeDefaultPluginHooks() {\n  return {\n    useOptions: [],\n    stateReducers: [],\n    useControlledState: [],\n    columns: [],\n    columnsDeps: [],\n    allColumns: [],\n    allColumnsDeps: [],\n    accessValue: [],\n    materializedColumns: [],\n    materializedColumnsDeps: [],\n    useInstanceAfterData: [],\n    visibleColumns: [],\n    visibleColumnsDeps: [],\n    headerGroups: [],\n    headerGroupsDeps: [],\n    useInstanceBeforeDimensions: [],\n    useInstance: [],\n    prepareRow: [],\n    getTableProps: [defaultGetTableProps],\n    getTableBodyProps: [defaultGetTableBodyProps],\n    getHeaderGroupProps: [defaultGetHeaderGroupProps],\n    getFooterGroupProps: [defaultGetFooterGroupProps],\n    getHeaderProps: [defaultGetHeaderProps],\n    getFooterProps: [defaultGetFooterProps],\n    getRowProps: [defaultGetRowProps],\n    getCellProps: [defaultGetCellProps],\n    useFinalInstance: [],\n  }\n}\n","import React from 'react'\n\nimport {\n  actions,\n  functionalUpdate,\n  useGetLatest,\n  makePropGetter,\n  useMountedLayoutEffect,\n} from '../publicUtils'\n\nactions.resetHiddenColumns = 'resetHiddenColumns'\nactions.toggleHideColumn = 'toggleHideColumn'\nactions.setHiddenColumns = 'setHiddenColumns'\nactions.toggleHideAllColumns = 'toggleHideAllColumns'\n\nexport const useColumnVisibility = hooks => {\n  hooks.getToggleHiddenProps = [defaultGetToggleHiddenProps]\n  hooks.getToggleHideAllColumnsProps = [defaultGetToggleHideAllColumnsProps]\n\n  hooks.stateReducers.push(reducer)\n  hooks.useInstanceBeforeDimensions.push(useInstanceBeforeDimensions)\n  hooks.headerGroupsDeps.push((deps, { instance }) => [\n    ...deps,\n    instance.state.hiddenColumns,\n  ])\n  hooks.useInstance.push(useInstance)\n}\n\nuseColumnVisibility.pluginName = 'useColumnVisibility'\n\nconst defaultGetToggleHiddenProps = (props, { column }) => [\n  props,\n  {\n    onChange: e => {\n      column.toggleHidden(!e.target.checked)\n    },\n    style: {\n      cursor: 'pointer',\n    },\n    checked: column.isVisible,\n    title: 'Toggle Column Visible',\n  },\n]\n\nconst defaultGetToggleHideAllColumnsProps = (props, { instance }) => [\n  props,\n  {\n    onChange: e => {\n      instance.toggleHideAllColumns(!e.target.checked)\n    },\n    style: {\n      cursor: 'pointer',\n    },\n    checked: !instance.allColumnsHidden && !instance.state.hiddenColumns.length,\n    title: 'Toggle All Columns Hidden',\n    indeterminate:\n      !instance.allColumnsHidden && instance.state.hiddenColumns.length,\n  },\n]\n\nfunction reducer(state, action, previousState, instance) {\n  if (action.type === actions.init) {\n    return {\n      hiddenColumns: [],\n      ...state,\n    }\n  }\n\n  if (action.type === actions.resetHiddenColumns) {\n    return {\n      ...state,\n      hiddenColumns: instance.initialState.hiddenColumns || [],\n    }\n  }\n\n  if (action.type === actions.toggleHideColumn) {\n    const should =\n      typeof action.value !== 'undefined'\n        ? action.value\n        : !state.hiddenColumns.includes(action.columnId)\n\n    const hiddenColumns = should\n      ? [...state.hiddenColumns, action.columnId]\n      : state.hiddenColumns.filter(d => d !== action.columnId)\n\n    return {\n      ...state,\n      hiddenColumns,\n    }\n  }\n\n  if (action.type === actions.setHiddenColumns) {\n    return {\n      ...state,\n      hiddenColumns: functionalUpdate(action.value, state.hiddenColumns),\n    }\n  }\n\n  if (action.type === actions.toggleHideAllColumns) {\n    const shouldAll =\n      typeof action.value !== 'undefined'\n        ? action.value\n        : !state.hiddenColumns.length\n\n    return {\n      ...state,\n      hiddenColumns: shouldAll ? instance.allColumns.map(d => d.id) : [],\n    }\n  }\n}\n\nfunction useInstanceBeforeDimensions(instance) {\n  const {\n    headers,\n    state: { hiddenColumns },\n  } = instance\n\n  const isMountedRef = React.useRef(false)\n\n  if (!isMountedRef.current) {\n  }\n\n  const handleColumn = (column, parentVisible) => {\n    column.isVisible = parentVisible && !hiddenColumns.includes(column.id)\n\n    let totalVisibleHeaderCount = 0\n\n    if (column.headers && column.headers.length) {\n      column.headers.forEach(\n        subColumn =>\n          (totalVisibleHeaderCount += handleColumn(subColumn, column.isVisible))\n      )\n    } else {\n      totalVisibleHeaderCount = column.isVisible ? 1 : 0\n    }\n\n    column.totalVisibleHeaderCount = totalVisibleHeaderCount\n\n    return totalVisibleHeaderCount\n  }\n\n  let totalVisibleHeaderCount = 0\n\n  headers.forEach(\n    subHeader => (totalVisibleHeaderCount += handleColumn(subHeader, true))\n  )\n}\n\nfunction useInstance(instance) {\n  const {\n    columns,\n    flatHeaders,\n    dispatch,\n    allColumns,\n    getHooks,\n    state: { hiddenColumns },\n    autoResetHiddenColumns = true,\n  } = instance\n\n  const getInstance = useGetLatest(instance)\n\n  const allColumnsHidden = allColumns.length === hiddenColumns.length\n\n  const toggleHideColumn = React.useCallback(\n    (columnId, value) =>\n      dispatch({ type: actions.toggleHideColumn, columnId, value }),\n    [dispatch]\n  )\n\n  const setHiddenColumns = React.useCallback(\n    value => dispatch({ type: actions.setHiddenColumns, value }),\n    [dispatch]\n  )\n\n  const toggleHideAllColumns = React.useCallback(\n    value => dispatch({ type: actions.toggleHideAllColumns, value }),\n    [dispatch]\n  )\n\n  const getToggleHideAllColumnsProps = makePropGetter(\n    getHooks().getToggleHideAllColumnsProps,\n    { instance: getInstance() }\n  )\n\n  flatHeaders.forEach(column => {\n    column.toggleHidden = value => {\n      dispatch({\n        type: actions.toggleHideColumn,\n        columnId: column.id,\n        value,\n      })\n    }\n\n    column.getToggleHiddenProps = makePropGetter(\n      getHooks().getToggleHiddenProps,\n      {\n        instance: getInstance(),\n        column,\n      }\n    )\n  })\n\n  const getAutoResetHiddenColumns = useGetLatest(autoResetHiddenColumns)\n\n  useMountedLayoutEffect(() => {\n    if (getAutoResetHiddenColumns()) {\n      dispatch({ type: actions.resetHiddenColumns })\n    }\n  }, [dispatch, columns])\n\n  Object.assign(instance, {\n    allColumnsHidden,\n    toggleHideColumn,\n    setHiddenColumns,\n    toggleHideAllColumns,\n    getToggleHideAllColumnsProps,\n  })\n}\n","import React from 'react'\n\n//\n\nimport {\n  linkColumnStructure,\n  flattenColumns,\n  assignColumnAccessor,\n  unpreparedAccessWarning,\n  makeHeaderGroups,\n  decorateColumn,\n} from '../utils'\n\nimport {\n  useGetLatest,\n  reduceHooks,\n  actions,\n  loopHooks,\n  makePropGetter,\n  makeRenderer,\n} from '../publicUtils'\n\nimport makeDefaultPluginHooks from '../makeDefaultPluginHooks'\n\nimport { useColumnVisibility } from './useColumnVisibility'\n\nconst defaultInitialState = {}\nconst defaultColumnInstance = {}\nconst defaultReducer = (state, action, prevState) => state\nconst defaultGetSubRows = (row, index) => row.subRows || []\nconst defaultGetRowId = (row, index, parent) =>\n  `${parent ? [parent.id, index].join('.') : index}`\nconst defaultUseControlledState = d => d\n\nfunction applyDefaults(props) {\n  const {\n    initialState = defaultInitialState,\n    defaultColumn = defaultColumnInstance,\n    getSubRows = defaultGetSubRows,\n    getRowId = defaultGetRowId,\n    stateReducer = defaultReducer,\n    useControlledState = defaultUseControlledState,\n    ...rest\n  } = props\n\n  return {\n    ...rest,\n    initialState,\n    defaultColumn,\n    getSubRows,\n    getRowId,\n    stateReducer,\n    useControlledState,\n  }\n}\n\nexport const useTable = (props, ...plugins) => {\n  // Apply default props\n  props = applyDefaults(props)\n\n  // Add core plugins\n  plugins = [useColumnVisibility, ...plugins]\n\n  // Create the table instance\n  let instanceRef = React.useRef({})\n\n  // Create a getter for the instance (helps avoid a lot of potential memory leaks)\n  const getInstance = useGetLatest(instanceRef.current)\n\n  // Assign the props, plugins and hooks to the instance\n  Object.assign(getInstance(), {\n    ...props,\n    plugins,\n    hooks: makeDefaultPluginHooks(),\n  })\n\n  // Allow plugins to register hooks as early as possible\n  plugins.filter(Boolean).forEach(plugin => {\n    plugin(getInstance().hooks)\n  })\n\n  // Consume all hooks and make a getter for them\n  const getHooks = useGetLatest(getInstance().hooks)\n  getInstance().getHooks = getHooks\n  delete getInstance().hooks\n\n  // Allow useOptions hooks to modify the options coming into the table\n  Object.assign(\n    getInstance(),\n    reduceHooks(getHooks().useOptions, applyDefaults(props))\n  )\n\n  const {\n    data,\n    columns: userColumns,\n    initialState,\n    defaultColumn,\n    getSubRows,\n    getRowId,\n    stateReducer,\n    useControlledState,\n  } = getInstance()\n\n  // Setup user reducer ref\n  const getStateReducer = useGetLatest(stateReducer)\n\n  // Build the reducer\n  const reducer = React.useCallback(\n    (state, action) => {\n      // Detect invalid actions\n      if (!action.type) {\n        console.info({ action })\n        throw new Error('Unknown Action 👆')\n      }\n\n      // Reduce the state from all plugin reducers\n      return [\n        ...getHooks().stateReducers,\n        // Allow the user to add their own state reducer(s)\n        ...(Array.isArray(getStateReducer())\n          ? getStateReducer()\n          : [getStateReducer()]),\n      ].reduce(\n        (s, handler) => handler(s, action, state, getInstance()) || s,\n        state\n      )\n    },\n    [getHooks, getStateReducer, getInstance]\n  )\n\n  // Start the reducer\n  const [reducerState, dispatch] = React.useReducer(reducer, undefined, () =>\n    reducer(initialState, { type: actions.init })\n  )\n\n  // Allow the user to control the final state with hooks\n  const state = reduceHooks(\n    [...getHooks().useControlledState, useControlledState],\n    reducerState,\n    { instance: getInstance() }\n  )\n\n  Object.assign(getInstance(), {\n    state,\n    dispatch,\n  })\n\n  // Decorate All the columns\n  const columns = React.useMemo(\n    () =>\n      linkColumnStructure(\n        reduceHooks(getHooks().columns, userColumns, {\n          instance: getInstance(),\n        })\n      ),\n    [\n      getHooks,\n      getInstance,\n      userColumns,\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n      ...reduceHooks(getHooks().columnsDeps, [], { instance: getInstance() }),\n    ]\n  )\n  getInstance().columns = columns\n\n  // Get the flat list of all columns and allow hooks to decorate\n  // those columns (and trigger this memoization via deps)\n  let allColumns = React.useMemo(\n    () =>\n      reduceHooks(getHooks().allColumns, flattenColumns(columns), {\n        instance: getInstance(),\n      }).map(assignColumnAccessor),\n    [\n      columns,\n      getHooks,\n      getInstance,\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n      ...reduceHooks(getHooks().allColumnsDeps, [], {\n        instance: getInstance(),\n      }),\n    ]\n  )\n  getInstance().allColumns = allColumns\n\n  // Access the row model using initial columns\n  const [rows, flatRows, rowsById] = React.useMemo(() => {\n    let rows = []\n    let flatRows = []\n    const rowsById = {}\n\n    const allColumnsQueue = [...allColumns]\n\n    while (allColumnsQueue.length) {\n      const column = allColumnsQueue.shift()\n      accessRowsForColumn({\n        data,\n        rows,\n        flatRows,\n        rowsById,\n        column,\n        getRowId,\n        getSubRows,\n        accessValueHooks: getHooks().accessValue,\n        getInstance,\n      })\n    }\n\n    return [rows, flatRows, rowsById]\n  }, [allColumns, data, getRowId, getSubRows, getHooks, getInstance])\n\n  Object.assign(getInstance(), {\n    rows,\n    initialRows: [...rows],\n    flatRows,\n    rowsById,\n    // materializedColumns,\n  })\n\n  loopHooks(getHooks().useInstanceAfterData, getInstance())\n\n  // Get the flat list of all columns AFTER the rows\n  // have been access, and allow hooks to decorate\n  // those columns (and trigger this memoization via deps)\n  let visibleColumns = React.useMemo(\n    () =>\n      reduceHooks(getHooks().visibleColumns, allColumns, {\n        instance: getInstance(),\n      }).map(d => decorateColumn(d, defaultColumn)),\n    [\n      getHooks,\n      allColumns,\n      getInstance,\n      defaultColumn,\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n      ...reduceHooks(getHooks().visibleColumnsDeps, [], {\n        instance: getInstance(),\n      }),\n    ]\n  )\n\n  // Combine new visible columns with all columns\n  allColumns = React.useMemo(() => {\n    const columns = [...visibleColumns]\n\n    allColumns.forEach(column => {\n      if (!columns.find(d => d.id === column.id)) {\n        columns.push(column)\n      }\n    })\n\n    return columns\n  }, [allColumns, visibleColumns])\n  getInstance().allColumns = allColumns\n\n  if (process.env.NODE_ENV !== 'production') {\n    const duplicateColumns = allColumns.filter((column, i) => {\n      return allColumns.findIndex(d => d.id === column.id) !== i\n    })\n\n    if (duplicateColumns.length) {\n      console.info(allColumns)\n      throw new Error(\n        `Duplicate columns were found with ids: \"${duplicateColumns\n          .map(d => d.id)\n          .join(', ')}\" in the columns array above`\n      )\n    }\n  }\n\n  // Make the headerGroups\n  const headerGroups = React.useMemo(\n    () =>\n      reduceHooks(\n        getHooks().headerGroups,\n        makeHeaderGroups(visibleColumns, defaultColumn),\n        getInstance()\n      ),\n    [\n      getHooks,\n      visibleColumns,\n      defaultColumn,\n      getInstance,\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n      ...reduceHooks(getHooks().headerGroupsDeps, [], {\n        instance: getInstance(),\n      }),\n    ]\n  )\n  getInstance().headerGroups = headerGroups\n\n  // Get the first level of headers\n  const headers = React.useMemo(\n    () => (headerGroups.length ? headerGroups[0].headers : []),\n    [headerGroups]\n  )\n  getInstance().headers = headers\n\n  // Provide a flat header list for utilities\n  getInstance().flatHeaders = headerGroups.reduce(\n    (all, headerGroup) => [...all, ...headerGroup.headers],\n    []\n  )\n\n  loopHooks(getHooks().useInstanceBeforeDimensions, getInstance())\n\n  // Filter columns down to visible ones\n  const visibleColumnsDep = visibleColumns\n    .filter(d => d.isVisible)\n    .map(d => d.id)\n    .sort()\n    .join('_')\n\n  visibleColumns = React.useMemo(\n    () => visibleColumns.filter(d => d.isVisible),\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [visibleColumns, visibleColumnsDep]\n  )\n  getInstance().visibleColumns = visibleColumns\n\n  // Header Visibility is needed by this point\n  const [\n    totalColumnsMinWidth,\n    totalColumnsWidth,\n    totalColumnsMaxWidth,\n  ] = calculateHeaderWidths(headers)\n\n  getInstance().totalColumnsMinWidth = totalColumnsMinWidth\n  getInstance().totalColumnsWidth = totalColumnsWidth\n  getInstance().totalColumnsMaxWidth = totalColumnsMaxWidth\n\n  loopHooks(getHooks().useInstance, getInstance())\n\n  // Each materialized header needs to be assigned a render function and other\n  // prop getter properties here.\n  ;[...getInstance().flatHeaders, ...getInstance().allColumns].forEach(\n    column => {\n      // Give columns/headers rendering power\n      column.render = makeRenderer(getInstance(), column)\n\n      // Give columns/headers a default getHeaderProps\n      column.getHeaderProps = makePropGetter(getHooks().getHeaderProps, {\n        instance: getInstance(),\n        column,\n      })\n\n      // Give columns/headers a default getFooterProps\n      column.getFooterProps = makePropGetter(getHooks().getFooterProps, {\n        instance: getInstance(),\n        column,\n      })\n    }\n  )\n\n  getInstance().headerGroups = React.useMemo(\n    () =>\n      headerGroups.filter((headerGroup, i) => {\n        // Filter out any headers and headerGroups that don't have visible columns\n        headerGroup.headers = headerGroup.headers.filter(column => {\n          const recurse = headers =>\n            headers.filter(column => {\n              if (column.headers) {\n                return recurse(column.headers)\n              }\n              return column.isVisible\n            }).length\n          if (column.headers) {\n            return recurse(column.headers)\n          }\n          return column.isVisible\n        })\n\n        // Give headerGroups getRowProps\n        if (headerGroup.headers.length) {\n          headerGroup.getHeaderGroupProps = makePropGetter(\n            getHooks().getHeaderGroupProps,\n            { instance: getInstance(), headerGroup, index: i }\n          )\n\n          headerGroup.getFooterGroupProps = makePropGetter(\n            getHooks().getFooterGroupProps,\n            { instance: getInstance(), headerGroup, index: i }\n          )\n\n          return true\n        }\n\n        return false\n      }),\n    [headerGroups, getInstance, getHooks]\n  )\n\n  getInstance().footerGroups = [...getInstance().headerGroups].reverse()\n\n  // The prepareRow function is absolutely necessary and MUST be called on\n  // any rows the user wishes to be displayed.\n\n  getInstance().prepareRow = React.useCallback(\n    row => {\n      row.getRowProps = makePropGetter(getHooks().getRowProps, {\n        instance: getInstance(),\n        row,\n      })\n\n      // Build the visible cells for each row\n      row.allCells = allColumns.map(column => {\n        const value = row.values[column.id]\n\n        const cell = {\n          column,\n          row,\n          value,\n        }\n\n        // Give each cell a getCellProps base\n        cell.getCellProps = makePropGetter(getHooks().getCellProps, {\n          instance: getInstance(),\n          cell,\n        })\n\n        // Give each cell a renderer function (supports multiple renderers)\n        cell.render = makeRenderer(getInstance(), column, {\n          row,\n          cell,\n          value,\n        })\n\n        return cell\n      })\n\n      row.cells = visibleColumns.map(column =>\n        row.allCells.find(cell => cell.column.id === column.id)\n      )\n\n      // need to apply any row specific hooks (useExpanded requires this)\n      loopHooks(getHooks().prepareRow, row, { instance: getInstance() })\n    },\n    [getHooks, getInstance, allColumns, visibleColumns]\n  )\n\n  getInstance().getTableProps = makePropGetter(getHooks().getTableProps, {\n    instance: getInstance(),\n  })\n\n  getInstance().getTableBodyProps = makePropGetter(\n    getHooks().getTableBodyProps,\n    {\n      instance: getInstance(),\n    }\n  )\n\n  loopHooks(getHooks().useFinalInstance, getInstance())\n\n  return getInstance()\n}\n\nfunction calculateHeaderWidths(headers, left = 0) {\n  let sumTotalMinWidth = 0\n  let sumTotalWidth = 0\n  let sumTotalMaxWidth = 0\n  let sumTotalFlexWidth = 0\n\n  headers.forEach(header => {\n    let { headers: subHeaders } = header\n\n    header.totalLeft = left\n\n    if (subHeaders && subHeaders.length) {\n      const [\n        totalMinWidth,\n        totalWidth,\n        totalMaxWidth,\n        totalFlexWidth,\n      ] = calculateHeaderWidths(subHeaders, left)\n      header.totalMinWidth = totalMinWidth\n      header.totalWidth = totalWidth\n      header.totalMaxWidth = totalMaxWidth\n      header.totalFlexWidth = totalFlexWidth\n    } else {\n      header.totalMinWidth = header.minWidth\n      header.totalWidth = Math.min(\n        Math.max(header.minWidth, header.width),\n        header.maxWidth\n      )\n      header.totalMaxWidth = header.maxWidth\n      header.totalFlexWidth = header.canResize ? header.totalWidth : 0\n    }\n    if (header.isVisible) {\n      left += header.totalWidth\n      sumTotalMinWidth += header.totalMinWidth\n      sumTotalWidth += header.totalWidth\n      sumTotalMaxWidth += header.totalMaxWidth\n      sumTotalFlexWidth += header.totalFlexWidth\n    }\n  })\n\n  return [sumTotalMinWidth, sumTotalWidth, sumTotalMaxWidth, sumTotalFlexWidth]\n}\n\nfunction accessRowsForColumn({\n  data,\n  rows,\n  flatRows,\n  rowsById,\n  column,\n  getRowId,\n  getSubRows,\n  accessValueHooks,\n  getInstance,\n}) {\n  // Access the row's data column-by-column\n  // We do it this way so we can incrementally add materialized\n  // columns after the first pass and avoid excessive looping\n  const accessRow = (originalRow, rowIndex, depth = 0, parent, parentRows) => {\n    // Keep the original reference around\n    const original = originalRow\n\n    const id = getRowId(originalRow, rowIndex, parent)\n\n    let row = rowsById[id]\n\n    // If the row hasn't been created, let's make it\n    if (!row) {\n      row = {\n        id,\n        original,\n        index: rowIndex,\n        depth,\n        cells: [{}], // This is a dummy cell\n      }\n\n      // Override common array functions (and the dummy cell's getCellProps function)\n      // to show an error if it is accessed without calling prepareRow\n      row.cells.map = unpreparedAccessWarning\n      row.cells.filter = unpreparedAccessWarning\n      row.cells.forEach = unpreparedAccessWarning\n      row.cells[0].getCellProps = unpreparedAccessWarning\n\n      // Create the cells and values\n      row.values = {}\n\n      // Push this row into the parentRows array\n      parentRows.push(row)\n      // Keep track of every row in a flat array\n      flatRows.push(row)\n      // Also keep track of every row by its ID\n      rowsById[id] = row\n\n      // Get the original subrows\n      row.originalSubRows = getSubRows(originalRow, rowIndex)\n\n      // Then recursively access them\n      if (row.originalSubRows) {\n        const subRows = []\n        row.originalSubRows.forEach((d, i) =>\n          accessRow(d, i, depth + 1, row, subRows)\n        )\n        // Keep the new subRows array on the row\n        row.subRows = subRows\n      }\n    } else if (row.subRows) {\n      // If the row exists, then it's already been accessed\n      // Keep recursing, but don't worry about passing the\n      // accumlator array (those rows already exist)\n      row.originalSubRows.forEach((d, i) => accessRow(d, i, depth + 1, row))\n    }\n\n    // If the column has an accessor, use it to get a value\n    if (column.accessor) {\n      row.values[column.id] = column.accessor(\n        originalRow,\n        rowIndex,\n        row,\n        parentRows,\n        data\n      )\n    }\n\n    // Allow plugins to manipulate the column value\n    row.values[column.id] = reduceHooks(\n      accessValueHooks,\n      row.values[column.id],\n      {\n        row,\n        column,\n        instance: getInstance(),\n      },\n      true\n    )\n  }\n\n  data.forEach((originalRow, rowIndex) =>\n    accessRow(originalRow, rowIndex, 0, undefined, rows)\n  )\n}\n","import React from 'react'\n\nimport { expandRows } from '../utils'\n\nimport {\n  useGetLatest,\n  actions,\n  useMountedLayoutEffect,\n  makePropGetter,\n  ensurePluginOrder,\n} from '../publicUtils'\n\n// Actions\nactions.resetExpanded = 'resetExpanded'\nactions.toggleRowExpanded = 'toggleRowExpanded'\nactions.toggleAllRowsExpanded = 'toggleAllRowsExpanded'\n\nexport const useExpanded = hooks => {\n  hooks.getToggleAllRowsExpandedProps = [defaultGetToggleAllRowsExpandedProps]\n  hooks.getToggleRowExpandedProps = [defaultGetToggleRowExpandedProps]\n  hooks.stateReducers.push(reducer)\n  hooks.useInstance.push(useInstance)\n  hooks.prepareRow.push(prepareRow)\n}\n\nuseExpanded.pluginName = 'useExpanded'\n\nconst defaultGetToggleAllRowsExpandedProps = (props, { instance }) => [\n  props,\n  {\n    onClick: e => {\n      instance.toggleAllRowsExpanded()\n    },\n    style: {\n      cursor: 'pointer',\n    },\n    title: 'Toggle All Rows Expanded',\n  },\n]\n\nconst defaultGetToggleRowExpandedProps = (props, { row }) => [\n  props,\n  {\n    onClick: () => {\n      row.toggleRowExpanded()\n    },\n    style: {\n      cursor: 'pointer',\n    },\n    title: 'Toggle Row Expanded',\n  },\n]\n\n// Reducer\nfunction reducer(state, action, previousState, instance) {\n  if (action.type === actions.init) {\n    return {\n      expanded: {},\n      ...state,\n    }\n  }\n\n  if (action.type === actions.resetExpanded) {\n    return {\n      ...state,\n      expanded: instance.initialState.expanded || {},\n    }\n  }\n\n  if (action.type === actions.toggleAllRowsExpanded) {\n    const { value } = action\n    const { rowsById } = instance\n\n    const isAllRowsExpanded =\n      Object.keys(rowsById).length === Object.keys(state.expanded).length\n\n    const expandAll = typeof value !== 'undefined' ? value : !isAllRowsExpanded\n\n    if (expandAll) {\n      const expanded = {}\n\n      Object.keys(rowsById).forEach(rowId => {\n        expanded[rowId] = true\n      })\n\n      return {\n        ...state,\n        expanded,\n      }\n    }\n\n    return {\n      ...state,\n      expanded: {},\n    }\n  }\n\n  if (action.type === actions.toggleRowExpanded) {\n    const { id, value: setExpanded } = action\n    const exists = state.expanded[id]\n\n    const shouldExist =\n      typeof setExpanded !== 'undefined' ? setExpanded : !exists\n\n    if (!exists && shouldExist) {\n      return {\n        ...state,\n        expanded: {\n          ...state.expanded,\n          [id]: true,\n        },\n      }\n    } else if (exists && !shouldExist) {\n      const { [id]: _, ...rest } = state.expanded\n      return {\n        ...state,\n        expanded: rest,\n      }\n    } else {\n      return state\n    }\n  }\n}\n\nfunction useInstance(instance) {\n  const {\n    data,\n    rows,\n    rowsById,\n    manualExpandedKey = 'expanded',\n    paginateExpandedRows = true,\n    expandSubRows = true,\n    autoResetExpanded = true,\n    getHooks,\n    plugins,\n    state: { expanded },\n    dispatch,\n  } = instance\n\n  ensurePluginOrder(\n    plugins,\n    ['useSortBy', 'useGroupBy', 'usePivotColumns', 'useGlobalFilter'],\n    'useExpanded'\n  )\n\n  const getAutoResetExpanded = useGetLatest(autoResetExpanded)\n\n  let isAllRowsExpanded = Boolean(\n    Object.keys(rowsById).length && Object.keys(expanded).length\n  )\n\n  if (isAllRowsExpanded) {\n    if (Object.keys(rowsById).some(id => !expanded[id])) {\n      isAllRowsExpanded = false\n    }\n  }\n\n  // Bypass any effects from firing when this changes\n  useMountedLayoutEffect(() => {\n    if (getAutoResetExpanded()) {\n      dispatch({ type: actions.resetExpanded })\n    }\n  }, [dispatch, data])\n\n  const toggleRowExpanded = React.useCallback(\n    (id, value) => {\n      dispatch({ type: actions.toggleRowExpanded, id, value })\n    },\n    [dispatch]\n  )\n\n  const toggleAllRowsExpanded = React.useCallback(\n    value => dispatch({ type: actions.toggleAllRowsExpanded, value }),\n    [dispatch]\n  )\n\n  const expandedRows = React.useMemo(() => {\n    if (paginateExpandedRows) {\n      return expandRows(rows, { manualExpandedKey, expanded, expandSubRows })\n    }\n\n    return rows\n  }, [paginateExpandedRows, rows, manualExpandedKey, expanded, expandSubRows])\n\n  const expandedDepth = React.useMemo(() => findExpandedDepth(expanded), [\n    expanded,\n  ])\n\n  const getInstance = useGetLatest(instance)\n\n  const getToggleAllRowsExpandedProps = makePropGetter(\n    getHooks().getToggleAllRowsExpandedProps,\n    { instance: getInstance() }\n  )\n\n  Object.assign(instance, {\n    preExpandedRows: rows,\n    expandedRows,\n    rows: expandedRows,\n    expandedDepth,\n    isAllRowsExpanded,\n    toggleRowExpanded,\n    toggleAllRowsExpanded,\n    getToggleAllRowsExpandedProps,\n  })\n}\n\nfunction prepareRow(row, { instance: { getHooks }, instance }) {\n  row.toggleRowExpanded = set => instance.toggleRowExpanded(row.id, set)\n\n  row.getToggleRowExpandedProps = makePropGetter(\n    getHooks().getToggleRowExpandedProps,\n    {\n      instance,\n      row,\n    }\n  )\n}\n\nfunction findExpandedDepth(expanded) {\n  let maxDepth = 0\n\n  Object.keys(expanded).forEach(id => {\n    const splitId = id.split('.')\n    maxDepth = Math.max(maxDepth, splitId.length)\n  })\n\n  return maxDepth\n}\n","export const text = (rows, ids, filterValue) => {\n  rows = rows.filter(row => {\n    return ids.some(id => {\n      const rowValue = row.values[id]\n      return String(rowValue)\n        .toLowerCase()\n        .includes(String(filterValue).toLowerCase())\n    })\n  })\n  return rows\n}\n\ntext.autoRemove = val => !val\n\nexport const exactText = (rows, ids, filterValue) => {\n  return rows.filter(row => {\n    return ids.some(id => {\n      const rowValue = row.values[id]\n      return rowValue !== undefined\n        ? String(rowValue).toLowerCase() === String(filterValue).toLowerCase()\n        : true\n    })\n  })\n}\n\nexactText.autoRemove = val => !val\n\nexport const exactTextCase = (rows, ids, filterValue) => {\n  return rows.filter(row => {\n    return ids.some(id => {\n      const rowValue = row.values[id]\n      return rowValue !== undefined\n        ? String(rowValue) === String(filterValue)\n        : true\n    })\n  })\n}\n\nexactTextCase.autoRemove = val => !val\n\nexport const includes = (rows, ids, filterValue) => {\n  return rows.filter(row => {\n    return ids.some(id => {\n      const rowValue = row.values[id]\n      return rowValue.includes(filterValue)\n    })\n  })\n}\n\nincludes.autoRemove = val => !val || !val.length\n\nexport const includesAll = (rows, ids, filterValue) => {\n  return rows.filter(row => {\n    return ids.some(id => {\n      const rowValue = row.values[id]\n      return (\n        rowValue &&\n        rowValue.length &&\n        filterValue.every(val => rowValue.includes(val))\n      )\n    })\n  })\n}\n\nincludesAll.autoRemove = val => !val || !val.length\n\nexport const includesSome = (rows, ids, filterValue) => {\n  return rows.filter(row => {\n    return ids.some(id => {\n      const rowValue = row.values[id]\n      return (\n        rowValue &&\n        rowValue.length &&\n        filterValue.some(val => rowValue.includes(val))\n      )\n    })\n  })\n}\n\nincludesSome.autoRemove = val => !val || !val.length\n\nexport const includesValue = (rows, ids, filterValue) => {\n  return rows.filter(row => {\n    return ids.some(id => {\n      const rowValue = row.values[id]\n      return filterValue.includes(rowValue)\n    })\n  })\n}\n\nincludesValue.autoRemove = val => !val || !val.length\n\nexport const exact = (rows, ids, filterValue) => {\n  return rows.filter(row => {\n    return ids.some(id => {\n      const rowValue = row.values[id]\n      return rowValue === filterValue\n    })\n  })\n}\n\nexact.autoRemove = val => typeof val === 'undefined'\n\nexport const equals = (rows, ids, filterValue) => {\n  return rows.filter(row => {\n    return ids.some(id => {\n      const rowValue = row.values[id]\n      // eslint-disable-next-line eqeqeq\n      return rowValue == filterValue\n    })\n  })\n}\n\nequals.autoRemove = val => val == null\n\nexport const between = (rows, ids, filterValue) => {\n  let [min, max] = filterValue || []\n\n  min = typeof min === 'number' ? min : -Infinity\n  max = typeof max === 'number' ? max : Infinity\n\n  if (min > max) {\n    const temp = min\n    min = max\n    max = temp\n  }\n\n  return rows.filter(row => {\n    return ids.some(id => {\n      const rowValue = row.values[id]\n      return rowValue >= min && rowValue <= max\n    })\n  })\n}\n\nbetween.autoRemove = val =>\n  !val || (typeof val[0] !== 'number' && typeof val[1] !== 'number')\n","import React from 'react'\n\nimport {\n  getFirstDefined,\n  getFilterMethod,\n  shouldAutoRemoveFilter,\n} from '../utils'\n\nimport {\n  actions,\n  useGetLatest,\n  functionalUpdate,\n  useMountedLayoutEffect,\n} from '../publicUtils'\n\nimport * as filterTypes from '../filterTypes'\n\n// Actions\nactions.resetFilters = 'resetFilters'\nactions.setFilter = 'setFilter'\nactions.setAllFilters = 'setAllFilters'\n\nexport const useFilters = hooks => {\n  hooks.stateReducers.push(reducer)\n  hooks.useInstance.push(useInstance)\n}\n\nuseFilters.pluginName = 'useFilters'\n\nfunction reducer(state, action, previousState, instance) {\n  if (action.type === actions.init) {\n    return {\n      filters: [],\n      ...state,\n    }\n  }\n\n  if (action.type === actions.resetFilters) {\n    return {\n      ...state,\n      filters: instance.initialState.filters || [],\n    }\n  }\n\n  if (action.type === actions.setFilter) {\n    const { columnId, filterValue } = action\n    const { allColumns, filterTypes: userFilterTypes } = instance\n\n    const column = allColumns.find(d => d.id === columnId)\n\n    if (!column) {\n      throw new Error(\n        `React-Table: Could not find a column with id: ${columnId}`\n      )\n    }\n\n    const filterMethod = getFilterMethod(\n      column.filter,\n      userFilterTypes || {},\n      filterTypes\n    )\n\n    const previousfilter = state.filters.find(d => d.id === columnId)\n\n    const newFilter = functionalUpdate(\n      filterValue,\n      previousfilter && previousfilter.value\n    )\n\n    //\n    if (shouldAutoRemoveFilter(filterMethod.autoRemove, newFilter, column)) {\n      return {\n        ...state,\n        filters: state.filters.filter(d => d.id !== columnId),\n      }\n    }\n\n    if (previousfilter) {\n      return {\n        ...state,\n        filters: state.filters.map(d => {\n          if (d.id === columnId) {\n            return { id: columnId, value: newFilter }\n          }\n          return d\n        }),\n      }\n    }\n\n    return {\n      ...state,\n      filters: [...state.filters, { id: columnId, value: newFilter }],\n    }\n  }\n\n  if (action.type === actions.setAllFilters) {\n    const { filters } = action\n    const { allColumns, filterTypes: userFilterTypes } = instance\n\n    return {\n      ...state,\n      // Filter out undefined values\n      filters: functionalUpdate(filters, state.filters).filter(filter => {\n        const column = allColumns.find(d => d.id === filter.id)\n        const filterMethod = getFilterMethod(\n          column.filter,\n          userFilterTypes || {},\n          filterTypes\n        )\n\n        if (\n          shouldAutoRemoveFilter(filterMethod.autoRemove, filter.value, column)\n        ) {\n          return false\n        }\n        return true\n      }),\n    }\n  }\n}\n\nfunction useInstance(instance) {\n  const {\n    data,\n    rows,\n    flatRows,\n    rowsById,\n    allColumns,\n    filterTypes: userFilterTypes,\n    manualFilters,\n    defaultCanFilter = false,\n    disableFilters,\n    state: { filters },\n    dispatch,\n    autoResetFilters = true,\n  } = instance\n\n  const setFilter = React.useCallback(\n    (columnId, filterValue) => {\n      dispatch({ type: actions.setFilter, columnId, filterValue })\n    },\n    [dispatch]\n  )\n\n  const setAllFilters = React.useCallback(\n    filters => {\n      dispatch({\n        type: actions.setAllFilters,\n        filters,\n      })\n    },\n    [dispatch]\n  )\n\n  allColumns.forEach(column => {\n    const {\n      id,\n      accessor,\n      defaultCanFilter: columnDefaultCanFilter,\n      disableFilters: columnDisableFilters,\n    } = column\n\n    // Determine if a column is filterable\n    column.canFilter = accessor\n      ? getFirstDefined(\n          columnDisableFilters === true ? false : undefined,\n          disableFilters === true ? false : undefined,\n          true\n        )\n      : getFirstDefined(columnDefaultCanFilter, defaultCanFilter, false)\n\n    // Provide the column a way of updating the filter value\n    column.setFilter = val => setFilter(column.id, val)\n\n    // Provide the current filter value to the column for\n    // convenience\n    const found = filters.find(d => d.id === id)\n    column.filterValue = found && found.value\n  })\n\n  const [\n    filteredRows,\n    filteredFlatRows,\n    filteredRowsById,\n  ] = React.useMemo(() => {\n    if (manualFilters || !filters.length) {\n      return [rows, flatRows, rowsById]\n    }\n\n    const filteredFlatRows = []\n    const filteredRowsById = {}\n\n    // Filters top level and nested rows\n    const filterRows = (rows, depth = 0) => {\n      let filteredRows = rows\n\n      filteredRows = filters.reduce(\n        (filteredSoFar, { id: columnId, value: filterValue }) => {\n          // Find the filters column\n          const column = allColumns.find(d => d.id === columnId)\n\n          if (!column) {\n            return filteredSoFar\n          }\n\n          if (depth === 0) {\n            column.preFilteredRows = filteredSoFar\n          }\n\n          const filterMethod = getFilterMethod(\n            column.filter,\n            userFilterTypes || {},\n            filterTypes\n          )\n\n          if (!filterMethod) {\n            console.warn(\n              `Could not find a valid 'column.filter' for column with the ID: ${column.id}.`\n            )\n            return filteredSoFar\n          }\n\n          // Pass the rows, id, filterValue and column to the filterMethod\n          // to get the filtered rows back\n          column.filteredRows = filterMethod(\n            filteredSoFar,\n            [columnId],\n            filterValue\n          )\n\n          return column.filteredRows\n        },\n        rows\n      )\n\n      // Apply the filter to any subRows\n      // We technically could do this recursively in the above loop,\n      // but that would severely hinder the API for the user, since they\n      // would be required to do that recursion in some scenarios\n      filteredRows.forEach(row => {\n        filteredFlatRows.push(row)\n        filteredRowsById[row.id] = row\n        if (!row.subRows) {\n          return\n        }\n\n        row.subRows =\n          row.subRows && row.subRows.length > 0\n            ? filterRows(row.subRows, depth + 1)\n            : row.subRows\n      })\n\n      return filteredRows\n    }\n\n    return [filterRows(rows), filteredFlatRows, filteredRowsById]\n  }, [\n    manualFilters,\n    filters,\n    rows,\n    flatRows,\n    rowsById,\n    allColumns,\n    userFilterTypes,\n  ])\n\n  React.useMemo(() => {\n    // Now that each filtered column has it's partially filtered rows,\n    // lets assign the final filtered rows to all of the other columns\n    const nonFilteredColumns = allColumns.filter(\n      column => !filters.find(d => d.id === column.id)\n    )\n\n    // This essentially enables faceted filter options to be built easily\n    // using every column's preFilteredRows value\n    nonFilteredColumns.forEach(column => {\n      column.preFilteredRows = filteredRows\n      column.filteredRows = filteredRows\n    })\n  }, [filteredRows, filters, allColumns])\n\n  const getAutoResetFilters = useGetLatest(autoResetFilters)\n\n  useMountedLayoutEffect(() => {\n    if (getAutoResetFilters()) {\n      dispatch({ type: actions.resetFilters })\n    }\n  }, [dispatch, manualFilters ? null : data])\n\n  Object.assign(instance, {\n    preFilteredRows: rows,\n    preFilteredFlatRows: flatRows,\n    preFilteredRowsById: rowsById,\n    filteredRows,\n    filteredFlatRows,\n    filteredRowsById,\n    rows: filteredRows,\n    flatRows: filteredFlatRows,\n    rowsById: filteredRowsById,\n    setFilter,\n    setAllFilters,\n  })\n}\n","import React from 'react'\n\nimport {\n  getFilterMethod,\n  shouldAutoRemoveFilter,\n  getFirstDefined,\n} from '../utils'\n\nimport {\n  actions,\n  useMountedLayoutEffect,\n  functionalUpdate,\n  useGetLatest,\n} from '../publicUtils'\n\nimport * as filterTypes from '../filterTypes'\n\n// Actions\nactions.resetGlobalFilter = 'resetGlobalFilter'\nactions.setGlobalFilter = 'setGlobalFilter'\n\nexport const useGlobalFilter = hooks => {\n  hooks.stateReducers.push(reducer)\n  hooks.useInstance.push(useInstance)\n}\n\nuseGlobalFilter.pluginName = 'useGlobalFilter'\n\nfunction reducer(state, action, previousState, instance) {\n  if (action.type === actions.resetGlobalFilter) {\n    return {\n      ...state,\n      globalFilter: instance.initialState.globalFilter || undefined,\n    }\n  }\n\n  if (action.type === actions.setGlobalFilter) {\n    const { filterValue } = action\n    const { userFilterTypes } = instance\n\n    const filterMethod = getFilterMethod(\n      instance.globalFilter,\n      userFilterTypes || {},\n      filterTypes\n    )\n\n    const newFilter = functionalUpdate(filterValue, state.globalFilter)\n\n    //\n    if (shouldAutoRemoveFilter(filterMethod.autoRemove, newFilter)) {\n      const { globalFilter, ...stateWithoutGlobalFilter } = state\n      return stateWithoutGlobalFilter\n    }\n\n    return {\n      ...state,\n      globalFilter: newFilter,\n    }\n  }\n}\n\nfunction useInstance(instance) {\n  const {\n    data,\n    rows,\n    flatRows,\n    rowsById,\n    allColumns,\n    filterTypes: userFilterTypes,\n    globalFilter,\n    manualGlobalFilter,\n    state: { globalFilter: globalFilterValue },\n    dispatch,\n    autoResetGlobalFilter = true,\n    disableGlobalFilter,\n  } = instance\n\n  const setGlobalFilter = React.useCallback(\n    filterValue => {\n      dispatch({ type: actions.setGlobalFilter, filterValue })\n    },\n    [dispatch]\n  )\n\n  // TODO: Create a filter cache for incremental high speed multi-filtering\n  // This gets pretty complicated pretty fast, since you have to maintain a\n  // cache for each row group (top-level rows, and each row's recursive subrows)\n  // This would make multi-filtering a lot faster though. Too far?\n\n  const [\n    globalFilteredRows,\n    globalFilteredFlatRows,\n    globalFilteredRowsById,\n  ] = React.useMemo(() => {\n    if (manualGlobalFilter || typeof globalFilterValue === 'undefined') {\n      return [rows, flatRows, rowsById]\n    }\n\n    const filteredFlatRows = []\n    const filteredRowsById = {}\n\n    const filterMethod = getFilterMethod(\n      globalFilter,\n      userFilterTypes || {},\n      filterTypes\n    )\n\n    if (!filterMethod) {\n      console.warn(`Could not find a valid 'globalFilter' option.`)\n      return rows\n    }\n\n    allColumns.forEach(column => {\n      const { disableGlobalFilter: columnDisableGlobalFilter } = column\n\n      column.canFilter = getFirstDefined(\n        columnDisableGlobalFilter === true ? false : undefined,\n        disableGlobalFilter === true ? false : undefined,\n        true\n      )\n    })\n\n    const filterableColumns = allColumns.filter(c => c.canFilter === true)\n\n    // Filters top level and nested rows\n    const filterRows = filteredRows => {\n      filteredRows = filterMethod(\n        filteredRows,\n        filterableColumns.map(d => d.id),\n        globalFilterValue\n      )\n\n      filteredRows.forEach(row => {\n        filteredFlatRows.push(row)\n        filteredRowsById[row.id] = row\n\n        row.subRows =\n          row.subRows && row.subRows.length\n            ? filterRows(row.subRows)\n            : row.subRows\n      })\n\n      return filteredRows\n    }\n\n    return [filterRows(rows), filteredFlatRows, filteredRowsById]\n  }, [\n    manualGlobalFilter,\n    globalFilterValue,\n    globalFilter,\n    userFilterTypes,\n    allColumns,\n    rows,\n    flatRows,\n    rowsById,\n    disableGlobalFilter,\n  ])\n\n  const getAutoResetGlobalFilter = useGetLatest(autoResetGlobalFilter)\n\n  useMountedLayoutEffect(() => {\n    if (getAutoResetGlobalFilter()) {\n      dispatch({ type: actions.resetGlobalFilter })\n    }\n  }, [dispatch, manualGlobalFilter ? null : data])\n\n  Object.assign(instance, {\n    preGlobalFilteredRows: rows,\n    preGlobalFilteredFlatRows: flatRows,\n    preGlobalFilteredRowsById: rowsById,\n    globalFilteredRows,\n    globalFilteredFlatRows,\n    globalFilteredRowsById,\n    rows: globalFilteredRows,\n    flatRows: globalFilteredFlatRows,\n    rowsById: globalFilteredRowsById,\n    setGlobalFilter,\n    disableGlobalFilter,\n  })\n}\n","export function sum(values, aggregatedValues) {\n  // It's faster to just add the aggregations together instead of\n  // process leaf nodes individually\n  return aggregatedValues.reduce(\n    (sum, next) => sum + (typeof next === 'number' ? next : 0),\n    0\n  )\n}\n\nexport function min(values) {\n  let min = values[0] || 0\n\n  values.forEach(value => {\n    if (typeof value === 'number') {\n      min = Math.min(min, value)\n    }\n  })\n\n  return min\n}\n\nexport function max(values) {\n  let max = values[0] || 0\n\n  values.forEach(value => {\n    if (typeof value === 'number') {\n      max = Math.max(max, value)\n    }\n  })\n\n  return max\n}\n\nexport function minMax(values) {\n  let min = values[0] || 0\n  let max = values[0] || 0\n\n  values.forEach(value => {\n    if (typeof value === 'number') {\n      min = Math.min(min, value)\n      max = Math.max(max, value)\n    }\n  })\n\n  return `${min}..${max}`\n}\n\nexport function average(values) {\n  return sum(null, values) / values.length\n}\n\nexport function median(values) {\n  if (!values.length) {\n    return null\n  }\n\n  const mid = Math.floor(values.length / 2)\n  const nums = [...values].sort((a, b) => a - b)\n  return values.length % 2 !== 0 ? nums[mid] : (nums[mid - 1] + nums[mid]) / 2\n}\n\nexport function unique(values) {\n  return Array.from(new Set(values).values())\n}\n\nexport function uniqueCount(values) {\n  return new Set(values).size\n}\n\nexport function count(values) {\n  return values.length\n}\n","import React from 'react'\n\nimport * as aggregations from '../aggregations'\n\nimport { getFirstDefined, flattenBy } from '../utils'\n\nimport {\n  actions,\n  makePropGetter,\n  ensurePluginOrder,\n  useMountedLayoutEffect,\n  useGetLatest,\n} from '../publicUtils'\n\nconst emptyArray = []\nconst emptyObject = {}\n\n// Actions\nactions.resetGroupBy = 'resetGroupBy'\nactions.setGroupBy = 'setGroupBy'\nactions.toggleGroupBy = 'toggleGroupBy'\n\nexport const useGroupBy = hooks => {\n  hooks.getGroupByToggleProps = [defaultGetGroupByToggleProps]\n  hooks.stateReducers.push(reducer)\n  hooks.visibleColumnsDeps.push((deps, { instance }) => [\n    ...deps,\n    instance.state.groupBy,\n  ])\n  hooks.visibleColumns.push(visibleColumns)\n  hooks.useInstance.push(useInstance)\n  hooks.prepareRow.push(prepareRow)\n}\n\nuseGroupBy.pluginName = 'useGroupBy'\n\nconst defaultGetGroupByToggleProps = (props, { header }) => [\n  props,\n  {\n    onClick: header.canGroupBy\n      ? e => {\n          e.persist()\n          header.toggleGroupBy()\n        }\n      : undefined,\n    style: {\n      cursor: header.canGroupBy ? 'pointer' : undefined,\n    },\n    title: 'Toggle GroupBy',\n  },\n]\n\n// Reducer\nfunction reducer(state, action, previousState, instance) {\n  if (action.type === actions.init) {\n    return {\n      groupBy: [],\n      ...state,\n    }\n  }\n\n  if (action.type === actions.resetGroupBy) {\n    return {\n      ...state,\n      groupBy: instance.initialState.groupBy || [],\n    }\n  }\n\n  if (action.type === actions.setGroupBy) {\n    const { value } = action\n    return {\n      ...state,\n      groupBy: value,\n    }\n  }\n\n  if (action.type === actions.toggleGroupBy) {\n    const { columnId, value: setGroupBy } = action\n\n    const resolvedGroupBy =\n      typeof setGroupBy !== 'undefined'\n        ? setGroupBy\n        : !state.groupBy.includes(columnId)\n\n    if (resolvedGroupBy) {\n      return {\n        ...state,\n        groupBy: [...state.groupBy, columnId],\n      }\n    }\n\n    return {\n      ...state,\n      groupBy: state.groupBy.filter(d => d !== columnId),\n    }\n  }\n}\n\nfunction visibleColumns(\n  columns,\n  {\n    instance: {\n      state: { groupBy },\n    },\n  }\n) {\n  // Sort grouped columns to the start of the column list\n  // before the headers are built\n\n  const groupByColumns = groupBy\n    .map(g => columns.find(col => col.id === g))\n    .filter(Boolean)\n\n  const nonGroupByColumns = columns.filter(col => !groupBy.includes(col.id))\n\n  columns = [...groupByColumns, ...nonGroupByColumns]\n\n  columns.forEach(column => {\n    column.isGrouped = groupBy.includes(column.id)\n    column.groupedIndex = groupBy.indexOf(column.id)\n  })\n\n  return columns\n}\n\nconst defaultUserAggregations = {}\n\nfunction useInstance(instance) {\n  const {\n    data,\n    rows,\n    flatRows,\n    rowsById,\n    allColumns,\n    flatHeaders,\n    groupByFn = defaultGroupByFn,\n    manualGroupBy,\n    aggregations: userAggregations = defaultUserAggregations,\n    plugins,\n    state: { groupBy },\n    dispatch,\n    autoResetGroupBy = true,\n    disableGroupBy,\n    defaultCanGroupBy,\n    getHooks,\n  } = instance\n\n  ensurePluginOrder(plugins, ['useColumnOrder', 'useFilters'], 'useGroupBy')\n\n  const getInstance = useGetLatest(instance)\n\n  allColumns.forEach(column => {\n    const {\n      accessor,\n      defaultGroupBy: defaultColumnGroupBy,\n      disableGroupBy: columnDisableGroupBy,\n    } = column\n\n    column.canGroupBy = accessor\n      ? getFirstDefined(\n          column.canGroupBy,\n          columnDisableGroupBy === true ? false : undefined,\n          disableGroupBy === true ? false : undefined,\n          true\n        )\n      : getFirstDefined(\n          column.canGroupBy,\n          defaultColumnGroupBy,\n          defaultCanGroupBy,\n          false\n        )\n\n    if (column.canGroupBy) {\n      column.toggleGroupBy = () => instance.toggleGroupBy(column.id)\n    }\n\n    column.Aggregated = column.Aggregated || column.Cell\n  })\n\n  const toggleGroupBy = React.useCallback(\n    (columnId, value) => {\n      dispatch({ type: actions.toggleGroupBy, columnId, value })\n    },\n    [dispatch]\n  )\n\n  const setGroupBy = React.useCallback(\n    value => {\n      dispatch({ type: actions.setGroupBy, value })\n    },\n    [dispatch]\n  )\n\n  flatHeaders.forEach(header => {\n    header.getGroupByToggleProps = makePropGetter(\n      getHooks().getGroupByToggleProps,\n      { instance: getInstance(), header }\n    )\n  })\n\n  const [\n    groupedRows,\n    groupedFlatRows,\n    groupedRowsById,\n    onlyGroupedFlatRows,\n    onlyGroupedRowsById,\n    nonGroupedFlatRows,\n    nonGroupedRowsById,\n  ] = React.useMemo(() => {\n    if (manualGroupBy || !groupBy.length) {\n      return [\n        rows,\n        flatRows,\n        rowsById,\n        emptyArray,\n        emptyObject,\n        flatRows,\n        rowsById,\n      ]\n    }\n\n    // Ensure that the list of filtered columns exist\n    const existingGroupBy = groupBy.filter(g =>\n      allColumns.find(col => col.id === g)\n    )\n\n    // Find the columns that can or are aggregating\n    // Uses each column to aggregate rows into a single value\n    const aggregateRowsToValues = (leafRows, groupedRows, depth) => {\n      const values = {}\n\n      allColumns.forEach(column => {\n        // Don't aggregate columns that are in the groupBy\n        if (existingGroupBy.includes(column.id)) {\n          values[column.id] = groupedRows[0]\n            ? groupedRows[0].values[column.id]\n            : null\n          return\n        }\n\n        // Aggregate the values\n        let aggregateFn =\n          typeof column.aggregate === 'function'\n            ? column.aggregate\n            : userAggregations[column.aggregate] ||\n              aggregations[column.aggregate]\n\n        if (aggregateFn) {\n          // Get the columnValues to aggregate\n          const groupedValues = groupedRows.map(row => row.values[column.id])\n\n          // Get the columnValues to aggregate\n          const leafValues = leafRows.map(row => {\n            let columnValue = row.values[column.id]\n\n            if (!depth && column.aggregateValue) {\n              const aggregateValueFn =\n                typeof column.aggregateValue === 'function'\n                  ? column.aggregateValue\n                  : userAggregations[column.aggregateValue] ||\n                    aggregations[column.aggregateValue]\n\n              if (!aggregateValueFn) {\n                console.info({ column })\n                throw new Error(\n                  `React Table: Invalid column.aggregateValue option for column listed above`\n                )\n              }\n\n              columnValue = aggregateValueFn(columnValue, row, column)\n            }\n            return columnValue\n          })\n\n          values[column.id] = aggregateFn(leafValues, groupedValues)\n        } else if (column.aggregate) {\n          console.info({ column })\n          throw new Error(\n            `React Table: Invalid column.aggregate option for column listed above`\n          )\n        } else {\n          values[column.id] = null\n        }\n      })\n\n      return values\n    }\n\n    let groupedFlatRows = []\n    const groupedRowsById = {}\n    const onlyGroupedFlatRows = []\n    const onlyGroupedRowsById = {}\n    const nonGroupedFlatRows = []\n    const nonGroupedRowsById = {}\n\n    // Recursively group the data\n    const groupUpRecursively = (rows, depth = 0, parentId) => {\n      // This is the last level, just return the rows\n      if (depth === existingGroupBy.length) {\n        return rows.map((row) => ({ ...row, depth }))\n      }\n\n      const columnId = existingGroupBy[depth]\n\n      // Group the rows together for this level\n      let rowGroupsMap = groupByFn(rows, columnId)\n\n      // Peform aggregations for each group\n      const aggregatedGroupedRows = Object.entries(rowGroupsMap).map(\n        ([groupByVal, groupedRows], index) => {\n          let id = `${columnId}:${groupByVal}`\n          id = parentId ? `${parentId}>${id}` : id\n\n          // First, Recurse to group sub rows before aggregation\n          const subRows = groupUpRecursively(groupedRows, depth + 1, id)\n\n          // Flatten the leaf rows of the rows in this group\n          const leafRows = depth\n            ? flattenBy(groupedRows, 'leafRows')\n            : groupedRows\n\n          const values = aggregateRowsToValues(leafRows, groupedRows, depth)\n\n          const row = {\n            id,\n            isGrouped: true,\n            groupByID: columnId,\n            groupByVal,\n            values,\n            subRows,\n            leafRows,\n            depth,\n            index,\n          }\n\n          subRows.forEach(subRow => {\n            groupedFlatRows.push(subRow)\n            groupedRowsById[subRow.id] = subRow\n            if (subRow.isGrouped) {\n              onlyGroupedFlatRows.push(subRow)\n              onlyGroupedRowsById[subRow.id] = subRow\n            } else {\n              nonGroupedFlatRows.push(subRow)\n              nonGroupedRowsById[subRow.id] = subRow\n            }\n          })\n\n          return row\n        }\n      )\n\n      return aggregatedGroupedRows\n    }\n\n    const groupedRows = groupUpRecursively(rows)\n\n    groupedRows.forEach(subRow => {\n      groupedFlatRows.push(subRow)\n      groupedRowsById[subRow.id] = subRow\n      if (subRow.isGrouped) {\n        onlyGroupedFlatRows.push(subRow)\n        onlyGroupedRowsById[subRow.id] = subRow\n      } else {\n        nonGroupedFlatRows.push(subRow)\n        nonGroupedRowsById[subRow.id] = subRow\n      }\n    })\n\n    // Assign the new data\n    return [\n      groupedRows,\n      groupedFlatRows,\n      groupedRowsById,\n      onlyGroupedFlatRows,\n      onlyGroupedRowsById,\n      nonGroupedFlatRows,\n      nonGroupedRowsById,\n    ]\n  }, [\n    manualGroupBy,\n    groupBy,\n    rows,\n    flatRows,\n    rowsById,\n    allColumns,\n    userAggregations,\n    groupByFn,\n  ])\n\n  const getAutoResetGroupBy = useGetLatest(autoResetGroupBy)\n\n  useMountedLayoutEffect(() => {\n    if (getAutoResetGroupBy()) {\n      dispatch({ type: actions.resetGroupBy })\n    }\n  }, [dispatch, manualGroupBy ? null : data])\n\n  Object.assign(instance, {\n    preGroupedRows: rows,\n    preGroupedFlatRow: flatRows,\n    preGroupedRowsById: rowsById,\n    groupedRows,\n    groupedFlatRows,\n    groupedRowsById,\n    onlyGroupedFlatRows,\n    onlyGroupedRowsById,\n    nonGroupedFlatRows,\n    nonGroupedRowsById,\n    rows: groupedRows,\n    flatRows: groupedFlatRows,\n    rowsById: groupedRowsById,\n    toggleGroupBy,\n    setGroupBy,\n  })\n}\n\nfunction prepareRow(row) {\n  row.allCells.forEach(cell => {\n    // Grouped cells are in the groupBy and the pivot cell for the row\n    cell.isGrouped = cell.column.isGrouped && cell.column.id === row.groupByID\n    // Placeholder cells are any columns in the groupBy that are not grouped\n    cell.isPlaceholder = !cell.isGrouped && cell.column.isGrouped\n    // Aggregated cells are not grouped, not repeated, but still have subRows\n    cell.isAggregated =\n      !cell.isGrouped && !cell.isPlaceholder && row.subRows?.length\n  })\n}\n\nexport function defaultGroupByFn(rows, columnId) {\n  return rows.reduce((prev, row, i) => {\n    // TODO: Might want to implement a key serializer here so\n    // irregular column values can still be grouped if needed?\n    const resKey = `${row.values[columnId]}`\n    prev[resKey] = Array.isArray(prev[resKey]) ? prev[resKey] : []\n    prev[resKey].push(row)\n    return prev\n  }, {})\n}\n","const reSplitAlphaNumeric = /([0-9]+)/gm\n\n// Mixed sorting is slow, but very inclusive of many edge cases.\n// It handles numbers, mixed alphanumeric combinations, and even\n// null, undefined, and Infinity\nexport const alphanumeric = (rowA, rowB, columnId) => {\n  let [a, b] = getRowValuesByColumnID(rowA, rowB, columnId)\n\n  // Force to strings (or \"\" for unsupported types)\n  a = toString(a)\n  b = toString(b)\n\n  // Split on number groups, but keep the delimiter\n  // Then remove falsey split values\n  a = a.split(reSplitAlphaNumeric).filter(Boolean)\n  b = b.split(reSplitAlphaNumeric).filter(Boolean)\n\n  // While\n  while (a.length && b.length) {\n    let aa = a.shift()\n    let bb = b.shift()\n\n    const an = parseInt(aa, 10)\n    const bn = parseInt(bb, 10)\n\n    const combo = [an, bn].sort()\n\n    // Both are string\n    if (isNaN(combo[0])) {\n      if (aa > bb) {\n        return 1\n      }\n      if (bb > aa) {\n        return -1\n      }\n      continue\n    }\n\n    // One is a string, one is a number\n    if (isNaN(combo[1])) {\n      return isNaN(an) ? -1 : 1\n    }\n\n    // Both are numbers\n    if (an > bn) {\n      return 1\n    }\n    if (bn > an) {\n      return -1\n    }\n  }\n\n  return a.length - b.length\n}\nexport function datetime(rowA, rowB, columnId) {\n  let [a, b] = getRowValuesByColumnID(rowA, rowB, columnId)\n\n  a = a.getTime()\n  b = b.getTime()\n\n  return compareBasic(a, b)\n}\n\nexport function basic(rowA, rowB, columnId) {\n  let [a, b] = getRowValuesByColumnID(rowA, rowB, columnId)\n\n  return compareBasic(a, b)\n}\n\nexport function string(rowA, rowB, columnId) {\n  let [a, b] = getRowValuesByColumnID(rowA, rowB, columnId)\n\n  a = a.split('').filter(Boolean)\n  b = b.split('').filter(Boolean)\n\n  while (a.length && b.length) {\n    let aa = a.shift()\n    let bb = b.shift()\n\n    let alower = aa.toLowerCase()\n    let blower = bb.toLowerCase()\n\n    // Case insensitive comparison until characters match\n    if (alower > blower) {\n      return 1\n    }\n    if (blower > alower) {\n      return -1\n    }\n    // If lowercase characters are identical\n    if (aa > bb) {\n      return 1\n    }\n    if (bb > aa) {\n      return -1\n    }\n    continue\n  }\n\n  return a.length - b.length\n}\n\nexport function number(rowA, rowB, columnId) {\n  let [a, b] = getRowValuesByColumnID(rowA, rowB, columnId)\n\n  const replaceNonNumeric = /[^0-9.]/gi\n\n  a = Number(String(a).replace(replaceNonNumeric, ''))\n  b = Number(String(b).replace(replaceNonNumeric, ''))\n\n  return compareBasic(a, b)\n}\n\n// Utils\n\nfunction compareBasic(a, b) {\n  return a === b ? 0 : a > b ? 1 : -1\n}\n\nfunction getRowValuesByColumnID(row1, row2, columnId) {\n  return [row1.values[columnId], row2.values[columnId]]\n}\n\nfunction toString(a) {\n  if (typeof a === 'number') {\n    if (isNaN(a) || a === Infinity || a === -Infinity) {\n      return ''\n    }\n    return String(a)\n  }\n  if (typeof a === 'string') {\n    return a\n  }\n  return ''\n}\n","import React from 'react'\n\nimport {\n  actions,\n  ensurePluginOrder,\n  defaultColumn,\n  makePropGetter,\n  useGetLatest,\n  useMountedLayoutEffect,\n} from '../publicUtils'\n\nimport { getFirstDefined, isFunction } from '../utils'\n\nimport * as sortTypes from '../sortTypes'\n\n// Actions\nactions.resetSortBy = 'resetSortBy'\nactions.setSortBy = 'setSortBy'\nactions.toggleSortBy = 'toggleSortBy'\nactions.clearSortBy = 'clearSortBy'\n\ndefaultColumn.sortType = 'alphanumeric'\ndefaultColumn.sortDescFirst = false\n\nexport const useSortBy = hooks => {\n  hooks.getSortByToggleProps = [defaultGetSortByToggleProps]\n  hooks.stateReducers.push(reducer)\n  hooks.useInstance.push(useInstance)\n}\n\nuseSortBy.pluginName = 'useSortBy'\n\nconst defaultGetSortByToggleProps = (props, { instance, column }) => {\n  const { isMultiSortEvent = e => e.shiftKey } = instance\n\n  return [\n    props,\n    {\n      onClick: column.canSort\n        ? e => {\n            e.persist()\n            column.toggleSortBy(\n              undefined,\n              !instance.disableMultiSort && isMultiSortEvent(e)\n            )\n          }\n        : undefined,\n      style: {\n        cursor: column.canSort ? 'pointer' : undefined,\n      },\n      title: column.canSort ? 'Toggle SortBy' : undefined,\n    },\n  ]\n}\n\n// Reducer\nfunction reducer(state, action, previousState, instance) {\n  if (action.type === actions.init) {\n    return {\n      sortBy: [],\n      ...state,\n    }\n  }\n\n  if (action.type === actions.resetSortBy) {\n    return {\n      ...state,\n      sortBy: instance.initialState.sortBy || [],\n    }\n  }\n\n  if (action.type === actions.clearSortBy) {\n    const { sortBy } = state\n    const newSortBy = sortBy.filter(d => d.id !== action.columnId)\n\n    return {\n      ...state,\n      sortBy: newSortBy,\n    }\n  }\n\n  if (action.type === actions.setSortBy) {\n    const { sortBy } = action\n    return {\n      ...state,\n      sortBy,\n    }\n  }\n\n  if (action.type === actions.toggleSortBy) {\n    const { columnId, desc, multi } = action\n\n    const {\n      allColumns,\n      disableMultiSort,\n      disableSortRemove,\n      disableMultiRemove,\n      maxMultiSortColCount = Number.MAX_SAFE_INTEGER,\n    } = instance\n\n    const { sortBy } = state\n\n    // Find the column for this columnId\n    const column = allColumns.find(d => d.id === columnId)\n    const { sortDescFirst } = column\n\n    // Find any existing sortBy for this column\n    const existingSortBy = sortBy.find(d => d.id === columnId)\n    const existingIndex = sortBy.findIndex(d => d.id === columnId)\n    const hasDescDefined = typeof desc !== 'undefined' && desc !== null\n\n    let newSortBy = []\n\n    // What should we do with this sort action?\n    let sortAction\n\n    if (!disableMultiSort && multi) {\n      if (existingSortBy) {\n        sortAction = 'toggle'\n      } else {\n        sortAction = 'add'\n      }\n    } else {\n      // Normal mode\n      if (existingIndex !== sortBy.length - 1 || sortBy.length !== 1) {\n        sortAction = 'replace'\n      } else if (existingSortBy) {\n        sortAction = 'toggle'\n      } else {\n        sortAction = 'replace'\n      }\n    }\n\n    // Handle toggle states that will remove the sortBy\n    if (\n      sortAction === 'toggle' && // Must be toggling\n      !disableSortRemove && // If disableSortRemove, disable in general\n      !hasDescDefined && // Must not be setting desc\n      (multi ? !disableMultiRemove : true) && // If multi, don't allow if disableMultiRemove\n      ((existingSortBy && // Finally, detect if it should indeed be removed\n        existingSortBy.desc &&\n        !sortDescFirst) ||\n        (!existingSortBy.desc && sortDescFirst))\n    ) {\n      sortAction = 'remove'\n    }\n\n    if (sortAction === 'replace') {\n      newSortBy = [\n        {\n          id: columnId,\n          desc: hasDescDefined ? desc : sortDescFirst,\n        },\n      ]\n    } else if (sortAction === 'add') {\n      newSortBy = [\n        ...sortBy,\n        {\n          id: columnId,\n          desc: hasDescDefined ? desc : sortDescFirst,\n        },\n      ]\n      // Take latest n columns\n      newSortBy.splice(0, newSortBy.length - maxMultiSortColCount)\n    } else if (sortAction === 'toggle') {\n      // This flips (or sets) the\n      newSortBy = sortBy.map(d => {\n        if (d.id === columnId) {\n          return {\n            ...d,\n            desc: hasDescDefined ? desc : !existingSortBy.desc,\n          }\n        }\n        return d\n      })\n    } else if (sortAction === 'remove') {\n      newSortBy = sortBy.filter(d => d.id !== columnId)\n    }\n\n    return {\n      ...state,\n      sortBy: newSortBy,\n    }\n  }\n}\n\nfunction useInstance(instance) {\n  const {\n    data,\n    rows,\n    flatRows,\n    allColumns,\n    orderByFn = defaultOrderByFn,\n    sortTypes: userSortTypes,\n    manualSortBy,\n    defaultCanSort,\n    disableSortBy,\n    flatHeaders,\n    state: { sortBy },\n    dispatch,\n    plugins,\n    getHooks,\n    autoResetSortBy = true,\n  } = instance\n\n  ensurePluginOrder(\n    plugins,\n    ['useFilters', 'useGlobalFilter', 'useGroupBy', 'usePivotColumns'],\n    'useSortBy'\n  )\n\n  const setSortBy = React.useCallback(\n    sortBy => {\n      dispatch({ type: actions.setSortBy, sortBy })\n    },\n    [dispatch]\n  )\n\n  // Updates sorting based on a columnId, desc flag and multi flag\n  const toggleSortBy = React.useCallback(\n    (columnId, desc, multi) => {\n      dispatch({ type: actions.toggleSortBy, columnId, desc, multi })\n    },\n    [dispatch]\n  )\n\n  // use reference to avoid memory leak in #1608\n  const getInstance = useGetLatest(instance)\n\n  // Add the getSortByToggleProps method to columns and headers\n  flatHeaders.forEach(column => {\n    const {\n      accessor,\n      canSort: defaultColumnCanSort,\n      disableSortBy: columnDisableSortBy,\n      id,\n    } = column\n\n    const canSort = accessor\n      ? getFirstDefined(\n          columnDisableSortBy === true ? false : undefined,\n          disableSortBy === true ? false : undefined,\n          true\n        )\n      : getFirstDefined(defaultCanSort, defaultColumnCanSort, false)\n\n    column.canSort = canSort\n\n    if (column.canSort) {\n      column.toggleSortBy = (desc, multi) =>\n        toggleSortBy(column.id, desc, multi)\n\n      column.clearSortBy = () => {\n        dispatch({ type: actions.clearSortBy, columnId: column.id })\n      }\n    }\n\n    column.getSortByToggleProps = makePropGetter(\n      getHooks().getSortByToggleProps,\n      {\n        instance: getInstance(),\n        column,\n      }\n    )\n\n    const columnSort = sortBy.find(d => d.id === id)\n    column.isSorted = !!columnSort\n    column.sortedIndex = sortBy.findIndex(d => d.id === id)\n    column.isSortedDesc = column.isSorted ? columnSort.desc : undefined\n  })\n\n  const [sortedRows, sortedFlatRows] = React.useMemo(() => {\n    if (manualSortBy || !sortBy.length) {\n      return [rows, flatRows]\n    }\n\n    const sortedFlatRows = []\n\n    // Filter out sortBys that correspond to non existing columns\n    const availableSortBy = sortBy.filter(sort =>\n      allColumns.find(col => col.id === sort.id)\n    )\n\n    const sortData = rows => {\n      // Use the orderByFn to compose multiple sortBy's together.\n      // This will also perform a stable sorting using the row index\n      // if needed.\n      const sortedData = orderByFn(\n        rows,\n        availableSortBy.map(sort => {\n          // Support custom sorting methods for each column\n          const column = allColumns.find(d => d.id === sort.id)\n\n          if (!column) {\n            throw new Error(\n              `React-Table: Could not find a column with id: ${sort.id} while sorting`\n            )\n          }\n\n          const { sortType } = column\n\n          // Look up sortBy functions in this order:\n          // column function\n          // column string lookup on user sortType\n          // column string lookup on built-in sortType\n          // default function\n          // default string lookup on user sortType\n          // default string lookup on built-in sortType\n          const sortMethod =\n            isFunction(sortType) ||\n            (userSortTypes || {})[sortType] ||\n            sortTypes[sortType]\n\n          if (!sortMethod) {\n            throw new Error(\n              `React-Table: Could not find a valid sortType of '${sortType}' for column '${sort.id}'.`\n            )\n          }\n\n          // Return the correct sortFn.\n          // This function should always return in ascending order\n          return (a, b) => sortMethod(a, b, sort.id, sort.desc)\n        }),\n        // Map the directions\n        availableSortBy.map(sort => {\n          // Detect and use the sortInverted option\n          const column = allColumns.find(d => d.id === sort.id)\n\n          if (column && column.sortInverted) {\n            return sort.desc\n          }\n\n          return !sort.desc\n        })\n      )\n\n      // If there are sub-rows, sort them\n      sortedData.forEach(row => {\n        sortedFlatRows.push(row)\n        if (!row.subRows || row.subRows.length === 0) {\n          return\n        }\n        row.subRows = sortData(row.subRows)\n      })\n\n      return sortedData\n    }\n\n    return [sortData(rows), sortedFlatRows]\n  }, [\n    manualSortBy,\n    sortBy,\n    rows,\n    flatRows,\n    allColumns,\n    orderByFn,\n    userSortTypes,\n  ])\n\n  const getAutoResetSortBy = useGetLatest(autoResetSortBy)\n\n  useMountedLayoutEffect(() => {\n    if (getAutoResetSortBy()) {\n      dispatch({ type: actions.resetSortBy })\n    }\n  }, [manualSortBy ? null : data])\n\n  Object.assign(instance, {\n    preSortedRows: rows,\n    preSortedFlatRows: flatRows,\n    sortedRows,\n    sortedFlatRows,\n    rows: sortedRows,\n    flatRows: sortedFlatRows,\n    setSortBy,\n    toggleSortBy,\n  })\n}\n\nexport function defaultOrderByFn(arr, funcs, dirs) {\n  return [...arr].sort((rowA, rowB) => {\n    for (let i = 0; i < funcs.length; i += 1) {\n      const sortFn = funcs[i]\n      const desc = dirs[i] === false || dirs[i] === 'desc'\n      const sortInt = sortFn(rowA, rowB)\n      if (sortInt !== 0) {\n        return desc ? -sortInt : sortInt\n      }\n    }\n    return dirs[0] ? rowA.index - rowB.index : rowB.index - rowA.index\n  })\n}\n","import React from 'react'\n\n//\n\nimport {\n  actions,\n  ensurePluginOrder,\n  functionalUpdate,\n  useMountedLayoutEffect,\n  useGetLatest,\n} from '../publicUtils'\n\nimport { expandRows } from '../utils'\n\nconst pluginName = 'usePagination'\n\n// Actions\nactions.resetPage = 'resetPage'\nactions.gotoPage = 'gotoPage'\nactions.setPageSize = 'setPageSize'\n\nexport const usePagination = hooks => {\n  hooks.stateReducers.push(reducer)\n  hooks.useInstance.push(useInstance)\n}\n\nusePagination.pluginName = pluginName\n\nfunction reducer(state, action, previousState, instance) {\n  if (action.type === actions.init) {\n    return {\n      pageSize: 10,\n      pageIndex: 0,\n      ...state,\n    }\n  }\n\n  if (action.type === actions.resetPage) {\n    return {\n      ...state,\n      pageIndex: instance.initialState.pageIndex || 0,\n    }\n  }\n\n  if (action.type === actions.gotoPage) {\n    const { pageCount, page } = instance\n    const newPageIndex = functionalUpdate(action.pageIndex, state.pageIndex)\n    let canNavigate = false\n\n    if (newPageIndex > state.pageIndex) {\n      // next page\n      canNavigate =\n        pageCount === -1\n          ? page.length >= state.pageSize\n          : newPageIndex < pageCount\n    } else if (newPageIndex < state.pageIndex) {\n      // prev page\n      canNavigate = newPageIndex > -1\n    }\n\n    if (!canNavigate) {\n      return state\n    }\n\n    return {\n      ...state,\n      pageIndex: newPageIndex,\n    }\n  }\n\n  if (action.type === actions.setPageSize) {\n    const { pageSize } = action\n    const topRowIndex = state.pageSize * state.pageIndex\n    const pageIndex = Math.floor(topRowIndex / pageSize)\n\n    return {\n      ...state,\n      pageIndex,\n      pageSize,\n    }\n  }\n}\n\nfunction useInstance(instance) {\n  const {\n    rows,\n    autoResetPage = true,\n    manualExpandedKey = 'expanded',\n    plugins,\n    pageCount: userPageCount,\n    paginateExpandedRows = true,\n    expandSubRows = true,\n    state: {\n      pageSize,\n      pageIndex,\n      expanded,\n      globalFilter,\n      filters,\n      groupBy,\n      sortBy,\n    },\n    dispatch,\n    data,\n    manualPagination,\n  } = instance\n\n  ensurePluginOrder(\n    plugins,\n    ['useGlobalFilter', 'useFilters', 'useGroupBy', 'useSortBy', 'useExpanded'],\n    'usePagination'\n  )\n\n  const getAutoResetPage = useGetLatest(autoResetPage)\n\n  useMountedLayoutEffect(() => {\n    if (getAutoResetPage()) {\n      dispatch({ type: actions.resetPage })\n    }\n  }, [\n    dispatch,\n    manualPagination ? null : data,\n    globalFilter,\n    filters,\n    groupBy,\n    sortBy,\n  ])\n\n  const pageCount = manualPagination\n    ? userPageCount\n    : Math.ceil(rows.length / pageSize)\n\n  const pageOptions = React.useMemo(\n    () =>\n      pageCount > 0\n        ? [...new Array(pageCount)].fill(null).map((d, i) => i)\n        : [],\n    [pageCount]\n  )\n\n  const page = React.useMemo(() => {\n    let page\n\n    if (manualPagination) {\n      page = rows\n    } else {\n      const pageStart = pageSize * pageIndex\n      const pageEnd = pageStart + pageSize\n\n      page = rows.slice(pageStart, pageEnd)\n    }\n\n    if (paginateExpandedRows) {\n      return page\n    }\n\n    return expandRows(page, { manualExpandedKey, expanded, expandSubRows })\n  }, [\n    expandSubRows,\n    expanded,\n    manualExpandedKey,\n    manualPagination,\n    pageIndex,\n    pageSize,\n    paginateExpandedRows,\n    rows,\n  ])\n\n  const canPreviousPage = pageIndex > 0\n  const canNextPage =\n    pageCount === -1 ? page.length >= pageSize : pageIndex < pageCount - 1\n\n  const gotoPage = React.useCallback(\n    pageIndex => {\n      dispatch({ type: actions.gotoPage, pageIndex })\n    },\n    [dispatch]\n  )\n\n  const previousPage = React.useCallback(() => {\n    return gotoPage(old => old - 1)\n  }, [gotoPage])\n\n  const nextPage = React.useCallback(() => {\n    return gotoPage(old => old + 1)\n  }, [gotoPage])\n\n  const setPageSize = React.useCallback(\n    pageSize => {\n      dispatch({ type: actions.setPageSize, pageSize })\n    },\n    [dispatch]\n  )\n\n  Object.assign(instance, {\n    pageOptions,\n    pageCount,\n    page,\n    canPreviousPage,\n    canNextPage,\n    gotoPage,\n    previousPage,\n    nextPage,\n    setPageSize,\n  })\n}\n","/* istanbul ignore file */\n\nimport {\n  actions,\n  makePropGetter,\n  ensurePluginOrder,\n  useMountedLayoutEffect,\n  useGetLatest,\n} from '../publicUtils'\n\nimport { flattenColumns, getFirstDefined } from '../utils'\n\n// Actions\nactions.resetPivot = 'resetPivot'\nactions.togglePivot = 'togglePivot'\n\nexport const _UNSTABLE_usePivotColumns = hooks => {\n  hooks.getPivotToggleProps = [defaultGetPivotToggleProps]\n  hooks.stateReducers.push(reducer)\n  hooks.useInstanceAfterData.push(useInstanceAfterData)\n  hooks.allColumns.push(allColumns)\n  hooks.accessValue.push(accessValue)\n  hooks.materializedColumns.push(materializedColumns)\n  hooks.materializedColumnsDeps.push(materializedColumnsDeps)\n  hooks.visibleColumns.push(visibleColumns)\n  hooks.visibleColumnsDeps.push(visibleColumnsDeps)\n  hooks.useInstance.push(useInstance)\n  hooks.prepareRow.push(prepareRow)\n}\n\n_UNSTABLE_usePivotColumns.pluginName = 'usePivotColumns'\n\nconst defaultPivotColumns = []\n\nconst defaultGetPivotToggleProps = (props, { header }) => [\n  props,\n  {\n    onClick: header.canPivot\n      ? e => {\n          e.persist()\n          header.togglePivot()\n        }\n      : undefined,\n    style: {\n      cursor: header.canPivot ? 'pointer' : undefined,\n    },\n    title: 'Toggle Pivot',\n  },\n]\n\n// Reducer\nfunction reducer(state, action, previousState, instance) {\n  if (action.type === actions.init) {\n    return {\n      pivotColumns: defaultPivotColumns,\n      ...state,\n    }\n  }\n\n  if (action.type === actions.resetPivot) {\n    return {\n      ...state,\n      pivotColumns: instance.initialState.pivotColumns || defaultPivotColumns,\n    }\n  }\n\n  if (action.type === actions.togglePivot) {\n    const { columnId, value: setPivot } = action\n\n    const resolvedPivot =\n      typeof setPivot !== 'undefined'\n        ? setPivot\n        : !state.pivotColumns.includes(columnId)\n\n    if (resolvedPivot) {\n      return {\n        ...state,\n        pivotColumns: [...state.pivotColumns, columnId],\n      }\n    }\n\n    return {\n      ...state,\n      pivotColumns: state.pivotColumns.filter(d => d !== columnId),\n    }\n  }\n}\n\nfunction useInstanceAfterData(instance) {\n  instance.allColumns.forEach(column => {\n    column.isPivotSource = instance.state.pivotColumns.includes(column.id)\n  })\n}\n\nfunction allColumns(columns, { instance }) {\n  columns.forEach(column => {\n    column.isPivotSource = instance.state.pivotColumns.includes(column.id)\n    column.uniqueValues = new Set()\n  })\n  return columns\n}\n\nfunction accessValue(value, { column }) {\n  if (column.uniqueValues && typeof value !== 'undefined') {\n    column.uniqueValues.add(value)\n  }\n  return value\n}\n\nfunction materializedColumns(materialized, { instance }) {\n  const { allColumns, state } = instance\n\n  if (!state.pivotColumns.length || !state.groupBy || !state.groupBy.length) {\n    return materialized\n  }\n\n  const pivotColumns = state.pivotColumns\n    .map(id => allColumns.find(d => d.id === id))\n    .filter(Boolean)\n\n  const sourceColumns = allColumns.filter(\n    d =>\n      !d.isPivotSource &&\n      !state.groupBy.includes(d.id) &&\n      !state.pivotColumns.includes(d.id)\n  )\n\n  const buildPivotColumns = (depth = 0, parent, pivotFilters = []) => {\n    const pivotColumn = pivotColumns[depth]\n\n    if (!pivotColumn) {\n      return sourceColumns.map(sourceColumn => {\n        // TODO: We could offer support here for renesting pivoted\n        // columns inside copies of their header groups. For now,\n        // that seems like it would be (1) overkill on nesting, considering\n        // you already get nesting for every pivot level and (2)\n        // really hard. :)\n\n        return {\n          ...sourceColumn,\n          canPivot: false,\n          isPivoted: true,\n          parent,\n          depth: depth,\n          id: `${parent ? `${parent.id}.${sourceColumn.id}` : sourceColumn.id}`,\n          accessor: (originalRow, i, row) => {\n            if (pivotFilters.every(filter => filter(row))) {\n              return row.values[sourceColumn.id]\n            }\n          },\n        }\n      })\n    }\n\n    const uniqueValues = Array.from(pivotColumn.uniqueValues).sort()\n\n    return uniqueValues.map(uniqueValue => {\n      const columnGroup = {\n        ...pivotColumn,\n        Header:\n          pivotColumn.PivotHeader || typeof pivotColumn.header === 'string'\n            ? `${pivotColumn.Header}: ${uniqueValue}`\n            : uniqueValue,\n        isPivotGroup: true,\n        parent,\n        depth,\n        id: parent\n          ? `${parent.id}.${pivotColumn.id}.${uniqueValue}`\n          : `${pivotColumn.id}.${uniqueValue}`,\n        pivotValue: uniqueValue,\n      }\n\n      columnGroup.columns = buildPivotColumns(depth + 1, columnGroup, [\n        ...pivotFilters,\n        row => row.values[pivotColumn.id] === uniqueValue,\n      ])\n\n      return columnGroup\n    })\n  }\n\n  const newMaterialized = flattenColumns(buildPivotColumns())\n\n  return [...materialized, ...newMaterialized]\n}\n\nfunction materializedColumnsDeps(\n  deps,\n  {\n    instance: {\n      state: { pivotColumns, groupBy },\n    },\n  }\n) {\n  return [...deps, pivotColumns, groupBy]\n}\n\nfunction visibleColumns(visibleColumns, { instance: { state } }) {\n  visibleColumns = visibleColumns.filter(d => !d.isPivotSource)\n\n  if (state.pivotColumns.length && state.groupBy && state.groupBy.length) {\n    visibleColumns = visibleColumns.filter(\n      column => column.isGrouped || column.isPivoted\n    )\n  }\n\n  return visibleColumns\n}\n\nfunction visibleColumnsDeps(deps, { instance }) {\n  return [...deps, instance.state.pivotColumns, instance.state.groupBy]\n}\n\nfunction useInstance(instance) {\n  const {\n    columns,\n    allColumns,\n    flatHeaders,\n    // pivotFn = defaultPivotFn,\n    // manualPivot,\n    getHooks,\n    plugins,\n    dispatch,\n    autoResetPivot = true,\n    manaulPivot,\n    disablePivot,\n    defaultCanPivot,\n  } = instance\n\n  ensurePluginOrder(plugins, ['useGroupBy'], 'usePivotColumns')\n\n  const getInstance = useGetLatest(instance)\n\n  allColumns.forEach(column => {\n    const {\n      accessor,\n      defaultPivot: defaultColumnPivot,\n      disablePivot: columnDisablePivot,\n    } = column\n\n    column.canPivot = accessor\n      ? getFirstDefined(\n          column.canPivot,\n          columnDisablePivot === true ? false : undefined,\n          disablePivot === true ? false : undefined,\n          true\n        )\n      : getFirstDefined(\n          column.canPivot,\n          defaultColumnPivot,\n          defaultCanPivot,\n          false\n        )\n\n    if (column.canPivot) {\n      column.togglePivot = () => instance.togglePivot(column.id)\n    }\n\n    column.Aggregated = column.Aggregated || column.Cell\n  })\n\n  const togglePivot = (columnId, value) => {\n    dispatch({ type: actions.togglePivot, columnId, value })\n  }\n\n  flatHeaders.forEach(header => {\n    header.getPivotToggleProps = makePropGetter(\n      getHooks().getPivotToggleProps,\n      {\n        instance: getInstance(),\n        header,\n      }\n    )\n  })\n\n  const getAutoResetPivot = useGetLatest(autoResetPivot)\n\n  useMountedLayoutEffect(() => {\n    if (getAutoResetPivot()) {\n      dispatch({ type: actions.resetPivot })\n    }\n  }, [dispatch, manaulPivot ? null : columns])\n\n  Object.assign(instance, {\n    togglePivot,\n  })\n}\n\nfunction prepareRow(row) {\n  row.allCells.forEach(cell => {\n    // Grouped cells are in the pivotColumns and the pivot cell for the row\n    cell.isPivoted = cell.column.isPivoted\n  })\n}\n","import React from 'react'\n\nimport {\n  actions,\n  makePropGetter,\n  ensurePluginOrder,\n  useGetLatest,\n  useMountedLayoutEffect,\n} from '../publicUtils'\n\nconst pluginName = 'useRowSelect'\n\n// Actions\nactions.resetSelectedRows = 'resetSelectedRows'\nactions.toggleAllRowsSelected = 'toggleAllRowsSelected'\nactions.toggleRowSelected = 'toggleRowSelected'\nactions.toggleAllPageRowsSelected = 'toggleAllPageRowsSelected'\n\nexport const useRowSelect = hooks => {\n  hooks.getToggleRowSelectedProps = [defaultGetToggleRowSelectedProps]\n  hooks.getToggleAllRowsSelectedProps = [defaultGetToggleAllRowsSelectedProps]\n  hooks.getToggleAllPageRowsSelectedProps = [\n    defaultGetToggleAllPageRowsSelectedProps,\n  ]\n  hooks.stateReducers.push(reducer)\n  hooks.useInstance.push(useInstance)\n  hooks.prepareRow.push(prepareRow)\n}\n\nuseRowSelect.pluginName = pluginName\n\nconst defaultGetToggleRowSelectedProps = (props, { instance, row }) => {\n  const { manualRowSelectedKey = 'isSelected' } = instance\n  let checked = false\n\n  if (row.original && row.original[manualRowSelectedKey]) {\n    checked = true\n  } else {\n    checked = row.isSelected\n  }\n\n  return [\n    props,\n    {\n      onChange: e => {\n        row.toggleRowSelected(e.target.checked)\n      },\n      style: {\n        cursor: 'pointer',\n      },\n      checked,\n      title: 'Toggle Row Selected',\n      indeterminate: row.isSomeSelected,\n    },\n  ]\n}\n\nconst defaultGetToggleAllRowsSelectedProps = (props, { instance }) => [\n  props,\n  {\n    onChange: e => {\n      instance.toggleAllRowsSelected(e.target.checked)\n    },\n    style: {\n      cursor: 'pointer',\n    },\n    checked: instance.isAllRowsSelected,\n    title: 'Toggle All Rows Selected',\n    indeterminate: Boolean(\n      !instance.isAllRowsSelected &&\n        Object.keys(instance.state.selectedRowIds).length\n    ),\n  },\n]\n\nconst defaultGetToggleAllPageRowsSelectedProps = (props, { instance }) => [\n  props,\n  {\n    onChange(e) {\n      instance.toggleAllPageRowsSelected(e.target.checked)\n    },\n    style: {\n      cursor: 'pointer',\n    },\n    checked: instance.isAllPageRowsSelected,\n    title: 'Toggle All Current Page Rows Selected',\n    indeterminate: Boolean(\n      !instance.isAllPageRowsSelected &&\n        instance.page.some(({ id }) => instance.state.selectedRowIds[id])\n    ),\n  },\n]\n\n// eslint-disable-next-line max-params\nfunction reducer(state, action, previousState, instance) {\n  if (action.type === actions.init) {\n    return {\n      selectedRowIds: {},\n      ...state,\n    }\n  }\n\n  if (action.type === actions.resetSelectedRows) {\n    return {\n      ...state,\n      selectedRowIds: instance.initialState.selectedRowIds || {},\n    }\n  }\n\n  if (action.type === actions.toggleAllRowsSelected) {\n    const { value: setSelected } = action\n    const {\n      isAllRowsSelected,\n      rowsById,\n      nonGroupedRowsById = rowsById,\n    } = instance\n\n    const selectAll =\n      typeof setSelected !== 'undefined' ? setSelected : !isAllRowsSelected\n\n    // Only remove/add the rows that are visible on the screen\n    //  Leave all the other rows that are selected alone.\n    const selectedRowIds = Object.assign({}, state.selectedRowIds)\n\n    if (selectAll) {\n      Object.keys(nonGroupedRowsById).forEach(rowId => {\n        selectedRowIds[rowId] = true\n      })\n    } else {\n      Object.keys(nonGroupedRowsById).forEach(rowId => {\n        delete selectedRowIds[rowId]\n      })\n    }\n\n    return {\n      ...state,\n      selectedRowIds,\n    }\n  }\n\n  if (action.type === actions.toggleRowSelected) {\n    const { id, value: setSelected } = action\n    const { rowsById, selectSubRows = true, getSubRows } = instance\n    const isSelected = state.selectedRowIds[id]\n    const shouldExist =\n      typeof setSelected !== 'undefined' ? setSelected : !isSelected\n\n    if (isSelected === shouldExist) {\n      return state\n    }\n\n    const newSelectedRowIds = { ...state.selectedRowIds }\n\n    const handleRowById = id => {\n      const row = rowsById[id]\n\n      if (row) {\n        if (!row.isGrouped) {\n          if (shouldExist) {\n            newSelectedRowIds[id] = true\n          } else {\n            delete newSelectedRowIds[id]\n          }\n        }\n\n        if (selectSubRows && getSubRows(row)) {\n          return getSubRows(row).forEach(row => handleRowById(row.id))\n        }\n      }\n    }\n\n    handleRowById(id)\n\n    return {\n      ...state,\n      selectedRowIds: newSelectedRowIds,\n    }\n  }\n\n  if (action.type === actions.toggleAllPageRowsSelected) {\n    const { value: setSelected } = action\n    const {\n      page,\n      rowsById,\n      selectSubRows = true,\n      isAllPageRowsSelected,\n      getSubRows,\n    } = instance\n\n    const selectAll =\n      typeof setSelected !== 'undefined' ? setSelected : !isAllPageRowsSelected\n\n    const newSelectedRowIds = { ...state.selectedRowIds }\n\n    const handleRowById = id => {\n      const row = rowsById[id]\n\n      if (!row.isGrouped) {\n        if (selectAll) {\n          newSelectedRowIds[id] = true\n        } else {\n          delete newSelectedRowIds[id]\n        }\n      }\n\n      if (selectSubRows && getSubRows(row)) {\n        return getSubRows(row).forEach(row => handleRowById(row.id))\n      }\n    }\n\n    page.forEach(row => handleRowById(row.id))\n\n    return {\n      ...state,\n      selectedRowIds: newSelectedRowIds,\n    }\n  }\n  return state\n}\n\nfunction useInstance(instance) {\n  const {\n    data,\n    rows,\n    getHooks,\n    plugins,\n    rowsById,\n    nonGroupedRowsById = rowsById,\n    autoResetSelectedRows = true,\n    state: { selectedRowIds },\n    selectSubRows = true,\n    dispatch,\n    page,\n    getSubRows,\n  } = instance\n\n  ensurePluginOrder(\n    plugins,\n    ['useFilters', 'useGroupBy', 'useSortBy', 'useExpanded', 'usePagination'],\n    'useRowSelect'\n  )\n\n  const selectedFlatRows = React.useMemo(() => {\n    const selectedFlatRows = []\n\n    rows.forEach(row => {\n      const isSelected = selectSubRows\n        ? getRowIsSelected(row, selectedRowIds, getSubRows)\n        : !!selectedRowIds[row.id]\n      row.isSelected = !!isSelected\n      row.isSomeSelected = isSelected === null\n\n      if (isSelected) {\n        selectedFlatRows.push(row)\n      }\n    })\n\n    return selectedFlatRows\n  }, [rows, selectSubRows, selectedRowIds, getSubRows])\n\n  let isAllRowsSelected = Boolean(\n    Object.keys(nonGroupedRowsById).length && Object.keys(selectedRowIds).length\n  )\n\n  let isAllPageRowsSelected = isAllRowsSelected\n\n  if (isAllRowsSelected) {\n    if (Object.keys(nonGroupedRowsById).some(id => !selectedRowIds[id])) {\n      isAllRowsSelected = false\n    }\n  }\n\n  if (!isAllRowsSelected) {\n    if (page && page.length && page.some(({ id }) => !selectedRowIds[id])) {\n      isAllPageRowsSelected = false\n    }\n  }\n\n  const getAutoResetSelectedRows = useGetLatest(autoResetSelectedRows)\n\n  useMountedLayoutEffect(() => {\n    if (getAutoResetSelectedRows()) {\n      dispatch({ type: actions.resetSelectedRows })\n    }\n  }, [dispatch, data])\n\n  const toggleAllRowsSelected = React.useCallback(\n    value => dispatch({ type: actions.toggleAllRowsSelected, value }),\n    [dispatch]\n  )\n\n  const toggleAllPageRowsSelected = React.useCallback(\n    value => dispatch({ type: actions.toggleAllPageRowsSelected, value }),\n    [dispatch]\n  )\n\n  const toggleRowSelected = React.useCallback(\n    (id, value) => dispatch({ type: actions.toggleRowSelected, id, value }),\n    [dispatch]\n  )\n\n  const getInstance = useGetLatest(instance)\n\n  const getToggleAllRowsSelectedProps = makePropGetter(\n    getHooks().getToggleAllRowsSelectedProps,\n    { instance: getInstance() }\n  )\n\n  const getToggleAllPageRowsSelectedProps = makePropGetter(\n    getHooks().getToggleAllPageRowsSelectedProps,\n    { instance: getInstance() }\n  )\n\n  Object.assign(instance, {\n    selectedFlatRows,\n    isAllRowsSelected,\n    isAllPageRowsSelected,\n    toggleRowSelected,\n    toggleAllRowsSelected,\n    getToggleAllRowsSelectedProps,\n    getToggleAllPageRowsSelectedProps,\n    toggleAllPageRowsSelected,\n  })\n}\n\nfunction prepareRow(row, { instance }) {\n  row.toggleRowSelected = set => instance.toggleRowSelected(row.id, set)\n\n  row.getToggleRowSelectedProps = makePropGetter(\n    instance.getHooks().getToggleRowSelectedProps,\n    { instance: instance, row }\n  )\n}\n\nfunction getRowIsSelected(row, selectedRowIds, getSubRows) {\n  if (selectedRowIds[row.id]) {\n    return true\n  }\n\n  const subRows = getSubRows(row)\n\n  if (subRows && subRows.length) {\n    let allChildrenSelected = true\n    let someSelected = false\n\n    subRows.forEach(subRow => {\n      // Bail out early if we know both of these\n      if (someSelected && !allChildrenSelected) {\n        return\n      }\n\n      if (getRowIsSelected(subRow, selectedRowIds, getSubRows)) {\n        someSelected = true\n      } else {\n        allChildrenSelected = false\n      }\n    })\n    return allChildrenSelected ? true : someSelected ? null : false\n  }\n\n  return false\n}\n","import React from 'react'\n\nimport {\n  actions,\n  functionalUpdate,\n  useMountedLayoutEffect,\n  useGetLatest,\n} from '../publicUtils'\n\nconst defaultInitialRowStateAccessor = row => ({})\nconst defaultInitialCellStateAccessor = cell => ({})\n\n// Actions\nactions.setRowState = 'setRowState'\nactions.setCellState = 'setCellState'\nactions.resetRowState = 'resetRowState'\n\nexport const useRowState = hooks => {\n  hooks.stateReducers.push(reducer)\n  hooks.useInstance.push(useInstance)\n  hooks.prepareRow.push(prepareRow)\n}\n\nuseRowState.pluginName = 'useRowState'\n\nfunction reducer(state, action, previousState, instance) {\n  const {\n    initialRowStateAccessor = defaultInitialRowStateAccessor,\n    initialCellStateAccessor = defaultInitialCellStateAccessor,\n    rowsById,\n  } = instance\n\n  if (action.type === actions.init) {\n    return {\n      rowState: {},\n      ...state,\n    }\n  }\n\n  if (action.type === actions.resetRowState) {\n    return {\n      ...state,\n      rowState: instance.initialState.rowState || {},\n    }\n  }\n\n  if (action.type === actions.setRowState) {\n    const { rowId, value } = action\n\n    const oldRowState =\n      typeof state.rowState[rowId] !== 'undefined'\n        ? state.rowState[rowId]\n        : initialRowStateAccessor(rowsById[rowId])\n\n    return {\n      ...state,\n      rowState: {\n        ...state.rowState,\n        [rowId]: functionalUpdate(value, oldRowState),\n      },\n    }\n  }\n\n  if (action.type === actions.setCellState) {\n    const { rowId, columnId, value } = action\n\n    const oldRowState =\n      typeof state.rowState[rowId] !== 'undefined'\n        ? state.rowState[rowId]\n        : initialRowStateAccessor(rowsById[rowId])\n\n    const oldCellState =\n      typeof oldRowState?.cellState?.[columnId] !== 'undefined'\n        ? oldRowState.cellState[columnId]\n        : initialCellStateAccessor(\n            rowsById[rowId]?.cells?.find(cell => cell.column.id === columnId)\n          )\n\n    return {\n      ...state,\n      rowState: {\n        ...state.rowState,\n        [rowId]: {\n          ...oldRowState,\n          cellState: {\n            ...(oldRowState.cellState || {}),\n            [columnId]: functionalUpdate(value, oldCellState),\n          },\n        },\n      },\n    }\n  }\n}\n\nfunction useInstance(instance) {\n  const { autoResetRowState = true, data, dispatch } = instance\n\n  const setRowState = React.useCallback(\n    (rowId, value) =>\n      dispatch({\n        type: actions.setRowState,\n        rowId,\n        value,\n      }),\n    [dispatch]\n  )\n\n  const setCellState = React.useCallback(\n    (rowId, columnId, value) =>\n      dispatch({\n        type: actions.setCellState,\n        rowId,\n        columnId,\n        value,\n      }),\n    [dispatch]\n  )\n\n  const getAutoResetRowState = useGetLatest(autoResetRowState)\n\n  useMountedLayoutEffect(() => {\n    if (getAutoResetRowState()) {\n      dispatch({ type: actions.resetRowState })\n    }\n  }, [data])\n\n  Object.assign(instance, {\n    setRowState,\n    setCellState,\n  })\n}\n\nfunction prepareRow(row, { instance }) {\n  const {\n    initialRowStateAccessor = defaultInitialRowStateAccessor,\n    initialCellStateAccessor = defaultInitialCellStateAccessor,\n    state: { rowState },\n  } = instance\n\n  if (row) {\n    row.state =\n      typeof rowState[row.id] !== 'undefined'\n        ? rowState[row.id]\n        : initialRowStateAccessor(row)\n\n    row.setState = updater => {\n      return instance.setRowState(row.id, updater)\n    }\n\n    row.cells.forEach(cell => {\n      if (!row.state.cellState) {\n        row.state.cellState = {}\n      }\n\n      cell.state =\n        typeof row.state.cellState[cell.column.id] !== 'undefined'\n          ? row.state.cellState[cell.column.id]\n          : initialCellStateAccessor(cell)\n\n      cell.setState = updater => {\n        return instance.setCellState(row.id, cell.column.id, updater)\n      }\n    })\n  }\n}\n","import React from 'react'\n\nimport { functionalUpdate, actions } from '../publicUtils'\n\n// Actions\nactions.resetColumnOrder = 'resetColumnOrder'\nactions.setColumnOrder = 'setColumnOrder'\n\nexport const useColumnOrder = hooks => {\n  hooks.stateReducers.push(reducer)\n  hooks.visibleColumnsDeps.push((deps, { instance }) => {\n    return [...deps, instance.state.columnOrder]\n  })\n  hooks.visibleColumns.push(visibleColumns)\n  hooks.useInstance.push(useInstance)\n}\n\nuseColumnOrder.pluginName = 'useColumnOrder'\n\nfunction reducer(state, action, previousState, instance) {\n  if (action.type === actions.init) {\n    return {\n      columnOrder: [],\n      ...state,\n    }\n  }\n\n  if (action.type === actions.resetColumnOrder) {\n    return {\n      ...state,\n      columnOrder: instance.initialState.columnOrder || [],\n    }\n  }\n\n  if (action.type === actions.setColumnOrder) {\n    return {\n      ...state,\n      columnOrder: functionalUpdate(action.columnOrder, state.columnOrder),\n    }\n  }\n}\n\nfunction visibleColumns(\n  columns,\n  {\n    instance: {\n      state: { columnOrder },\n    },\n  }\n) {\n  // If there is no order, return the normal columns\n  if (!columnOrder || !columnOrder.length) {\n    return columns\n  }\n\n  const columnOrderCopy = [...columnOrder]\n\n  // If there is an order, make a copy of the columns\n  const columnsCopy = [...columns]\n\n  // And make a new ordered array of the columns\n  const columnsInOrder = []\n\n  // Loop over the columns and place them in order into the new array\n  while (columnsCopy.length && columnOrderCopy.length) {\n    const targetColumnId = columnOrderCopy.shift()\n    const foundIndex = columnsCopy.findIndex(d => d.id === targetColumnId)\n    if (foundIndex > -1) {\n      columnsInOrder.push(columnsCopy.splice(foundIndex, 1)[0])\n    }\n  }\n\n  // If there are any columns left, add them to the end\n  return [...columnsInOrder, ...columnsCopy]\n}\n\nfunction useInstance(instance) {\n  const { dispatch } = instance\n\n  instance.setColumnOrder = React.useCallback(\n    columnOrder => {\n      return dispatch({ type: actions.setColumnOrder, columnOrder })\n    },\n    [dispatch]\n  )\n}\n","import React from 'react'\n\nimport {\n  actions,\n  defaultColumn,\n  makePropGetter,\n  useGetLatest,\n  ensurePluginOrder,\n  useMountedLayoutEffect,\n} from '../publicUtils'\n\nimport { getFirstDefined, passiveEventSupported } from '../utils'\n\n// Default Column\ndefaultColumn.canResize = true\n\n// Actions\nactions.columnStartResizing = 'columnStartResizing'\nactions.columnResizing = 'columnResizing'\nactions.columnDoneResizing = 'columnDoneResizing'\nactions.resetResize = 'resetResize'\n\nexport const useResizeColumns = hooks => {\n  hooks.getResizerProps = [defaultGetResizerProps]\n  hooks.getHeaderProps.push({\n    style: {\n      position: 'relative',\n    },\n  })\n  hooks.stateReducers.push(reducer)\n  hooks.useInstance.push(useInstance)\n  hooks.useInstanceBeforeDimensions.push(useInstanceBeforeDimensions)\n}\n\nconst defaultGetResizerProps = (props, { instance, header }) => {\n  const { dispatch } = instance\n\n  const onResizeStart = (e, header) => {\n    let isTouchEvent = false\n    if (e.type === 'touchstart') {\n      // lets not respond to multiple touches (e.g. 2 or 3 fingers)\n      if (e.touches && e.touches.length > 1) {\n        return\n      }\n      isTouchEvent = true\n    }\n    const headersToResize = getLeafHeaders(header)\n    const headerIdWidths = headersToResize.map(d => [d.id, d.totalWidth])\n\n    const clientX = isTouchEvent ? Math.round(e.touches[0].clientX) : e.clientX\n\n    let raf\n    let mostRecentClientX\n\n    const dispatchEnd = () => {\n      window.cancelAnimationFrame(raf)\n      raf = null\n      dispatch({ type: actions.columnDoneResizing })\n    }\n    const dispatchMove = () => {\n      window.cancelAnimationFrame(raf)\n      raf = null\n      dispatch({ type: actions.columnResizing, clientX: mostRecentClientX })\n    }\n\n    const scheduleDispatchMoveOnNextAnimationFrame = clientXPos => {\n      mostRecentClientX = clientXPos\n      if (!raf) {\n        raf = window.requestAnimationFrame(dispatchMove)\n      }\n    }\n\n    const handlersAndEvents = {\n      mouse: {\n        moveEvent: 'mousemove',\n        moveHandler: e => scheduleDispatchMoveOnNextAnimationFrame(e.clientX),\n        upEvent: 'mouseup',\n        upHandler: e => {\n          document.removeEventListener(\n            'mousemove',\n            handlersAndEvents.mouse.moveHandler\n          )\n          document.removeEventListener(\n            'mouseup',\n            handlersAndEvents.mouse.upHandler\n          )\n          dispatchEnd()\n        },\n      },\n      touch: {\n        moveEvent: 'touchmove',\n        moveHandler: e => {\n          if (e.cancelable) {\n            e.preventDefault()\n            e.stopPropagation()\n          }\n          scheduleDispatchMoveOnNextAnimationFrame(e.touches[0].clientX)\n          return false\n        },\n        upEvent: 'touchend',\n        upHandler: e => {\n          document.removeEventListener(\n            handlersAndEvents.touch.moveEvent,\n            handlersAndEvents.touch.moveHandler\n          )\n          document.removeEventListener(\n            handlersAndEvents.touch.upEvent,\n            handlersAndEvents.touch.moveHandler\n          )\n          dispatchEnd()\n        },\n      },\n    }\n\n    const events = isTouchEvent\n      ? handlersAndEvents.touch\n      : handlersAndEvents.mouse\n    const passiveIfSupported = passiveEventSupported()\n      ? { passive: false }\n      : false\n    document.addEventListener(\n      events.moveEvent,\n      events.moveHandler,\n      passiveIfSupported\n    )\n    document.addEventListener(\n      events.upEvent,\n      events.upHandler,\n      passiveIfSupported\n    )\n\n    dispatch({\n      type: actions.columnStartResizing,\n      columnId: header.id,\n      columnWidth: header.totalWidth,\n      headerIdWidths,\n      clientX,\n    })\n  }\n\n  return [\n    props,\n    {\n      onMouseDown: e => e.persist() || onResizeStart(e, header),\n      onTouchStart: e => e.persist() || onResizeStart(e, header),\n      style: {\n        cursor: 'col-resize',\n      },\n      draggable: false,\n      role: 'separator',\n    },\n  ]\n}\n\nuseResizeColumns.pluginName = 'useResizeColumns'\n\nfunction reducer(state, action) {\n  if (action.type === actions.init) {\n    return {\n      columnResizing: {\n        columnWidths: {},\n      },\n      ...state,\n    }\n  }\n\n  if (action.type === actions.resetResize) {\n    return {\n      ...state,\n      columnResizing: {\n        columnWidths: {},\n      },\n    }\n  }\n\n  if (action.type === actions.columnStartResizing) {\n    const { clientX, columnId, columnWidth, headerIdWidths } = action\n\n    return {\n      ...state,\n      columnResizing: {\n        ...state.columnResizing,\n        startX: clientX,\n        headerIdWidths,\n        columnWidth,\n        isResizingColumn: columnId,\n      },\n    }\n  }\n\n  if (action.type === actions.columnResizing) {\n    const { clientX } = action\n    const { startX, columnWidth, headerIdWidths = [] } = state.columnResizing\n\n    const deltaX = clientX - startX\n    const percentageDeltaX = deltaX / columnWidth\n\n    const newColumnWidths = {}\n\n    headerIdWidths.forEach(([headerId, headerWidth]) => {\n      newColumnWidths[headerId] = Math.max(\n        headerWidth + headerWidth * percentageDeltaX,\n        0\n      )\n    })\n\n    return {\n      ...state,\n      columnResizing: {\n        ...state.columnResizing,\n        columnWidths: {\n          ...state.columnResizing.columnWidths,\n          ...newColumnWidths,\n        },\n      },\n    }\n  }\n\n  if (action.type === actions.columnDoneResizing) {\n    return {\n      ...state,\n      columnResizing: {\n        ...state.columnResizing,\n        startX: null,\n        isResizingColumn: null,\n      },\n    }\n  }\n}\n\nconst useInstanceBeforeDimensions = instance => {\n  const {\n    flatHeaders,\n    disableResizing,\n    getHooks,\n    state: { columnResizing },\n  } = instance\n\n  const getInstance = useGetLatest(instance)\n\n  flatHeaders.forEach(header => {\n    const canResize = getFirstDefined(\n      header.disableResizing === true ? false : undefined,\n      disableResizing === true ? false : undefined,\n      true\n    )\n\n    header.canResize = canResize\n    header.width =\n      columnResizing.columnWidths[header.id] ||\n      header.originalWidth ||\n      header.width\n    header.isResizing = columnResizing.isResizingColumn === header.id\n\n    if (canResize) {\n      header.getResizerProps = makePropGetter(getHooks().getResizerProps, {\n        instance: getInstance(),\n        header,\n      })\n    }\n  })\n}\n\nfunction useInstance(instance) {\n  const { plugins, dispatch, autoResetResize = true, columns } = instance\n\n  ensurePluginOrder(plugins, ['useAbsoluteLayout'], 'useResizeColumns')\n\n  const getAutoResetResize = useGetLatest(autoResetResize)\n  useMountedLayoutEffect(() => {\n    if (getAutoResetResize()) {\n      dispatch({ type: actions.resetResize })\n    }\n  }, [columns])\n\n  const resetResizing = React.useCallback(\n    () => dispatch({ type: actions.resetResize }),\n    [dispatch]\n  )\n\n  Object.assign(instance, {\n    resetResizing,\n  })\n}\n\nfunction getLeafHeaders(header) {\n  const leafHeaders = []\n  const recurseHeader = header => {\n    if (header.columns && header.columns.length) {\n      header.columns.map(recurseHeader)\n    }\n    leafHeaders.push(header)\n  }\n  recurseHeader(header)\n  return leafHeaders\n}\n","const cellStyles = {\n  position: 'absolute',\n  top: 0,\n}\n\nexport const useAbsoluteLayout = hooks => {\n  hooks.getTableBodyProps.push(getRowStyles)\n  hooks.getRowProps.push(getRowStyles)\n  hooks.getHeaderGroupProps.push(getRowStyles)\n  hooks.getFooterGroupProps.push(getRowStyles)\n\n  hooks.getHeaderProps.push((props, { column }) => [\n    props,\n    {\n      style: {\n        ...cellStyles,\n        left: `${column.totalLeft}px`,\n        width: `${column.totalWidth}px`,\n      },\n    },\n  ])\n\n  hooks.getCellProps.push((props, { cell }) => [\n    props,\n    {\n      style: {\n        ...cellStyles,\n        left: `${cell.column.totalLeft}px`,\n        width: `${cell.column.totalWidth}px`,\n      },\n    },\n  ])\n\n  hooks.getFooterProps.push((props, { column }) => [\n    props,\n    {\n      style: {\n        ...cellStyles,\n        left: `${column.totalLeft}px`,\n        width: `${column.totalWidth}px`,\n      },\n    },\n  ])\n}\n\nuseAbsoluteLayout.pluginName = 'useAbsoluteLayout'\n\nconst getRowStyles = (props, { instance }) => [\n  props,\n  {\n    style: {\n      position: 'relative',\n      width: `${instance.totalColumnsWidth}px`,\n    },\n  },\n]\n","const cellStyles = {\n  display: 'inline-block',\n  boxSizing: 'border-box',\n}\n\nconst getRowStyles = (props, { instance }) => [\n  props,\n  {\n    style: {\n      display: 'flex',\n      width: `${instance.totalColumnsWidth}px`,\n    },\n  },\n]\n\nexport const useBlockLayout = hooks => {\n  hooks.getRowProps.push(getRowStyles)\n  hooks.getHeaderGroupProps.push(getRowStyles)\n  hooks.getFooterGroupProps.push(getRowStyles)\n\n  hooks.getHeaderProps.push((props, { column }) => [\n    props,\n    {\n      style: {\n        ...cellStyles,\n        width: `${column.totalWidth}px`,\n      },\n    },\n  ])\n\n  hooks.getCellProps.push((props, { cell }) => [\n    props,\n    {\n      style: {\n        ...cellStyles,\n        width: `${cell.column.totalWidth}px`,\n      },\n    },\n  ])\n\n  hooks.getFooterProps.push((props, { column }) => [\n    props,\n    {\n      style: {\n        ...cellStyles,\n        width: `${column.totalWidth}px`,\n      },\n    },\n  ])\n}\n\nuseBlockLayout.pluginName = 'useBlockLayout'\n","export function useFlexLayout(hooks) {\n  hooks.getTableProps.push(getTableProps)\n  hooks.getRowProps.push(getRowStyles)\n  hooks.getHeaderGroupProps.push(getRowStyles)\n  hooks.getFooterGroupProps.push(getRowStyles)\n  hooks.getHeaderProps.push(getHeaderProps)\n  hooks.getCellProps.push(getCellProps)\n  hooks.getFooterProps.push(getFooterProps)\n}\n\nuseFlexLayout.pluginName = 'useFlexLayout'\n\nconst getTableProps = (props, { instance }) => [\n  props,\n  {\n    style: {\n      minWidth: `${instance.totalColumnsMinWidth}px`,\n    },\n  },\n]\n\nconst getRowStyles = (props, { instance }) => [\n  props,\n  {\n    style: {\n      display: 'flex',\n      flex: '1 0 auto',\n      minWidth: `${instance.totalColumnsMinWidth}px`,\n    },\n  },\n]\n\nconst getHeaderProps = (props, { column }) => [\n  props,\n  {\n    style: {\n      boxSizing: 'border-box',\n      flex: column.totalFlexWidth\n        ? `${column.totalFlexWidth} 0 auto`\n        : undefined,\n      minWidth: `${column.totalMinWidth}px`,\n      width: `${column.totalWidth}px`,\n    },\n  },\n]\n\nconst getCellProps = (props, { cell }) => [\n  props,\n  {\n    style: {\n      boxSizing: 'border-box',\n      flex: `${cell.column.totalFlexWidth} 0 auto`,\n      minWidth: `${cell.column.totalMinWidth}px`,\n      width: `${cell.column.totalWidth}px`,\n    },\n  },\n]\n\nconst getFooterProps = (props, { column }) => [\n  props,\n  {\n    style: {\n      boxSizing: 'border-box',\n      flex: column.totalFlexWidth\n        ? `${column.totalFlexWidth} 0 auto`\n        : undefined,\n      minWidth: `${column.totalMinWidth}px`,\n      width: `${column.totalWidth}px`,\n    },\n  },\n]\n","import { actions } from '../publicUtils'\n\n// Actions\nactions.columnStartResizing = 'columnStartResizing'\nactions.columnResizing = 'columnResizing'\nactions.columnDoneResizing = 'columnDoneResizing'\nactions.resetResize = 'resetResize'\n\nexport function useGridLayout(hooks) {\n  hooks.stateReducers.push(reducer)\n  hooks.getTableProps.push(getTableProps)\n  hooks.getHeaderProps.push(getHeaderProps)\n  hooks.getRowProps.push(getRowProps)\n}\n\nuseGridLayout.pluginName = 'useGridLayout'\n\nconst getTableProps = (props, { instance }) => {\n  const gridTemplateColumns = instance.visibleColumns.map(column => {\n    if (instance.state.gridLayout.columnWidths[column.id])\n      return `${instance.state.gridLayout.columnWidths[column.id]}px`\n    // When resizing, lock the width of all unset columns\n    // instead of using user-provided width or defaultColumn width,\n    // which could potentially be 'auto' or 'fr' units that don't scale linearly\n    if (instance.state.columnResizing?.isResizingColumn)\n      return `${instance.state.gridLayout.startWidths[column.id]}px`\n    if (typeof column.width === 'number') return `${column.width}px`\n    return column.width\n  })\n  return [\n    props,\n    {\n      style: {\n        display: `grid`,\n        gridTemplateColumns: gridTemplateColumns.join(` `),\n      },\n    },\n  ]\n}\n\nconst getHeaderProps = (props, { column }) => [\n  props,\n  {\n    id: `header-cell-${column.id}`,\n    style: {\n      position: `sticky`, //enables a scroll wrapper to be placed around the table and have sticky headers\n      gridColumn: `span ${column.totalVisibleHeaderCount}`,\n    },\n  },\n]\n\nconst getRowProps = (props, { row }) => {\n  if (row.isExpanded) {\n    return [\n      props,\n      {\n        style: {\n          gridColumn: `1 / ${row.cells.length + 1}`,\n        },\n      },\n    ]\n  }\n  return [props, {}]\n}\n\nfunction reducer(state, action, previousState, instance) {\n  if (action.type === actions.init) {\n    return {\n      gridLayout: {\n        columnWidths: {},\n      },\n      ...state,\n    }\n  }\n\n  if (action.type === actions.resetResize) {\n    return {\n      ...state,\n      gridLayout: {\n        columnWidths: {},\n      },\n    }\n  }\n\n  if (action.type === actions.columnStartResizing) {\n    const { columnId, headerIdWidths } = action\n    const columnWidth = getElementWidth(columnId)\n\n    if (columnWidth !== undefined) {\n      const startWidths = instance.visibleColumns.reduce(\n        (acc, column) => ({\n          ...acc,\n          [column.id]: getElementWidth(column.id),\n        }),\n        {}\n      )\n      const minWidths = instance.visibleColumns.reduce(\n        (acc, column) => ({\n          ...acc,\n          [column.id]: column.minWidth,\n        }),\n        {}\n      )\n      const maxWidths = instance.visibleColumns.reduce(\n        (acc, column) => ({\n          ...acc,\n          [column.id]: column.maxWidth,\n        }),\n        {}\n      )\n\n      const headerIdGridWidths = headerIdWidths.map(([headerId]) => [\n        headerId,\n        getElementWidth(headerId),\n      ])\n\n      return {\n        ...state,\n        gridLayout: {\n          ...state.gridLayout,\n          startWidths,\n          minWidths,\n          maxWidths,\n          headerIdGridWidths,\n          columnWidth,\n        },\n      }\n    } else {\n      return state\n    }\n  }\n\n  if (action.type === actions.columnResizing) {\n    const { clientX } = action\n    const { startX } = state.columnResizing\n    const {\n      columnWidth,\n      minWidths,\n      maxWidths,\n      headerIdGridWidths = [],\n    } = state.gridLayout\n\n    const deltaX = clientX - startX\n    const percentageDeltaX = deltaX / columnWidth\n\n    const newColumnWidths = {}\n\n    headerIdGridWidths.forEach(([headerId, headerWidth]) => {\n      newColumnWidths[headerId] = Math.min(\n        Math.max(\n          minWidths[headerId],\n          headerWidth + headerWidth * percentageDeltaX\n        ),\n        maxWidths[headerId]\n      )\n    })\n\n    return {\n      ...state,\n      gridLayout: {\n        ...state.gridLayout,\n        columnWidths: {\n          ...state.gridLayout.columnWidths,\n          ...newColumnWidths,\n        },\n      },\n    }\n  }\n\n  if (action.type === actions.columnDoneResizing) {\n    return {\n      ...state,\n      gridLayout: {\n        ...state.gridLayout,\n        startWidths: {},\n        minWidths: {},\n        maxWidths: {},\n      },\n    }\n  }\n}\n\nfunction getElementWidth(columnId) {\n  const width = document.getElementById(`header-cell-${columnId}`)?.offsetWidth\n\n  if (width !== undefined) {\n    return width\n  }\n}\n","if (process.env.NODE_ENV === 'production') {\n  module.exports = require('./dist/react-table.production.min.js')\n} else {\n  module.exports = require('./dist/react-table.development.js')\n}\n","var _typeof = require(\"./typeof.js\")[\"default\"];\nfunction _regeneratorRuntime() {\n  \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */\n  module.exports = _regeneratorRuntime = function _regeneratorRuntime() {\n    return e;\n  }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\n  var t,\n    e = {},\n    r = Object.prototype,\n    n = r.hasOwnProperty,\n    o = Object.defineProperty || function (t, e, r) {\n      t[e] = r.value;\n    },\n    i = \"function\" == typeof Symbol ? Symbol : {},\n    a = i.iterator || \"@@iterator\",\n    c = i.asyncIterator || \"@@asyncIterator\",\n    u = i.toStringTag || \"@@toStringTag\";\n  function define(t, e, r) {\n    return Object.defineProperty(t, e, {\n      value: r,\n      enumerable: !0,\n      configurable: !0,\n      writable: !0\n    }), t[e];\n  }\n  try {\n    define({}, \"\");\n  } catch (t) {\n    define = function define(t, e, r) {\n      return t[e] = r;\n    };\n  }\n  function wrap(t, e, r, n) {\n    var i = e && e.prototype instanceof Generator ? e : Generator,\n      a = Object.create(i.prototype),\n      c = new Context(n || []);\n    return o(a, \"_invoke\", {\n      value: makeInvokeMethod(t, r, c)\n    }), a;\n  }\n  function tryCatch(t, e, r) {\n    try {\n      return {\n        type: \"normal\",\n        arg: t.call(e, r)\n      };\n    } catch (t) {\n      return {\n        type: \"throw\",\n        arg: t\n      };\n    }\n  }\n  e.wrap = wrap;\n  var h = \"suspendedStart\",\n    l = \"suspendedYield\",\n    f = \"executing\",\n    s = \"completed\",\n    y = {};\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n  var p = {};\n  define(p, a, function () {\n    return this;\n  });\n  var d = Object.getPrototypeOf,\n    v = d && d(d(values([])));\n  v && v !== r && n.call(v, a) && (p = v);\n  var g = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(p);\n  function defineIteratorMethods(t) {\n    [\"next\", \"throw\", \"return\"].forEach(function (e) {\n      define(t, e, function (t) {\n        return this._invoke(e, t);\n      });\n    });\n  }\n  function AsyncIterator(t, e) {\n    function invoke(r, o, i, a) {\n      var c = tryCatch(t[r], t, o);\n      if (\"throw\" !== c.type) {\n        var u = c.arg,\n          h = u.value;\n        return h && \"object\" == _typeof(h) && n.call(h, \"__await\") ? e.resolve(h.__await).then(function (t) {\n          invoke(\"next\", t, i, a);\n        }, function (t) {\n          invoke(\"throw\", t, i, a);\n        }) : e.resolve(h).then(function (t) {\n          u.value = t, i(u);\n        }, function (t) {\n          return invoke(\"throw\", t, i, a);\n        });\n      }\n      a(c.arg);\n    }\n    var r;\n    o(this, \"_invoke\", {\n      value: function value(t, n) {\n        function callInvokeWithMethodAndArg() {\n          return new e(function (e, r) {\n            invoke(t, n, e, r);\n          });\n        }\n        return r = r ? r.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg();\n      }\n    });\n  }\n  function makeInvokeMethod(e, r, n) {\n    var o = h;\n    return function (i, a) {\n      if (o === f) throw new Error(\"Generator is already running\");\n      if (o === s) {\n        if (\"throw\" === i) throw a;\n        return {\n          value: t,\n          done: !0\n        };\n      }\n      for (n.method = i, n.arg = a;;) {\n        var c = n.delegate;\n        if (c) {\n          var u = maybeInvokeDelegate(c, n);\n          if (u) {\n            if (u === y) continue;\n            return u;\n          }\n        }\n        if (\"next\" === n.method) n.sent = n._sent = n.arg;else if (\"throw\" === n.method) {\n          if (o === h) throw o = s, n.arg;\n          n.dispatchException(n.arg);\n        } else \"return\" === n.method && n.abrupt(\"return\", n.arg);\n        o = f;\n        var p = tryCatch(e, r, n);\n        if (\"normal\" === p.type) {\n          if (o = n.done ? s : l, p.arg === y) continue;\n          return {\n            value: p.arg,\n            done: n.done\n          };\n        }\n        \"throw\" === p.type && (o = s, n.method = \"throw\", n.arg = p.arg);\n      }\n    };\n  }\n  function maybeInvokeDelegate(e, r) {\n    var n = r.method,\n      o = e.iterator[n];\n    if (o === t) return r.delegate = null, \"throw\" === n && e.iterator[\"return\"] && (r.method = \"return\", r.arg = t, maybeInvokeDelegate(e, r), \"throw\" === r.method) || \"return\" !== n && (r.method = \"throw\", r.arg = new TypeError(\"The iterator does not provide a '\" + n + \"' method\")), y;\n    var i = tryCatch(o, e.iterator, r.arg);\n    if (\"throw\" === i.type) return r.method = \"throw\", r.arg = i.arg, r.delegate = null, y;\n    var a = i.arg;\n    return a ? a.done ? (r[e.resultName] = a.value, r.next = e.nextLoc, \"return\" !== r.method && (r.method = \"next\", r.arg = t), r.delegate = null, y) : a : (r.method = \"throw\", r.arg = new TypeError(\"iterator result is not an object\"), r.delegate = null, y);\n  }\n  function pushTryEntry(t) {\n    var e = {\n      tryLoc: t[0]\n    };\n    1 in t && (e.catchLoc = t[1]), 2 in t && (e.finallyLoc = t[2], e.afterLoc = t[3]), this.tryEntries.push(e);\n  }\n  function resetTryEntry(t) {\n    var e = t.completion || {};\n    e.type = \"normal\", delete e.arg, t.completion = e;\n  }\n  function Context(t) {\n    this.tryEntries = [{\n      tryLoc: \"root\"\n    }], t.forEach(pushTryEntry, this), this.reset(!0);\n  }\n  function values(e) {\n    if (e || \"\" === e) {\n      var r = e[a];\n      if (r) return r.call(e);\n      if (\"function\" == typeof e.next) return e;\n      if (!isNaN(e.length)) {\n        var o = -1,\n          i = function next() {\n            for (; ++o < e.length;) if (n.call(e, o)) return next.value = e[o], next.done = !1, next;\n            return next.value = t, next.done = !0, next;\n          };\n        return i.next = i;\n      }\n    }\n    throw new TypeError(_typeof(e) + \" is not iterable\");\n  }\n  return GeneratorFunction.prototype = GeneratorFunctionPrototype, o(g, \"constructor\", {\n    value: GeneratorFunctionPrototype,\n    configurable: !0\n  }), o(GeneratorFunctionPrototype, \"constructor\", {\n    value: GeneratorFunction,\n    configurable: !0\n  }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, u, \"GeneratorFunction\"), e.isGeneratorFunction = function (t) {\n    var e = \"function\" == typeof t && t.constructor;\n    return !!e && (e === GeneratorFunction || \"GeneratorFunction\" === (e.displayName || e.name));\n  }, e.mark = function (t) {\n    return Object.setPrototypeOf ? Object.setPrototypeOf(t, GeneratorFunctionPrototype) : (t.__proto__ = GeneratorFunctionPrototype, define(t, u, \"GeneratorFunction\")), t.prototype = Object.create(g), t;\n  }, e.awrap = function (t) {\n    return {\n      __await: t\n    };\n  }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, c, function () {\n    return this;\n  }), e.AsyncIterator = AsyncIterator, e.async = function (t, r, n, o, i) {\n    void 0 === i && (i = Promise);\n    var a = new AsyncIterator(wrap(t, r, n, o), i);\n    return e.isGeneratorFunction(r) ? a : a.next().then(function (t) {\n      return t.done ? t.value : a.next();\n    });\n  }, defineIteratorMethods(g), define(g, u, \"Generator\"), define(g, a, function () {\n    return this;\n  }), define(g, \"toString\", function () {\n    return \"[object Generator]\";\n  }), e.keys = function (t) {\n    var e = Object(t),\n      r = [];\n    for (var n in e) r.push(n);\n    return r.reverse(), function next() {\n      for (; r.length;) {\n        var t = r.pop();\n        if (t in e) return next.value = t, next.done = !1, next;\n      }\n      return next.done = !0, next;\n    };\n  }, e.values = values, Context.prototype = {\n    constructor: Context,\n    reset: function reset(e) {\n      if (this.prev = 0, this.next = 0, this.sent = this._sent = t, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = t, this.tryEntries.forEach(resetTryEntry), !e) for (var r in this) \"t\" === r.charAt(0) && n.call(this, r) && !isNaN(+r.slice(1)) && (this[r] = t);\n    },\n    stop: function stop() {\n      this.done = !0;\n      var t = this.tryEntries[0].completion;\n      if (\"throw\" === t.type) throw t.arg;\n      return this.rval;\n    },\n    dispatchException: function dispatchException(e) {\n      if (this.done) throw e;\n      var r = this;\n      function handle(n, o) {\n        return a.type = \"throw\", a.arg = e, r.next = n, o && (r.method = \"next\", r.arg = t), !!o;\n      }\n      for (var o = this.tryEntries.length - 1; o >= 0; --o) {\n        var i = this.tryEntries[o],\n          a = i.completion;\n        if (\"root\" === i.tryLoc) return handle(\"end\");\n        if (i.tryLoc <= this.prev) {\n          var c = n.call(i, \"catchLoc\"),\n            u = n.call(i, \"finallyLoc\");\n          if (c && u) {\n            if (this.prev < i.catchLoc) return handle(i.catchLoc, !0);\n            if (this.prev < i.finallyLoc) return handle(i.finallyLoc);\n          } else if (c) {\n            if (this.prev < i.catchLoc) return handle(i.catchLoc, !0);\n          } else {\n            if (!u) throw new Error(\"try statement without catch or finally\");\n            if (this.prev < i.finallyLoc) return handle(i.finallyLoc);\n          }\n        }\n      }\n    },\n    abrupt: function abrupt(t, e) {\n      for (var r = this.tryEntries.length - 1; r >= 0; --r) {\n        var o = this.tryEntries[r];\n        if (o.tryLoc <= this.prev && n.call(o, \"finallyLoc\") && this.prev < o.finallyLoc) {\n          var i = o;\n          break;\n        }\n      }\n      i && (\"break\" === t || \"continue\" === t) && i.tryLoc <= e && e <= i.finallyLoc && (i = null);\n      var a = i ? i.completion : {};\n      return a.type = t, a.arg = e, i ? (this.method = \"next\", this.next = i.finallyLoc, y) : this.complete(a);\n    },\n    complete: function complete(t, e) {\n      if (\"throw\" === t.type) throw t.arg;\n      return \"break\" === t.type || \"continue\" === t.type ? this.next = t.arg : \"return\" === t.type ? (this.rval = this.arg = t.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === t.type && e && (this.next = e), y;\n    },\n    finish: function finish(t) {\n      for (var e = this.tryEntries.length - 1; e >= 0; --e) {\n        var r = this.tryEntries[e];\n        if (r.finallyLoc === t) return this.complete(r.completion, r.afterLoc), resetTryEntry(r), y;\n      }\n    },\n    \"catch\": function _catch(t) {\n      for (var e = this.tryEntries.length - 1; e >= 0; --e) {\n        var r = this.tryEntries[e];\n        if (r.tryLoc === t) {\n          var n = r.completion;\n          if (\"throw\" === n.type) {\n            var o = n.arg;\n            resetTryEntry(r);\n          }\n          return o;\n        }\n      }\n      throw new Error(\"illegal catch attempt\");\n    },\n    delegateYield: function delegateYield(e, r, n) {\n      return this.delegate = {\n        iterator: values(e),\n        resultName: r,\n        nextLoc: n\n      }, \"next\" === this.method && (this.arg = t), y;\n    }\n  }, e;\n}\nmodule.exports = _regeneratorRuntime, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _typeof(o) {\n  \"@babel/helpers - typeof\";\n\n  return (module.exports = _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) {\n    return typeof o;\n  } : function (o) {\n    return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o;\n  }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports), _typeof(o);\n}\nmodule.exports = _typeof, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","// TODO(Babel 8): Remove this file.\n\nvar runtime = require(\"../helpers/regeneratorRuntime\")();\nmodule.exports = runtime;\n\n// Copied from https://github.com/facebook/regenerator/blob/main/packages/runtime/runtime.js#L736=\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  if (typeof globalThis === \"object\") {\n    globalThis.regeneratorRuntime = runtime;\n  } else {\n    Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n  }\n}\n"],"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutPropertiesLoose","excluded","sourceKeys","keys","indexOf","_excluded2","_excluded3","_excluded4","_excluded5","Table","forwardRef","props","ref","styles","useMultiStyleConfig","_omitThemingProps","omitThemingProps","className","tableProps","React","StylesProvider","value","chakra","table","role","__css","cx","__DEV__","displayName","TableCaption","_props$placement","placement","rest","useStyles","caption","captionSide","Thead","thead","Tbody","tbody","Th","_ref2","isNumeric","th","Tr","tr","Td","_ref3","td","l","init","s","e","t","a","createElement","Fragment","c","Cell","width","minWidth","maxWidth","Number","MAX_SAFE_INTEGER","d","Array","n","reduce","style","o","r","f","concat","isArray","userProps","p","g","forEach","v","findIndex","pluginName","m","h","useRef","current","useCallback","y","document","useLayoutEffect","useEffect","w","R","u","console","info","Error","b","column","getPrototypeOf","isReactComponent","$$typeof","includes","description","S","map","x","parent","depth","columns","C","G","id","accessor","Header","split","JSON","stringify","E","get","push","String","replace","join","T","O","set","error","P","Footer","originalWidth","B","headers","some","reverse","originalId","placeholderOf","Map","I","F","A","manualExpandedKey","expanded","expandSubRows","isExpanded","original","canExpand","subRows","k","text","H","W","z","M","j","L","colSpan","totalVisibleHeaderCount","N","D","index","V","_","row","X","cell","q","useOptions","stateReducers","useControlledState","columnsDeps","allColumns","allColumnsDeps","accessValue","materializedColumns","materializedColumnsDeps","useInstanceAfterData","visibleColumns","visibleColumnsDeps","headerGroups","headerGroupsDeps","useInstanceBeforeDimensions","useInstance","prepareRow","getTableProps","getTableBodyProps","getHeaderGroupProps","getFooterGroupProps","getHeaderProps","getFooterProps","getRowProps","getCellProps","useFinalInstance","resetHiddenColumns","toggleHideColumn","setHiddenColumns","toggleHideAllColumns","K","getToggleHiddenProps","U","getToggleHideAllColumnsProps","$","J","Y","instance","state","hiddenColumns","Q","onChange","toggleHidden","checked","cursor","isVisible","title","allColumnsHidden","indeterminate","type","initialState","columnId","filter","flatHeaders","dispatch","getHooks","autoResetHiddenColumns","Z","ee","te","ne","oe","re","ie","defaultColumn","getSubRows","getRowId","stateReducer","ue","totalLeft","totalMinWidth","totalWidth","totalMaxWidth","totalFlexWidth","Math","min","max","canResize","le","data","rows","flatRows","rowsById","accessValueHooks","getInstance","originalSubRows","cells","values","resetExpanded","toggleRowExpanded","toggleAllRowsExpanded","se","getToggleAllRowsExpandedProps","ae","getToggleRowExpandedProps","ce","de","fe","pe","onClick","paginateExpandedRows","autoResetExpanded","plugins","Boolean","useMemo","preExpandedRows","expandedRows","expandedDepth","isAllRowsExpanded","ge","toLowerCase","autoRemove","ve","me","he","ye","every","we","Re","be","Se","Ce","xe","freeze","__proto__","exactText","exactTextCase","includesAll","includesSome","includesValue","exact","equals","between","resetFilters","setFilter","setAllFilters","Pe","Be","Ee","filters","filterValue","filterTypes","find","manualFilters","defaultCanFilter","disableFilters","autoResetFilters","canFilter","preFilteredRows","filteredRows","warn","preFilteredFlatRows","preFilteredRowsById","filteredFlatRows","filteredRowsById","resetGlobalFilter","setGlobalFilter","Ie","Fe","Ge","globalFilter","userFilterTypes","manualGlobalFilter","autoResetGlobalFilter","disableGlobalFilter","preGlobalFilteredRows","preGlobalFilteredFlatRows","preGlobalFilteredRowsById","globalFilteredRows","globalFilteredFlatRows","globalFilteredRowsById","Ae","ke","sum","minMax","average","median","floor","sort","unique","from","Set","uniqueCount","size","count","He","We","resetGroupBy","setGroupBy","toggleGroupBy","ze","getGroupByToggleProps","Te","Oe","groupBy","Me","Le","Ne","header","canGroupBy","persist","isGrouped","groupedIndex","je","groupByFn","De","manualGroupBy","aggregations","autoResetGroupBy","disableGroupBy","defaultCanGroupBy","defaultGroupBy","Aggregated","entries","aggregate","aggregateValue","groupByID","groupByVal","leafRows","preGroupedRows","preGroupedFlatRow","preGroupedRowsById","groupedRows","groupedFlatRows","groupedRowsById","onlyGroupedFlatRows","onlyGroupedRowsById","nonGroupedFlatRows","nonGroupedRowsById","allCells","isPlaceholder","isAggregated","Ve","_e","Xe","qe","isNaN","Ke","alphanumeric","shift","parseInt","datetime","getTime","basic","string","number","resetSortBy","setSortBy","toggleSortBy","clearSortBy","sortType","sortDescFirst","Ue","getSortByToggleProps","$e","Je","Ye","isMultiSortEvent","shiftKey","canSort","disableMultiSort","sortBy","desc","multi","disableSortRemove","disableMultiRemove","maxMultiSortColCount","splice","orderByFn","Qe","sortTypes","manualSortBy","defaultCanSort","disableSortBy","autoResetSortBy","isSorted","sortedIndex","isSortedDesc","sortInverted","preSortedRows","preSortedFlatRows","sortedRows","sortedFlatRows","resetPage","gotoPage","setPageSize","Ze","et","tt","pageSize","pageIndex","pageCount","page","autoResetPage","manualPagination","ceil","fill","slice","pageOptions","canPreviousPage","canNextPage","previousPage","nextPage","resetPivot","togglePivot","nt","getPivotToggleProps","rt","it","ut","lt","st","at","ct","dt","ft","pt","gt","ot","canPivot","pivotColumns","isPivotSource","uniqueValues","add","PivotHeader","isPivotGroup","pivotValue","isPivoted","autoResetPivot","manaulPivot","disablePivot","defaultCanPivot","defaultPivot","resetSelectedRows","toggleAllRowsSelected","toggleRowSelected","toggleAllPageRowsSelected","vt","getToggleRowSelectedProps","mt","getToggleAllRowsSelectedProps","ht","getToggleAllPageRowsSelectedProps","yt","wt","Rt","bt","manualRowSelectedKey","isSelected","isSomeSelected","isAllRowsSelected","selectedRowIds","isAllPageRowsSelected","selectSubRows","autoResetSelectedRows","selectedFlatRows","St","Ct","setRowState","setCellState","resetRowState","xt","Pt","Bt","Et","initialRowStateAccessor","initialCellStateAccessor","rowState","rowId","cellState","autoResetRowState","setState","resetColumnOrder","setColumnOrder","It","Ft","columnOrder","Gt","At","columnStartResizing","columnResizing","columnDoneResizing","resetResize","kt","getResizerProps","Ht","position","Wt","Tt","zt","touches","round","clientX","window","cancelAnimationFrame","requestAnimationFrame","mouse","moveEvent","moveHandler","upEvent","upHandler","removeEventListener","touch","cancelable","preventDefault","stopPropagation","passive","addEventListener","columnWidth","headerIdWidths","onMouseDown","onTouchStart","draggable","columnWidths","startX","isResizingColumn","disableResizing","isResizing","autoResetResize","resetResizing","Ot","top","Mt","jt","left","totalColumnsWidth","Lt","display","boxSizing","Nt","Dt","Vt","_t","Xt","qt","Kt","Ut","totalColumnsMinWidth","flex","$t","Zt","Jt","Yt","Qt","gridTemplateColumns","gridLayout","startWidths","gridColumn","en","minWidths","maxWidths","headerIdGridWidths","getElementById","offsetWidth","_UNSTABLE_usePivotColumns","actions","defaultGroupByFn","defaultOrderByFn","defaultRenderer","emptyRenderer","ensurePluginOrder","flexRender","functionalUpdate","loopHooks","makePropGetter","makeRenderer","reduceHooks","safeUseLayoutEffect","useAbsoluteLayout","useAsyncDebounce","_regeneratorRuntime","mark","wrap","prev","next","promise","Promise","resolve","reject","timeout","clearTimeout","setTimeout","t0","t1","sent","t2","catch","finish","stop","abrupt","useBlockLayout","useColumnOrder","useExpanded","useFilters","useFlexLayout","useGetLatest","useGlobalFilter","useGridLayout","useGroupBy","useMountedLayoutEffect","usePagination","useResizeColumns","useRowSelect","useRowState","useSortBy","useTable","hooks","action","useReducer","initialRows","totalColumnsMaxWidth","render","headerGroup","footerGroups","defineProperty","module","exports","_typeof","__esModule","Symbol","iterator","asyncIterator","toStringTag","define","enumerable","configurable","writable","Generator","create","Context","makeInvokeMethod","tryCatch","arg","GeneratorFunction","GeneratorFunctionPrototype","defineIteratorMethods","_invoke","AsyncIterator","invoke","__await","then","callInvokeWithMethodAndArg","done","method","delegate","maybeInvokeDelegate","_sent","dispatchException","TypeError","resultName","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","resetTryEntry","completion","reset","isGeneratorFunction","constructor","name","setPrototypeOf","awrap","async","pop","charAt","rval","handle","complete","delegateYield","runtime","regeneratorRuntime","accidentalStrictMode","globalThis","Function"],"sourceRoot":""}