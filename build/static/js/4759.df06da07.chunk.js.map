{"version":3,"file":"static/js/4759.df06da07.chunk.js","mappings":"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","sources":["components/card/Card.js","views/admin/textMsg/View.js"],"sourcesContent":["import { Box, useStyleConfig } from \"@chakra-ui/react\";\r\nfunction Card(props) {\r\n  const { variant, children, ...rest } = props;\r\n  const styles = useStyleConfig(\"Card\", { variant });\r\n\r\n  return (\r\n    <Box __css={styles} height={'100%'} {...rest}>\r\n      {children}\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default Card;\r\n","import { Box, Button, Flex, Grid, GridItem, Heading, Text } from \"@chakra-ui/react\";\r\nimport Card from \"components/card/Card\";\r\nimport { HSeparator } from \"components/separator/Separator\";\r\nimport moment from \"moment\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { IoIosArrowBack } from \"react-icons/io\";\r\nimport { Link, useParams } from \"react-router-dom\";\r\nimport { getApi } from \"services/api\";\r\n\r\n\r\n\r\nconst View = () => {\r\n\r\n    const param = useParams()\r\n\r\n    const [data, setData] = useState()\r\n    const user = JSON.parse(localStorage.getItem(\"user\"))\r\n\r\n    const fetchData = async () => {\r\n        let response = await getApi('api/text-msg/view/', param.id)\r\n        setData(response?.data);\r\n    }\r\n    useEffect(() => {\r\n        fetchData()\r\n    }, [])\r\n\r\n    return (\r\n        <>\r\n\r\n            <Grid templateColumns=\"repeat(4, 1fr)\" gap={3}>\r\n\r\n\r\n                <GridItem colSpan={{ base: 4 }}>\r\n                    <Card >\r\n                        <Grid templateColumns={{ base: \"1fr\" }} gap={4}>\r\n                            <GridItem colSpan={2}>\r\n                                <Box>\r\n                                    <Heading size=\"md\" mb={3}>\r\n                                        Text Msg View page\r\n                                    </Heading>\r\n                                    <HSeparator />\r\n                                </Box>\r\n                            </GridItem>\r\n                            <Grid templateColumns={'repeat(2, 1fr)'} gap={4}>\r\n                                <GridItem colSpan={{ base: 2, md: 1 }}>\r\n                                    <Text fontSize=\"sm\" fontWeight=\"bold\" color={'blackAlpha.900'}> Sender </Text>\r\n                                    <Text>{data?.senderName ? data?.senderName : ' - '}</Text>\r\n                                </GridItem>\r\n                                <GridItem colSpan={{ base: 2, md: 1 }}>\r\n                                    <Text fontSize=\"sm\" fontWeight=\"bold\" color={'blackAlpha.900'}> To </Text>\r\n                                    <Text>{data?.to ? data?.to : ' - '}</Text>\r\n                                </GridItem>\r\n                                <GridItem colSpan={{ base: 2, md: 1 }}>\r\n                                    <Text fontSize=\"sm\" fontWeight=\"bold\" color={'blackAlpha.900'}> Create to </Text>\r\n                                    <Link to={user?.role !== 'admin' ? `/contactView/${data?.createFor}` : `/admin/contactView/${data?.createFor}`}>\r\n                                        <Text color='green.400' sx={{ '&:hover': { color: 'blue.500', textDecoration: 'underline' } }}>{data?.createByName ? data?.createByName : ' - '}</Text>\r\n                                    </Link>\r\n                                </GridItem>\r\n                                <GridItem colSpan={{ base: 2, md: 1 }}>\r\n                                    <Text fontSize=\"sm\" fontWeight=\"bold\" color={'blackAlpha.900'}> Timestamp </Text>\r\n                                    <Text> {data?.timestamp ? moment(data?.timestamp).format('DD-MM-YYYY  h:mma ') : ' - '} [{data?.timestamp ? moment(data?.timestamp).toNow() : ' - '}]</Text>\r\n                                </GridItem>\r\n                                <GridItem colSpan={{ base: 2 }}>\r\n                                    <Text fontSize=\"sm\" fontWeight=\"bold\" color={'blackAlpha.900'}> Message </Text>\r\n                                    <pre style={{ whiteSpace: 'pre-wrap' }}>{data?.message ? data?.message : ' - '}</pre>\r\n                                </GridItem>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Card>\r\n                </GridItem>\r\n\r\n            </Grid>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default View;\r\n"],"names":["props","variant","children","rest","styles","useStyleConfig","_jsx","Box","__css","height","View","param","useParams","data","setData","useState","user","JSON","parse","localStorage","getItem","useEffect","async","response","getApi","id","fetchData","_Fragment","Grid","templateColumns","gap","GridItem","colSpan","base","Card","_jsxs","Heading","size","mb","HSeparator","md","Text","fontSize","fontWeight","color","senderName","to","Link","role","concat","createFor","sx","textDecoration","createByName","timestamp","moment","format","toNow","style","whiteSpace","message"],"sourceRoot":""}